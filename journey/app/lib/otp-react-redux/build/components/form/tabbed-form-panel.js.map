{"version":3,"sources":["tabbed-form-panel.js"],"names":["TabbedFormPanel","Component","mainPanelContent","setMainPanelContent","props","render","ModeIcon","_onEditDateTimeClick","_onEditSettingsClick","_onHideClick","PropTypes","elementType","isRequired","mapStateToProps","state","ownProps","otp","ui","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,eAAN,SAA8BC,gBAA9B,CAAwC;AAAA;AAAA;;AAAA,kDAKf,MAAM;AAC3B,YAAM;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAA4C,KAAKC,KAAvD;AACAD,MAAAA,mBAAmB,CAACD,gBAAgB,KAAK,eAArB,GAAuC,IAAvC,GAA8C,eAA/C,CAAnB;AACD,KARqC;;AAAA,kDAUf,MAAM;AAC3B,YAAM;AAAEA,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAA4C,KAAKC,KAAvD;AACAD,MAAAA,mBAAmB,CAACD,gBAAgB,KAAK,eAArB,GAAuC,IAAvC,GAA8C,eAA/C,CAAnB;AACD,KAbqC;;AAAA,0CAevB,MAAM,KAAKE,KAAL,CAAWD,mBAAX,CAA+B,IAA/B,CAfiB;AAAA;;AAiBtCE,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,QAAF;AAAYJ,MAAAA;AAAZ,QAAiC,KAAKE,KAA5C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAK,MAAA,SAAS,EAAG,YAAWF,gBAAgB,KAAK,eAArB,GAAuC,WAAvC,GAAqD,EAAG;AAApF,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,wBAAD;AACE,MAAA,OAAO,EAAE,KAAKK;AADhB,MADF,CADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAG,aAAYL,gBAAgB,KAAK,eAArB,GAAuC,WAAvC,GAAqD,EAAG;AAArF,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,wBAAD;AAAiB,MAAA,OAAO,EAAE,KAAKM;AAA/B,MADF,CADF,CARF,CADF,EAeG,CAACN,gBAAgB,KAAK,eAArB,IAAwCA,gBAAgB,KAAK,eAA9D,kBACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACGA,gBAAgB,KAAK,eAArB,iBAAyC,6BAAC,sBAAD,OAD5C,EAEGA,gBAAgB,KAAK,eAArB,iBAAyC,6BAAC,uCAAD;AAAgC,MAAA,QAAQ,EAAEI;AAA1C,MAF5C,eAGE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,sBAAD;AAAQ,MAAA,SAAS,EAAC,qCAAlB;AAAwD,MAAA,OAAO,EAAE,KAAKG;AAAtE,oBACE;AAAG,MAAA,SAAS,EAAC;AAAb,MADF,2BADF,CAHF,CAhBJ,CADF;AA6BD;;AAjDqC,C,CAoDxC;;;gBApDMT,e,eACe;AACjBM,EAAAA,QAAQ,EAAEI,mBAAUC,WAAV,CAAsBC;AADf,C;;AAqDrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLb,IAAAA,gBAAgB,EAAEY,KAAK,CAACE,GAAN,CAAUC,EAAV,CAAaf;AAD1B,GAAP;AAGD,CAJD;;AAMA,MAAMgB,kBAAkB,GAAG;AACzBf,EAAAA,mBAAmB,EAAnBA;AADyB,CAA3B;;eAIe,yBAAQU,eAAR,EAAyBK,kBAAzB,EAA6ClB,eAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport DateTimePreview from './date-time-preview'\nimport SettingsPreview from './settings-preview'\nimport DateTimeModal from './date-time-modal'\nimport ConnectedSettingsSelectorPanel from './connected-settings-selector-panel'\n\nimport { setMainPanelContent } from '../../actions/ui'\n\nclass TabbedFormPanel extends Component {\n  static propTypes = {\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  _onEditDateTimeClick = () => {\n    const { mainPanelContent, setMainPanelContent } = this.props\n    setMainPanelContent(mainPanelContent === 'EDIT_DATETIME' ? null : 'EDIT_DATETIME')\n  }\n\n  _onEditSettingsClick = () => {\n    const { mainPanelContent, setMainPanelContent } = this.props\n    setMainPanelContent(mainPanelContent === 'EDIT_SETTINGS' ? null : 'EDIT_SETTINGS')\n  }\n\n  _onHideClick = () => this.props.setMainPanelContent(null)\n\n  render () {\n    const { ModeIcon, mainPanelContent } = this.props\n\n    return (\n      <div className='tabbed-form-panel'>\n        <div className='tab-row'>\n          <div className={`tab left ${mainPanelContent === 'EDIT_DATETIME' ? ' selected' : ''}`}>\n            <div className='tab-content'>\n              <DateTimePreview\n                onClick={this._onEditDateTimeClick}\n              />\n            </div>\n          </div>\n          <div className={`tab right ${mainPanelContent === 'EDIT_SETTINGS' ? ' selected' : ''}`}>\n            <div className='tab-content'>\n              <SettingsPreview onClick={this._onEditSettingsClick} />\n            </div>\n          </div>\n        </div>\n        {(mainPanelContent === 'EDIT_DATETIME' || mainPanelContent === 'EDIT_SETTINGS') && (\n          <div className='active-panel'>\n            {mainPanelContent === 'EDIT_DATETIME' && (<DateTimeModal />)}\n            {mainPanelContent === 'EDIT_SETTINGS' && (<ConnectedSettingsSelectorPanel ModeIcon={ModeIcon} />)}\n            <div className='hide-button-row'>\n              <Button className='hide-button clear-button-formatting' onClick={this._onHideClick}>\n                <i className='fa fa-caret-up' /> \"$_hide_settings_$\"\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    mainPanelContent: state.otp.ui.mainPanelContent\n  }\n}\n\nconst mapDispatchToProps = {\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabbedFormPanel)\n"]}