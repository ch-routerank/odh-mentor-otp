{"version":3,"sources":["user-trip-settings.js"],"names":["UserTripSettings","Component","options","coreUtils","query","getTripOptionsFromQuery","props","defaults","clearDefaultSettings","storeDefaultSettings","render","config","resetForm","queryIsDefault","isNotDefaultQuery","rememberIsDisabled","marginBottom","_toggleStoredSettings","mapStateToProps","state","ownProps","currentQuery","user","otp","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAN,SAA+BC,gBAA/B,CAAyC;AAAA;AAAA;;AAAA,mDACf,MAAM;AAC5B,YAAMC,OAAO,GAAGC,aAAUC,KAAV,CAAgBC,uBAAhB,CAAwC,KAAKC,KAAL,CAAWF,KAAnD,CAAhB,CAD4B,CAE5B;;;AACA,UAAI,KAAKE,KAAL,CAAWC,QAAf,EAAyB,KAAKD,KAAL,CAAWE,oBAAX,GAAzB,KACK,KAAKF,KAAL,CAAWG,oBAAX,CAAgCP,OAAhC;AACN,KANsC;AAAA;;AAQvCQ,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,MADI;AAEJJ,MAAAA,QAFI;AAGJH,MAAAA,KAHI;AAIJQ,MAAAA;AAJI,QAKF,KAAKN,KALT,CADQ,CAQR;AACA;;AACA,UAAMO,cAAc,GAAG,CAACV,aAAUC,KAAV,CAAgBU,iBAAhB,CAAkCV,KAAlC,EAAyCO,MAAzC,CAAxB;AACA,UAAMI,kBAAkB,GAAGF,cAAc,IAAI,CAACN,QAA9C;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAqC,MAAA,SAAS,EAAC;AAA/C,oBACE,6BAAC,sBAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,EAAED,kBAHZ;AAIE,MAAA,OAAO,EAAE,KAAKE;AAJhB,OAKEV,QAAQ,gBACJ,wDAAM,6BAAC,aAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MAAN,4BADI,gBAEJ,wDAAM,6BAAC,aAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MAAN,qCAPN,CADF,eAUE,6BAAC,sBAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,EAAEM,cAAc,IAAI,CAACN,QAH/B;AAIE,MAAA,OAAO,EAAEK;AAJX,oBAME,6BAAC,aAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MANF,EAMuB,GANvB,aAOUL,QAAQ,GAAG,KAAH,GAAW,EAP7B,cAVF,CADF;AAsBD;;AA3CsC,C,CA8CzC;;;AAEA,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAET,IAAAA,MAAF;AAAUU,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAiCH,KAAK,CAACI,GAA7C;AACA,QAAM;AAAEhB,IAAAA;AAAF,MAAee,IAArB;AAEA,SAAO;AACLX,IAAAA,MADK;AAELJ,IAAAA,QAFK;AAGLH,IAAAA,KAAK,EAAEiB;AAHF,GAAP;AAKD,CATD;;AAWA,MAAMG,kBAAkB,GAAG;AACzBhB,EAAAA,oBAAoB,EAApBA,0BADyB;AAEzBI,EAAAA,SAAS,EAATA,eAFyB;AAGzBH,EAAAA,oBAAoB,EAApBA;AAHyB,CAA3B;;eAMe,yBAAQS,eAAR,EAAyBM,kBAAzB,EAA6CxB,gBAA7C,C","sourcesContent":["import coreUtils from '../../otp-ui/core-utils/src'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport Icon from '../narrative/icon'\nimport {\n  clearDefaultSettings,\n  resetForm,\n  storeDefaultSettings\n} from '../../actions/form'\n\n/**\n * This component contains the `Remember/Forget my trip options` and `Restore defaults` commands\n * that let the user save the selected trip settings such as mode choices,\n * walk/bike distance and speed, and trip optimization flags.\n * (The code below was previously embedded inside the `SettingsSelectorPanel` component.)\n */\nclass UserTripSettings extends Component {\n  _toggleStoredSettings = () => {\n    const options = coreUtils.query.getTripOptionsFromQuery(this.props.query)\n    // If user defaults are set, clear them. Otherwise, store them.\n    if (this.props.defaults) this.props.clearDefaultSettings()\n    else this.props.storeDefaultSettings(options)\n  }\n\n  render () {\n    const {\n      config,\n      defaults,\n      query,\n      resetForm\n    } = this.props\n\n    // Do not permit remembering trip options if they do not differ from the\n    // defaults and nothing has been stored\n    const queryIsDefault = !coreUtils.query.isNotDefaultQuery(query, config)\n    const rememberIsDisabled = queryIsDefault && !defaults\n\n    return (\n      <div style={{ marginBottom: '5px' }} className='store-settings pull-right'>\n        <Button\n          bsStyle='link'\n          bsSize='xsmall'\n          disabled={rememberIsDisabled}\n          onClick={this._toggleStoredSettings}\n        >{defaults\n            ? <span><Icon type='times' /> Dimentica Impostazioni</span>\n            : <span><Icon type='lock' /> Ricorda impostazioni di viaggio</span>\n          }</Button>\n        <Button\n          bsStyle='link'\n          bsSize='xsmall'\n          disabled={queryIsDefault && !defaults}\n          onClick={resetForm}\n        >\n          <Icon type='undo' />{' '}\n          Restore{defaults ? ' my' : ''} defaults\n        </Button>\n      </div>\n    )\n  }\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const { config, currentQuery, user } = state.otp\n  const { defaults } = user\n\n  return {\n    config,\n    defaults,\n    query: currentQuery\n  }\n}\n\nconst mapDispatchToProps = {\n  clearDefaultSettings,\n  resetForm,\n  storeDefaultSettings\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTripSettings)\n"]}