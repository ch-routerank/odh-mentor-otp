{"version":3,"sources":["navigation-bar.js"],"names":["MobileNavigationBar","Component","backScreen","onBackClicked","props","setMobileScreen","render","auth0Config","headerAction","headerText","showBackButton","title","_backButtonPressed","accountLinks","PropTypes","number","element","string","bool","func","mapStateToProps","state","ownProps","otp","config","persistence","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,mBAAN,SAAkCC,gBAAlC,CAA4C;AAAA;AAAA;;AAAA,gDAUrB,MAAM;AACzB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAgC,KAAKC,KAA3C;AACA,UAAIF,UAAJ,EAAgB,KAAKE,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWF,UAAtC,EAAhB,KACK,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyCA,aAAa;AAC5D,KAdyC;AAAA;;AAgB1CG,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,YAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMF,KAAKP,KANT;AAQA,wBACE,6BAAC,sBAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,QAAQ;AAAtB,oBAEE,6BAAC,sBAAD,CAAQ,MAAR,qBACE,6BAAC,sBAAD,CAAQ,KAAR,QACGM,cAAc,gBACX;AAAK,MAAA,SAAS,EAAC;AAAf,oBAA6B,6BAAC,yBAAD;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKE;AAA7C,MAA7B,CADW,gBAEX,6BAAC,gBAAD,OAHN,CADF,CAFF,eAWE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGH,UAAU,gBACP;AAAK,MAAA,SAAS,EAAC;AAAf,OAAqCA,UAArC,CADO,gBAEP,0CAAME,KAAN,CAHN,CAXF,EAkBGH,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OAAuCA,YAAvC,CADF,CAnBJ,EA8BGD,WAAW,iBACV,6BAAC,2BAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,KAAK,EAAEM;AAFT,MA/BJ,CADF;AAuCD;;AAhEyC,C,CAmE5C;;;gBAnEMb,mB,eACe;AACjBE,EAAAA,UAAU,EAAEY,mBAAUC,MADL;AAEjBP,EAAAA,YAAY,EAAEM,mBAAUE,OAFP;AAGjBP,EAAAA,UAAU,EAAEK,mBAAUG,MAHL;AAIjBP,EAAAA,cAAc,EAAEI,mBAAUI,IAJT;AAKjBb,EAAAA,eAAe,EAAES,mBAAUK,IALV;AAMjBR,EAAAA,KAAK,EAAEG,mBAAUE;AANA,C;;AAoErB,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLf,IAAAA,WAAW,EAAE,0BAAec,KAAK,CAACE,GAAN,CAAUC,MAAV,CAAiBC,WAAhC;AADR,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBrB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQe,eAAR,EAAyBM,kBAAzB,EAA6C1B,mBAA7C,C","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\nimport { connect } from 'react-redux'\n\nimport { setMobileScreen } from '../../actions/ui'\nimport AppMenu from '../app/app-menu'\nimport NavLoginButtonAuth0 from '../../components/user/nav-login-button-auth0'\nimport { accountLinks, getAuth0Config } from '../../util/auth'\n\nclass MobileNavigationBar extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    headerAction: PropTypes.element,\n    headerText: PropTypes.string,\n    showBackButton: PropTypes.bool,\n    setMobileScreen: PropTypes.func,\n    title: PropTypes.element\n  }\n\n  _backButtonPressed = () => {\n    const { backScreen, onBackClicked } = this.props\n    if (backScreen) this.props.setMobileScreen(this.props.backScreen)\n    else if (typeof onBackClicked === 'function') onBackClicked()\n  }\n\n  render () {\n    const {\n      auth0Config,\n      headerAction,\n      headerText,\n      showBackButton,\n      title\n    } = this.props\n\n    return (\n      <Navbar fluid fixedTop>\n\n        <Navbar.Header>\n          <Navbar.Brand>\n            {showBackButton\n              ? <div className='mobile-back'><FontAwesome name='arrow-left' onClick={this._backButtonPressed} /></div>\n              : <AppMenu />\n            }\n          </Navbar.Brand>\n        </Navbar.Header>\n\n        <div className='mobile-header'>\n          {headerText\n            ? <div className='mobile-header-text'>{headerText}</div>\n            : <div>{title}</div>\n          }\n        </div>\n\n        {headerAction && (\n          <div className='mobile-close'>\n            <div className='mobile-header-action'>{headerAction}</div>\n          </div>\n        )}\n\n        {/**\n          * HACK: Normally, NavLoginButtonAuth0 should be inside a <Nav> element,\n          * however, in mobile mode, react-bootstrap's <Nav> causes the\n          * submenus of this component to be displayed full-screen-width,\n          * and that behavior is not desired here.\n          */}\n        {auth0Config && (\n          <NavLoginButtonAuth0\n            id='login-control'\n            links={accountLinks}\n          />\n        )}\n      </Navbar>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth0Config: getAuth0Config(state.otp.config.persistence)\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNavigationBar)\n"]}