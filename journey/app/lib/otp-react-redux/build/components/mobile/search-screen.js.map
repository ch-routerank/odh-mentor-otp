{"version":3,"sources":["search-screen.js"],"names":["MobileSearchScreen","Component","props","setMobileScreen","MobileScreens","SET_FROM_LOCATION","SET_TO_LOCATION","SET_DATETIME","SET_OPTIONS","RESULTS_SUMMARY","render","_fromFieldClicked","_toFieldClicked","marginBottom","borderRight","_expandDateTimeClicked","_expandOptionsClicked","_planTripClicked","map","PropTypes","element","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,kBAAN,SAAiCC,gBAAjC,CAA2C;AAAA;AAAA;;AAAA,+CAMrB,MAAM;AACxB,WAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,iBAAzC;AACD,KARwC;;AAAA,6CAUvB,MAAM;AACtB,WAAKH,KAAL,CAAWC,eAAX,CAA2BC,kBAAcE,eAAzC;AACD,KAZwC;;AAAA,oDAchB,MAAM;AAC7B,WAAKJ,KAAL,CAAWC,eAAX,CAA2BC,kBAAcG,YAAzC;AACD,KAhBwC;;AAAA,mDAkBjB,MAAM;AAC5B,WAAKL,KAAL,CAAWC,eAAX,CAA2BC,kBAAcI,WAAzC;AACD,KApBwC;;AAAA,8CAsBtB,MAAM;AACvB,WAAKN,KAAL,CAAWC,eAAX,CAA2BC,kBAAcK,eAAzC;AACD,KAxBwC;AAAA;;AA0BzCC,EAAAA,MAAM,GAAI;AACR,wBACE,6BAAC,kBAAD,qBACE,6BAAC,sBAAD;AAAqB,MAAA,UAAU,EAAC;AAAhC,MADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,+BAAD;AACE,MAAA,YAAY,EAAC,MADf;AAEE,MAAA,gBAAgB,EAAE,KAAKC,iBAFzB;AAGE,MAAA,eAAe,EAAE;AAHnB,MADF,eAME,6BAAC,+BAAD;AACE,MAAA,YAAY,EAAC,IADf;AAEE,MAAA,gBAAgB,EAAE,KAAKC,eAFzB;AAGE,MAAA,eAAe,EAAE;AAHnB,MANF,eAYE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,qBAAD;AAAc,MAAA,OAAO,eAAE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAvB,MADF,CAZF,eAgBE,6BAAC,mBAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAAZ,oBACE,6BAAC,mBAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAAnB,oBACE,6BAAC,wBAAD;AACE,MAAA,OAAO,EAAE,KAAKC,sBADhB;AAEE,MAAA,UAAU;AAFZ,MADF,CADF,eAOE,6BAAC,mBAAD;AAAK,MAAA,EAAE,EAAE;AAAT,oBACE,6BAAC,wBAAD;AACE,MAAA,OAAO,EAAE,KAAKC,qBADhB;AAEE,MAAA,UAAU;AAFZ,MADF,CAPF,CAhBF,eA+BE,6BAAC,uBAAD;AAAgB,MAAA,OAAO,EAAE,KAAKC;AAA9B,MA/BF,CAFF,eAmCE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,mBAAD,OADF,CAnCF,CADF;AAyCD;;AApEwC,C,CAuE3C;;;gBAvEMjB,kB,eACe;AACjBkB,EAAAA,GAAG,EAAEC,mBAAUC,OADE;AAEjBjB,EAAAA,eAAe,EAAEgB,mBAAUE;AAFV,C;;AAwErB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;AACzBtB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQmB,eAAR,EAAyBG,kBAAzB,EAA6CzB,kBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\n\nimport DateTimePreview from '../form/date-time-preview'\nimport DefaultMap from '../map/default-map'\nimport LocationField from '../form/connected-location-field'\nimport PlanTripButton from '../form/plan-trip-button'\nimport SettingsPreview from '../form/settings-preview'\nimport SwitchButton from '../form/switch-button'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileSearchScreen extends Component {\n  static propTypes = {\n    map: PropTypes.element,\n    setMobileScreen: PropTypes.func\n  }\n\n  _fromFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_FROM_LOCATION)\n  }\n\n  _toFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_TO_LOCATION)\n  }\n\n  _expandDateTimeClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_DATETIME)\n  }\n\n  _expandOptionsClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_OPTIONS)\n  }\n\n  _planTripClicked = () => {\n    this.props.setMobileScreen(MobileScreens.RESULTS_SUMMARY)\n  }\n\n  render () {\n    return (\n      <MobileContainer>\n        <MobileNavigationBar headerText='$_plan_trip_$' />\n        <div className='search-settings mobile-padding'>\n          <LocationField\n            locationType='from'\n            onTextInputClick={this._fromFieldClicked}\n            showClearButton={false}\n          />\n          <LocationField\n            locationType='to'\n            onTextInputClick={this._toFieldClicked}\n            showClearButton={false}\n          />\n\n          <div className='switch-button-container-mobile'>\n            <SwitchButton content={<i className='fa fa-exchange fa-rotate-90' />} />\n          </div>\n\n          <Row style={{ marginBottom: 12 }}>\n            <Col xs={6} style={{ borderRight: '2px solid #ccc' }}>\n              <DateTimePreview\n                onClick={this._expandDateTimeClicked}\n                compressed\n              />\n            </Col>\n            <Col xs={6}>\n              <SettingsPreview\n                onClick={this._expandOptionsClicked}\n                compressed\n              />\n            </Col>\n          </Row>\n\n          <PlanTripButton onClick={this._planTripClicked} />\n        </div>\n        <div className='search-map'>\n          <DefaultMap />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileSearchScreen)\n"]}