{"version":3,"sources":["narrative-routing-results.js"],"names":["NarrativeRoutingResults","Component","componentDidUpdate","prevProps","itineraries","length","props","setMainPanelContent","error","render","itineraryClass","itineraryFooter","LegIcon","pending","mainPanelContent","PropTypes","func","elementType","isRequired","routingType","string","mapStateToProps","state","ownProps","activeSearch","otp","Boolean","ui","response","query","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA,MAAMA,uBAAN,SAAsCC,gBAAtC,CAAgD;AAO9CC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC7B,QAAI,CAAC,CAACA,SAAS,CAACC,WAAX,IAA0BD,SAAS,CAACC,WAAV,CAAsBC,MAAtB,KAAiC,CAA5D,KACC,KAAKC,KAAL,CAAWF,WAAX,IAA0B,KAAKE,KAAL,CAAWF,WAAX,CAAuBC,MAAvB,GAAgC,CAD/D,EACmE;AACjE,WAAKC,KAAL,CAAWC,mBAAX,CAA+B,IAA/B;AACD;;AACD,QAAI,CAACJ,SAAS,CAACK,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAnC,EAA0C,KAAKF,KAAL,CAAWC,mBAAX,CAA+B,IAA/B;AAC3C;;AAEDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAAED,MAAAA,KAAF;AAASE,MAAAA,cAAT;AAAyBC,MAAAA,eAAzB;AAA0CC,MAAAA,OAA1C;AAAmDC,MAAAA,OAAnD;AAA4DT,MAAAA,WAA5D;AAAyEU,MAAAA;AAAzE,QAA8F,KAAKR,KAAzG;AACA,QAAIO,OAAJ,EAAa,oBAAO,6BAAC,gBAAD,OAAP;AACb,QAAIL,KAAJ,EAAW,oBAAO,6BAAC,qBAAD,OAAP;AACX,QAAIM,gBAAJ,EAAsB,OAAO,IAAP;AAEtB;AAAA;AACE;AACA,mCAAC,0BAAD;AACE,QAAA,cAAc,EAAEJ,cADlB;AAEE,QAAA,eAAe,EAAEC,eAFnB;AAGE,QAAA,WAAW,EAAEP,WAHf;AAIE,QAAA,OAAO,EAAEQ;AAJX;AAFF;AASD;;AA9B6C;;gBAA1CZ,uB,eACe;AACjBU,EAAAA,cAAc,EAAEK,mBAAUC,IADT;AAEjBJ,EAAAA,OAAO,EAAEG,mBAAUE,WAAV,CAAsBC,UAFd;AAGjBC,EAAAA,WAAW,EAAEJ,mBAAUK;AAHN,C;;AAgCrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,YAAY,GAAG,4BAAgBF,KAAK,CAACG,GAAtB,CAArB;AACA,QAAMZ,OAAO,GAAGW,YAAY,GAAGE,OAAO,CAACF,YAAY,CAACX,OAAd,CAAV,GAAmC,KAA/D;AACA,SAAO;AACLC,IAAAA,gBAAgB,EAAEQ,KAAK,CAACG,GAAN,CAAUE,EAAV,CAAab,gBAD1B;AAELN,IAAAA,KAAK,EAAEgB,YAAY,IAAIA,YAAY,CAACI,QAA7B,IAAyCJ,YAAY,CAACI,QAAb,CAAsBpB,KAFjE;AAGLJ,IAAAA,WAAW,EAAE,iCAAqBkB,KAAK,CAACG,GAA3B,CAHR;AAILZ,IAAAA,OAJK;AAKLM,IAAAA,WAAW,EAAEK,YAAY,IAAIA,YAAY,CAACK,KAAb,CAAmBV;AAL3C,GAAP;AAOD,CAVD;;AAYA,MAAMW,kBAAkB,GAAG;AACzBvB,EAAAA,mBAAmB,EAAnBA;AADyB,CAA3B;;eAIe,yBAAQc,eAAR,EAAyBS,kBAAzB,EAA6C9B,uBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport Loading from './loading'\nimport TabbedItineraries from './tabbed-itineraries'\nimport ErrorMessage from '../form/error-message'\n\nimport { getActiveSearch, getActiveItineraries } from '../../util/state'\nimport { setMainPanelContent } from '../../actions/ui'\n\nclass NarrativeRoutingResults extends Component {\n  static propTypes = {\n    itineraryClass: PropTypes.func,\n    LegIcon: PropTypes.elementType.isRequired,\n    routingType: PropTypes.string\n  }\n\n  componentDidUpdate (prevProps) {\n    if ((!prevProps.itineraries || prevProps.itineraries.length === 0) &&\n        (this.props.itineraries && this.props.itineraries.length > 0)) {\n      this.props.setMainPanelContent(null)\n    }\n    if (!prevProps.error && this.props.error) this.props.setMainPanelContent(null)\n  }\n\n  render () {\n    const { error, itineraryClass, itineraryFooter, LegIcon, pending, itineraries, mainPanelContent } = this.props\n    if (pending) return <Loading />\n    if (error) return <ErrorMessage />\n    if (mainPanelContent) return null\n\n    return (\n      // TODO: If multiple routing types exist, do the check here.\n      <TabbedItineraries\n        itineraryClass={itineraryClass}\n        itineraryFooter={itineraryFooter}\n        itineraries={itineraries}\n        LegIcon={LegIcon}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const pending = activeSearch ? Boolean(activeSearch.pending) : false\n  return {\n    mainPanelContent: state.otp.ui.mainPanelContent,\n    error: activeSearch && activeSearch.response && activeSearch.response.error,\n    itineraries: getActiveItineraries(state.otp),\n    pending,\n    routingType: activeSearch && activeSearch.query.routingType\n  }\n}\n\nconst mapDispatchToProps = {\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NarrativeRoutingResults)\n"]}