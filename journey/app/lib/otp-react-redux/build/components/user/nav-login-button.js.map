{"version":3,"sources":["nav-login-button.js"],"names":["Avatar","styled","img","NavLoginButton","Component","render","className","id","links","onSignInClick","onSignOutClick","profile","style","props","commonProps","displayedName","nickname","name","picture","email","map","link","i","PropTypes","string","isRequired","arrayOf","linkType","func","shape","mapStateToProps","state","ownProps","mapDispatchToProps","routeTo"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;AAEA,MAAMA,MAAM,GAAGC,0BAAOC,GAAI;AAC1B;AACA;AACA;AACA,CAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BC,gBAA7B,CAAuC;AAmBrCC,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,SADI;AAEJC,MAAAA,EAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA,cALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA;AAPI,QAQF,KAAKC,KART;AAUA,UAAMC,WAAW,GAAG;AAClBR,MAAAA,SADkB;AAElBC,MAAAA,EAFkB;AAGlBK,MAAAA;AAHkB,KAApB,CAXQ,CAiBR;;AACA,QAAID,OAAJ,EAAa;AACX,YAAMI,aAAa,GAAGJ,OAAO,CAACK,QAAR,IAAoBL,OAAO,CAACM,IAAlD;AACA,0BACE,6BAAC,2BAAD,eACMH,WADN;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,KAAK,eAAE,wDACL,6BAAC,MAAD;AACE,UAAA,GAAG,EAAEC,aADP;AAEE,UAAA,GAAG,EAAEJ,OAAO,CAACO,OAFf;AAGE,UAAA,KAAK,EAAG,GAAEH,aAAc,MAAKJ,OAAO,CAACQ,KAAM;AAH7C,UADK;AAHT,uBAWE,6BAAC,wBAAD;AAAU,QAAA,MAAM;AAAhB,SAAkBJ,aAAlB,CAXF,EAaGP,KAAK,IAAIA,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBAAa,6BAAC,qBAAD;AAAc,QAAA,GAAG,EAAEA,CAAnB;AAAsB,QAAA,IAAI,EAAED;AAA5B,QAAvB,CAbZ,eAeE,6BAAC,wBAAD;AAAU,QAAA,OAAO;AAAjB,QAfF,eAiBE,6BAAC,wBAAD;AAAU,QAAA,QAAQ,EAAEX;AAApB,oBAjBF,CADF;AAqBD,KAzCO,CA2CR;;;AACA,wBACE,6BAAC,uBAAD,eAAaI,WAAb;AAA0B,MAAA,OAAO,EAAEL;AAAnC,kBADF;AAKD;;AApEoC,C,CAuEvC;;;gBAvEMN,c,eACe;AACjBI,EAAAA,EAAE,EAAEgB,mBAAUC,MAAV,CAAiBC,UADJ;AAEjBjB,EAAAA,KAAK,EAAEe,mBAAUG,OAAV,CAAkBC,sBAAlB,CAFU;AAGjBlB,EAAAA,aAAa,EAAEc,mBAAUK,IAAV,CAAeH,UAHb;AAIjBf,EAAAA,cAAc,EAAEa,mBAAUK,IAAV,CAAeH,UAJd;AAKjBd,EAAAA,OAAO,EAAEY,mBAAUM,KAAV,CAAgB;AACvBV,IAAAA,KAAK,EAAEI,mBAAUC,MAAV,CAAiBC,UADD;AAEvBR,IAAAA,IAAI,EAAEM,mBAAUC,MAAV,CAAiBC,UAFA;AAGvBT,IAAAA,QAAQ,EAAEO,mBAAUC,MAHG;AAIvBN,IAAAA,OAAO,EAAEK,mBAAUC;AAJI,GAAhB;AALQ,C;;gBADfrB,c,kBAckB;AACpBK,EAAAA,KAAK,EAAE,IADa;AAEpBG,EAAAA,OAAO,EAAE;AAFW,C;;AA2DxB,MAAMmB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAPA;AADyB,CAA3B;;eAIe,yBAAQJ,eAAR,EAAyBG,kBAAzB,EAA6C9B,cAA7C,C","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { MenuItem, NavDropdown, NavItem } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport { routeTo } from '../../actions/ui'\n\nimport LinkMenuItem, { linkType } from './link-menu-item'\n\nconst Avatar = styled.img`\n  height: 2em;\n  margin: -15px 0;\n  width: 2em;\n`\n\n/**\n * This component displays the sign-in status in the nav bar.\n * - When a user is not logged in: display 'Sign In' as a link or button.\n * - When a user is logged in, display an 'avatar' (retrieved from the profile prop)\n *   and a dropdown button so the user can access more options.\n */\nclass NavLoginButton extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    links: PropTypes.arrayOf(linkType),\n    onSignInClick: PropTypes.func.isRequired,\n    onSignOutClick: PropTypes.func.isRequired,\n    profile: PropTypes.shape({\n      email: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nickname: PropTypes.string,\n      picture: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    links: null,\n    profile: null\n  }\n\n  render () {\n    const {\n      className,\n      id,\n      links,\n      onSignInClick,\n      onSignOutClick,\n      profile,\n      style\n    } = this.props\n\n    const commonProps = {\n      className,\n      id,\n      style\n    }\n\n    // If a profile is passed (a user is logged in), display avatar and drop-down menu.\n    if (profile) {\n      const displayedName = profile.nickname || profile.name\n      return (\n        <NavDropdown\n          {...commonProps}\n          pullRight\n          title={<span>\n            <Avatar\n              alt={displayedName}\n              src={profile.picture}\n              title={`${displayedName}\\n(${profile.email})`}\n            />\n          </span>\n          }>\n          <MenuItem header>{displayedName}</MenuItem>\n\n          {links && links.map((link, i) => <LinkMenuItem key={i} link={link} />)}\n\n          <MenuItem divider />\n\n          <MenuItem onSelect={onSignOutClick}>Sign out</MenuItem>\n        </NavDropdown>\n      )\n    }\n\n    // Display the sign-in link if no profile is passed (user is not logged in).\n    return (\n      <NavItem {...commonProps} onClick={onSignInClick}>\n        Sign in\n      </NavItem>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  routeTo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavLoginButton)\n"]}