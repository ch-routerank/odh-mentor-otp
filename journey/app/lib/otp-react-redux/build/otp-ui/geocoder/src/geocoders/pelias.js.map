{"version":3,"sources":["pelias.js"],"names":["PeliasGeocoder","Geocoder","getAutocompleteQuery","query","apiKey","baseUrl","boundary","focusPoint","options","sources","geocoderConfig","url","undefined","getSearchQuery","format","rewriteReverseResponse","response","lat","lon","isomorphicMapzenSearchQuery","firstFeature","name","label","rawGeocodedFeature"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,cAAN,SAA6BC,yBAA7B,CAAsC;AACnD;AACF;AACA;AACA;AACEC,EAAAA,oBAAoB,CAACC,KAAD,EAAQ;AAC1B,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,cAPT;AAQA,WAAO;AACLN,MAAAA,MADK;AAELE,MAAAA,QAFK;AAGLC,MAAAA,UAHK;AAILC,MAAAA,OAJK;AAKL;AACA;AACA;AACAC,MAAAA,OAAO,EAAEA,OAAO,IAAI,IARf;AASLE,MAAAA,GAAG,EAAEN,OAAO,GAAI,GAAEA,OAAQ,eAAd,GAA+BO,SATtC;AAUL,SAAGT;AAVE,KAAP;AAYD;AAED;AACF;AACA;AACA;;;AACEU,EAAAA,cAAc,CAACV,KAAD,EAAQ;AACpB,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,cAPT;AAQA,WAAO;AACLN,MAAAA,MADK;AAELE,MAAAA,QAFK;AAGLC,MAAAA,UAHK;AAILC,MAAAA,OAJK;AAKL;AACA;AACA;AACAC,MAAAA,OAAO,EAAEA,OAAO,IAAI,IARf;AASLE,MAAAA,GAAG,EAAEN,OAAO,GAAI,GAAEA,OAAQ,SAAd,GAAyBO,SAThC;AAULE,MAAAA,MAAM,EAAE,KAVH;AAUU;AACf,SAAGX;AAXE,KAAP;AAaD;AAED;AACF;AACA;AACA;;;AACEY,EAAAA,sBAAsB,CAACC,QAAD,EAAW;AAC/B,UAAM;AACJ,mBAAaC,GADT;AAEJ,mBAAaC;AAFT,QAGFF,QAAQ,CAACG,2BAHb;AAIA,UAAMC,YAAY,GAAGJ,QAAQ,CAAC,CAAD,CAA7B;AACA,WAAO;AACLC,MAAAA,GADK;AAELC,MAAAA,GAFK;AAGLG,MAAAA,IAAI,EAAED,YAAY,CAACE,KAHd;AAILC,MAAAA,kBAAkB,EAAEH;AAJf,KAAP;AAMD;;AAxEkD","sourcesContent":["import Geocoder from \"./abstract-geocoder\";\n\n/**\n * Geocoder implementation for the Pelias geocoder.\n * See https://pelias.io\n *\n * @extends Geocoder\n */\nexport default class PeliasGeocoder extends Geocoder {\n  /**\n   * Generate an autocomplete query specifically for the Pelias API. The\n   * `sources` parameter is a Pelias-specific option.\n   */\n  getAutocompleteQuery(query) {\n    const {\n      apiKey,\n      baseUrl,\n      boundary,\n      focusPoint,\n      options,\n      sources\n    } = this.geocoderConfig;\n    return {\n      apiKey,\n      boundary,\n      focusPoint,\n      options,\n      // explicitly send over null for sources if provided sources is not truthy\n      // in order to avoid default isomorphic-mapzen-search sources form being\n      // applied\n      sources: sources || null,\n      url: baseUrl ? `${baseUrl}/autocomplete` : undefined,\n      ...query\n    };\n  }\n\n  /**\n   * Generate a search query specifically for the Pelias API. The\n   * `sources` parameter is a Pelias-specific option.\n   */\n  getSearchQuery(query) {\n    const {\n      apiKey,\n      baseUrl,\n      boundary,\n      focusPoint,\n      options,\n      sources\n    } = this.geocoderConfig;\n    return {\n      apiKey,\n      boundary,\n      focusPoint,\n      options,\n      // explicitly send over null for sources if provided sources is not truthy\n      // in order to avoid default isomorphic-mapzen-search sources form being\n      // applied\n      sources: sources || null,\n      url: baseUrl ? `${baseUrl}/search` : undefined,\n      format: false, // keep as returned GeoJSON,\n      ...query\n    };\n  }\n\n  /**\n   * Rewrite the response into an application-specific data format using the\n   * first feature returned from the geocoder.\n   */\n  rewriteReverseResponse(response) {\n    const {\n      \"point.lat\": lat,\n      \"point.lon\": lon\n    } = response.isomorphicMapzenSearchQuery;\n    const firstFeature = response[0];\n    return {\n      lat,\n      lon,\n      name: firstFeature.label,\n      rawGeocodedFeature: firstFeature\n    };\n  }\n}\n"]}