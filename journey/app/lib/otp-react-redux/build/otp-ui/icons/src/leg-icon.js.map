{"version":3,"sources":["leg-icon.js"],"names":["companyLookup","biketown","Biketown","bird","Bird","bolt","Bolt","car2go","Car2go","gruv","Gruv","lime","Lime","lyft","Lyft","razor","Razor","shared","Shared","spin","Spin","uber","Uber","getCompanyIcon","name","toLowerCase","LegIcon","leg","ModeIcon","props","iconStr","mode","rentedCar","from","networks","tncData","company","rentedBike","rentedVehicle","CompanyIcon","startsWith","propTypes","legType","isRequired","PropTypes","elementType"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAEC,qBADU;AAEpBC,EAAAA,IAAI,EAAEC,iBAFc;AAGpBC,EAAAA,IAAI,EAAEC,iBAHc;AAIpBC,EAAAA,MAAM,EAAEC,mBAJY;AAKpBC,EAAAA,IAAI,EAAEC,iBALc;AAMpBC,EAAAA,IAAI,EAAEC,iBANc;AAOpBC,EAAAA,IAAI,EAAEC,iBAPc;AAQpBC,EAAAA,KAAK,EAAEC,kBARa;AASpBC,EAAAA,MAAM,EAAEC,mBATY;AAUpBC,EAAAA,IAAI,EAAEC,iBAVc;AAWpBC,EAAAA,IAAI,EAAEC;AAXc,CAAtB;;AAcA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOxB,aAAa,CAACwB,IAAI,CAACC,WAAL,EAAD,CAApB;AACD;;AAED,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiB,KAAGC;AAApB,CAAD,KAAiC;AAC/C,MAAIC,OAAO,GAAGH,GAAG,CAACI,IAAlB;;AACA,MAAID,OAAO,KAAK,KAAZ,IAAqBH,GAAG,CAACK,SAA7B,EAAwC;AACtCF,IAAAA,OAAO,GAAGH,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkB,CAAlB,CAAV;AACD,GAFD,MAEO,IAAIJ,OAAO,KAAK,KAAZ,IAAqBH,GAAG,CAACQ,OAA7B,EAAsC;AAC3CL,IAAAA,OAAO,GAAGH,GAAG,CAACQ,OAAJ,CAAYC,OAAtB;AACD,GAFM,MAEA,IAAIN,OAAO,KAAK,SAAZ,IAAyBH,GAAG,CAACU,UAA7B,IAA2CV,GAAG,CAACM,IAAJ,CAASC,QAAxD,EAAkE;AACvEJ,IAAAA,OAAO,GAAGH,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkB,CAAlB,CAAV;AACD,GAFM,MAEA,IACLJ,OAAO,KAAK,eAAZ,IACAH,GAAG,CAACW,aADJ,IAEAX,GAAG,CAACM,IAAJ,CAASC,QAHJ,EAIL;AACAJ,IAAAA,OAAO,GAAGH,GAAG,CAACM,IAAJ,CAASC,QAAT,CAAkB,CAAlB,CAAV;AACD,GAd8C,CAgB/C;;;AACA,QAAMK,WAAW,GAAGhB,cAAc,CAACO,OAAD,CAAlC;AACA,MAAIS,WAAJ,EAAiB,oBAAO,6BAAC,WAAD,EAAiBV,KAAjB,CAAP,CAlB8B,CAoB/C;;AACA,MAAIC,OAAO,IAAIA,OAAO,CAACU,UAAR,CAAmB,KAAnB,CAAf,EAA0CV,OAAO,GAAG,KAAV;AAE1C,sBAAO,6BAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,KAA6BD,KAA7B,EAAP;AACD,CAxBD;;AA0BAH,OAAO,CAACe,SAAR,GAAoB;AAClBd,EAAAA,GAAG,EAAEe,eAAQC,UADK;AAElBf,EAAAA,QAAQ,EAAEgB,mBAAUC,WAAV,CAAsBF;AAFd,CAApB;eAKejB,O","sourcesContent":["import { legType } from \"../../core-utils/src/types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Biketown from \"./companies/biketown-icon\";\nimport Bird from \"./companies/bird-icon\";\nimport Bolt from \"./companies/bolt-icon\";\nimport Car2go from \"./companies/car2go-icon\";\nimport Gruv from \"./companies/gruv-icon\";\nimport Lime from \"./companies/lime-icon\";\nimport Lyft from \"./companies/lyft-icon\";\nimport Razor from \"./companies/razor-icon\";\nimport Shared from \"./companies/shared-icon\";\nimport Spin from \"./companies/spin-icon\";\nimport Uber from \"./companies/uber-icon\";\n\nconst companyLookup = {\n  biketown: Biketown,\n  bird: Bird,\n  bolt: Bolt,\n  car2go: Car2go,\n  gruv: Gruv,\n  lime: Lime,\n  lyft: Lyft,\n  razor: Razor,\n  shared: Shared,\n  spin: Spin,\n  uber: Uber\n};\n\nfunction getCompanyIcon(name) {\n  return companyLookup[name.toLowerCase()];\n}\n\nconst LegIcon = ({ leg, ModeIcon, ...props }) => {\n  let iconStr = leg.mode;\n  if (iconStr === \"CAR\" && leg.rentedCar) {\n    iconStr = leg.from.networks[0];\n  } else if (iconStr === \"CAR\" && leg.tncData) {\n    iconStr = leg.tncData.company;\n  } else if (iconStr === \"BICYCLE\" && leg.rentedBike && leg.from.networks) {\n    iconStr = leg.from.networks[0];\n  } else if (\n    iconStr === \"MICROMOBILITY\" &&\n    leg.rentedVehicle &&\n    leg.from.networks\n  ) {\n    iconStr = leg.from.networks[0];\n  }\n\n  // try to see if the iconStr has a matching company icon. If so, return that.\n  const CompanyIcon = getCompanyIcon(iconStr);\n  if (CompanyIcon) return <CompanyIcon {...props} />;\n\n  // Do this for P&R, K&R and TNC trips without company icon\n  if (iconStr && iconStr.startsWith(\"CAR\")) iconStr = \"CAR\";\n\n  return <ModeIcon mode={iconStr} {...props} />;\n};\n\nLegIcon.propTypes = {\n  leg: legType.isRequired,\n  ModeIcon: PropTypes.elementType.isRequired\n};\n\nexport default LegIcon;\n"]}