{"version":3,"sources":["index.js"],"names":["AccessLegBody","Component","constructor","props","expanded","state","setState","leg","legIndex","setActiveLeg","render","config","diagramVisible","followsTransit","LegIcon","setLegDiagram","showElevationProfile","showLegIcon","timeOptions","mode","hailedCar","onSummaryClick","rentedVehicle","rentedBike","rentedCar","onStepsHeaderClick","duration","steps","animation","propTypes","configType","isRequired","legType","PropTypes","bool","elementType","number","func","timeOptionsType","defaultProps"],"mappings":"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","sourcesContent":["import { formatDuration } from \"../../../core-utils/src/time\";\nimport {\n  configType,\n  legType,\n  timeOptionsType\n} from \"../../../core-utils/src/types\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\n\nimport AccessLegSteps from \"./access-leg-steps\";\nimport AccessLegSummary from \"./access-leg-summary\";\nimport LegDiagramPreview from \"./leg-diagram-preview\";\nimport RentedVehicleSubheader from \"./rented-vehicle-subheader\";\nimport * as Styled from \"../styled\";\nimport TNCLeg from \"./tnc-leg\";\n\n/**\n * Component for access (e.g. walk/bike/etc.) leg in narrative itinerary. This\n * particular component is used in the line-itin (i.e., trimet-mod-otp) version\n * of the narrative itinerary.\n */\nexport default class AccessLegBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { expanded: false };\n  }\n\n  onStepsHeaderClick = () => {\n    const { expanded } = this.state;\n    this.setState({ expanded: !expanded });\n  };\n\n  onSummaryClick = () => {\n    const { leg, legIndex, setActiveLeg } = this.props;\n    setActiveLeg(legIndex, leg);\n  };\n\n  render() {\n    const {\n      config,\n      diagramVisible,\n      followsTransit,\n      leg,\n      LegIcon,\n      setLegDiagram,\n      showElevationProfile,\n      showLegIcon,\n      timeOptions\n    } = this.props;\n    const { expanded } = this.state;\n\n    if (leg.mode === \"CAR\" && leg.hailedCar) {\n      return (\n        <TNCLeg\n          config={config}\n          followsTransit={followsTransit}\n          leg={leg}\n          LegIcon={LegIcon}\n          onSummaryClick={this.onSummaryClick}\n          showLegIcon={showLegIcon}\n          timeOptions={timeOptions}\n        />\n      );\n    }\n\n    return (\n      <>\n        {/* Place subheading: rented vehicle (e.g., scooter, bike, car)\n          pickup */}\n        {leg && (leg.rentedVehicle || leg.rentedBike || leg.rentedCar) && (\n          <RentedVehicleSubheader config={config} leg={leg} />\n        )}\n        <Styled.LegBody>\n          <AccessLegSummary\n            config={config}\n            leg={leg}\n            LegIcon={LegIcon}\n            onSummaryClick={this.onSummaryClick}\n            showLegIcon={showLegIcon}\n          />\n          <Styled.StepsHeader onClick={this.onStepsHeaderClick}>\n            {formatDuration(leg.duration)}\n            {leg.steps && (\n              <span>\n                {\" \"}\n                <Styled.CaretToggle expanded={expanded} />\n              </span>\n            )}\n          </Styled.StepsHeader>\n\n          <LegDiagramPreview\n            diagramVisible={diagramVisible}\n            leg={leg}\n            setLegDiagram={setLegDiagram}\n            showElevationProfile={showElevationProfile}\n          />\n          <VelocityTransitionGroup\n            enter={{ animation: \"slideDown\" }}\n            leave={{ animation: \"slideUp\" }}\n          >\n            {expanded && <AccessLegSteps steps={leg.steps} />}\n          </VelocityTransitionGroup>\n        </Styled.LegBody>\n      </>\n    );\n  }\n}\n\nAccessLegBody.propTypes = {\n  config: configType.isRequired,\n  /**\n   * Should be either null or a legType. Indicates that a particular leg diagram\n   * has been selected and is active.\n   */\n  diagramVisible: legType,\n  followsTransit: PropTypes.bool,\n  leg: legType.isRequired,\n  LegIcon: PropTypes.elementType.isRequired,\n  legIndex: PropTypes.number.isRequired,\n  setActiveLeg: PropTypes.func.isRequired,\n  setLegDiagram: PropTypes.func.isRequired,\n  showElevationProfile: PropTypes.bool.isRequired,\n  showLegIcon: PropTypes.bool.isRequired,\n  timeOptions: timeOptionsType\n};\n\nAccessLegBody.defaultProps = {\n  diagramVisible: null,\n  followsTransit: false,\n  timeOptions: null\n};\n"]}