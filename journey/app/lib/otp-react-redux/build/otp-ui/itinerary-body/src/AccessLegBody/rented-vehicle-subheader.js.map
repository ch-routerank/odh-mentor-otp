{"version":3,"sources":["rented-vehicle-subheader.js"],"names":["RentedVehicleSubheader","config","leg","configCompanies","companies","mode","from","name","rentalDescription","rentedBike","companyName","vehicleName","modeString","rentedVehicle","networks","rentedCar","propTypes","configType","isRequired","legType"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIA;;AAEA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,sBAAT,CAAgC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAhC,EAAiD;AAC9D,QAAMC,eAAe,GAAGF,MAAM,CAACG,SAAP,IAAoB,EAA5C,CAD8D,CAG9D;AACA;;AACA,MAAIF,GAAG,CAACG,IAAJ,KAAa,MAAjB,EAAyB;AACvB,wBACE,6BAAC,MAAD,CAAQ,cAAR,qBACE,kEAA0BH,GAAG,CAACI,IAAJ,CAASC,IAAnC,CADF,CADF;AAKD;;AAED,MAAIC,iBAAJ;;AACA,MAAIN,GAAG,CAACO,UAAR,EAAoB;AAClB;AACAD,IAAAA,iBAAiB,GAAG,qBAApB;AACD,GAHD,MAGO;AACL;AACA,QAAIE,WAAW,GAAG,EAAlB;AACA,QAAIC,WAAW,GAAG,EAAlB,CAHK,CAIL;;AACA,QAAIC,UAAU,GAAGV,GAAG,CAACW,aAAJ,GACb,WADa,GAEbX,GAAG,CAACO,UAAJ,GACA,MADA,GAEA,KAJJ,CALK,CAWL;AACA;AACA;AACA;AACA;;AACA,QAAIP,GAAG,CAACI,IAAJ,CAASQ,QAAb,EAAuB;AACrBJ,MAAAA,WAAW,GAAG,8CACZR,GAAG,CAACI,IAAJ,CAASQ,QADG,EAEZX,eAFY,CAAd,CADqB,CAKrB;AACA;;AACA,UAAID,GAAG,CAACa,SAAJ,IAAiBb,GAAG,CAACI,IAAJ,CAASC,IAA9B,EAAoC;AAClCI,QAAAA,WAAW,GAAGT,GAAG,CAACI,IAAJ,CAASC,IAAvB;AACD;;AACDK,MAAAA,UAAU,GAAG,gCAAgBV,GAAG,CAACI,IAApB,CAAb;AACAE,MAAAA,iBAAiB,GAAI,WAAUE,WAAY,IAAGE,UAAW,IAAGD,WAAY,EAAxE;AACD,KAZD,MAYO;AACLH,MAAAA,iBAAiB,GAAG,uBAApB;AACD;AACF,GAhD6D,CAiD9D;AACA;AACA;;;AACA,sBAAO,6BAAC,MAAD,CAAQ,cAAR,QAAwBA,iBAAxB,CAAP;AACD;;AAEDR,sBAAsB,CAACgB,SAAvB,GAAmC;AACjCf,EAAAA,MAAM,EAAEgB,kBAAWC,UADc;AAEjChB,EAAAA,GAAG,EAAEiB,eAAQD;AAFoB,CAAnC","sourcesContent":["import { configType, legType } from \"../../../core-utils/src/types\";\nimport {\n  getCompaniesLabelFromNetworks,\n  getModeForPlace\n} from \"../../../core-utils/src/itinerary\";\nimport React from \"react\";\n\nimport * as Styled from \"../styled\";\n\n/**\n * A component to display vehicle rental data. The word \"Vehicle\" has been used\n * because a future refactor is intended to combine car rental, bike rental\n * and micromobility rental all within this component. The future refactor is\n * assuming that the leg.rentedCar and leg.rentedBike response elements from OTP\n * will eventually be merged into the leg.rentedVehicle element.\n */\nexport default function RentedVehicleSubheader({ config, leg }) {\n  const configCompanies = config.companies || [];\n\n  // Sometimes rented vehicles can be walked over things like stairs or other\n  // ways that forbid the main mode of travel.\n  if (leg.mode === \"WALK\") {\n    return (\n      <Styled.PlaceSubheader>\n        <span>Walk vehicle along {leg.from.name}</span>\n      </Styled.PlaceSubheader>\n    );\n  }\n\n  let rentalDescription;\n  if (leg.rentedBike) {\n    // TODO: Special case for TriMet may need to be refactored.\n    rentalDescription = \"Pick up shared bike\";\n  } else {\n    // Add company and vehicle labels.\n    let companyName = \"\";\n    let vehicleName = \"\";\n    // TODO allow more flexibility in customizing these mode strings\n    let modeString = leg.rentedVehicle\n      ? \"E-scooter\"\n      : leg.rentedBike\n      ? \"bike\"\n      : \"car\";\n\n    // The networks attribute of the from data will only appear at the very\n    // beginning of the rental. It is possible that there will be some forced\n    // walking that occurs in the middle of the rental, so once the main mode\n    // resumes there won't be any network info. In that case we simply return\n    // that the rental is continuing.\n    if (leg.from.networks) {\n      companyName = getCompaniesLabelFromNetworks(\n        leg.from.networks,\n        configCompanies\n      );\n      // Only show vehicle name for car rentals. For bikes and E-scooters, these\n      // IDs/names tend to be less relevant (or entirely useless) in this context.\n      if (leg.rentedCar && leg.from.name) {\n        vehicleName = leg.from.name;\n      }\n      modeString = getModeForPlace(leg.from);\n      rentalDescription = `Pick up ${companyName} ${modeString} ${vehicleName}`;\n    } else {\n      rentalDescription = \"Continue using rental\";\n    }\n  }\n  // e.g., Pick up REACHNOW rented car XYZNDB OR\n  //       Pick up SPIN E-scooter\n  //       Pick up shared bike\n  return <Styled.PlaceSubheader>{rentalDescription}</Styled.PlaceSubheader>;\n}\n\nRentedVehicleSubheader.propTypes = {\n  config: configType.isRequired,\n  leg: legType.isRequired\n};\n"]}