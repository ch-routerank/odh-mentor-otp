{"version":3,"sources":["index.js"],"names":["ParkAndRideOverlay","MapLayer","componentDidMount","componentWillUnmount","createLeafletElement","updateLeafletElement","render","parkAndRideLocations","setLocation","props","length","map","location","k","name","startsWith","substring","parkAndRideMarker","y","x","lat","lon","propTypes","PropTypes","arrayOf","shape","string","isRequired","number","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAQA;;;;;;;;AAEA,MAAMA,kBAAN,SAAiCC,sBAAjC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAwC,KAAKC,KAAnD;AACA,QAAI,CAACF,oBAAD,IAAyBA,oBAAoB,CAACG,MAArB,KAAgC,CAA7D,EACE,oBAAO,6BAAC,0BAAD,OAAP;AAEF,wBACE,6BAAC,0BAAD,QACGH,oBAAoB,CAACI,GAArB,CAAyB,CAACC,QAAD,EAAWC,CAAX,KAAiB;AACzC,YAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,UAAd,CAAyB,MAAzB,IACTH,QAAQ,CAACE,IAAT,CAAcE,SAAd,CAAwB,CAAxB,CADS,GAETJ,QAAQ,CAACE,IAFb;AAGA,0BACE,6BAAC,oBAAD;AACE,QAAA,IAAI,EAAEG,0BADR;AAEE,QAAA,GAAG,EAAEJ,CAFP;AAGE,QAAA,QAAQ,EAAE,CAACD,QAAQ,CAACM,CAAV,EAAaN,QAAQ,CAACO,CAAtB;AAHZ,sBAKE,6BAAC,mBAAD,qBACE,6BAAC,aAAD,CAAe,eAAf,qBACE,6BAAC,aAAD,CAAe,UAAf,QAA2BL,IAA3B,CADF,eAIE,6BAAC,aAAD,CAAe,QAAf,qBACE,qDADF,eAEE,6BAAC,YAAD;AACE,QAAA,QAAQ,EAAE;AACRM,UAAAA,GAAG,EAAER,QAAQ,CAACM,CADN;AAERG,UAAAA,GAAG,EAAET,QAAQ,CAACO,CAFN;AAGRL,UAAAA;AAHQ,SADZ;AAME,QAAA,WAAW,EAAEN;AANf,QAFF,CAJF,CADF,CALF,CADF;AA0BD,KA9BA,CADH,CADF;AAmCD;;AAjDuC;;AAoD1CR,kBAAkB,CAACsB,SAAnB,GAA+B;AAC7Bf,EAAAA,oBAAoB,EAAEgB,mBAAUC,OAAV,CACpBD,mBAAUE,KAAV,CAAgB;AACdX,IAAAA,IAAI,EAAES,mBAAUG,MAAV,CAAiBC,UADT;AAEdR,IAAAA,CAAC,EAAEI,mBAAUK,MAAV,CAAiBD,UAFN;AAGdT,IAAAA,CAAC,EAAEK,mBAAUK,MAAV,CAAiBD;AAHN,GAAhB,EAIGA,UALiB,CADO;AAQ7BnB,EAAAA,WAAW,EAAEe,mBAAUM,IAAV,CAAeF;AARC,CAA/B;;eAWe,+BAAY3B,kBAAZ,C","sourcesContent":["import * as BaseMapStyled from \"../../base-map/src/styled\";\nimport FromToLocationPicker from \"../../from-to-location-picker/src\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  FeatureGroup,\n  MapLayer,\n  Marker,\n  Popup,\n  withLeaflet\n} from \"react-leaflet\";\n\nimport parkAndRideMarker from \"./park-and-ride-marker\";\n\nclass ParkAndRideOverlay extends MapLayer {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  createLeafletElement() {}\n\n  updateLeafletElement() {}\n\n  render() {\n    const { parkAndRideLocations, setLocation } = this.props;\n    if (!parkAndRideLocations || parkAndRideLocations.length === 0)\n      return <FeatureGroup />;\n\n    return (\n      <FeatureGroup>\n        {parkAndRideLocations.map((location, k) => {\n          const name = location.name.startsWith(\"P+R \")\n            ? location.name.substring(4)\n            : location.name;\n          return (\n            <Marker\n              icon={parkAndRideMarker}\n              key={k}\n              position={[location.y, location.x]}\n            >\n              <Popup>\n                <BaseMapStyled.MapOverlayPopup>\n                  <BaseMapStyled.PopupTitle>{name}</BaseMapStyled.PopupTitle>\n\n                  {/* Set as from/to toolbar */}\n                  <BaseMapStyled.PopupRow>\n                    <b>$_travel_$</b>\n                    <FromToLocationPicker\n                      location={{\n                        lat: location.y,\n                        lon: location.x,\n                        name\n                      }}\n                      setLocation={setLocation}\n                    />\n                  </BaseMapStyled.PopupRow>\n                </BaseMapStyled.MapOverlayPopup>\n              </Popup>\n            </Marker>\n          );\n        })}\n      </FeatureGroup>\n    );\n  }\n}\n\nParkAndRideOverlay.propTypes = {\n  parkAndRideLocations: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired\n    }).isRequired\n  ),\n  setLocation: PropTypes.func.isRequired\n};\n\nexport default withLeaflet(ParkAndRideOverlay);\n"]}