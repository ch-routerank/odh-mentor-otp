{"version":3,"sources":["trip-detail.js"],"names":["TripDetail","Component","constructor","props","expanded","state","onHideClick","onExpandClick","setState","render","icon","summary","description","toggle","animation","propTypes","PropTypes","node","isRequired","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEe,MAAMA,UAAN,SAAyBC,gBAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,oCAOV,MAAM;AACb,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACA,UAAID,QAAJ,EAAc,KAAKE,WAAL,GAAd,KACK,KAAKC,aAAL;AACN,KAXkB;;AAAA,2CAaH,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAfkB;;AAAA,yCAiBL,MAAM;AAClB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAnBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAgBDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAiC,KAAKT,KAA5C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE,6BAAC,MAAD,CAAQ,UAAR,qBACE,6BAAC,MAAD,CAAQ,cAAR,QAAwBK,IAAxB,CADF,eAEE,6BAAC,MAAD,CAAQ,iBAAR,QACGC,OADH,EAEGC,WAAW,iBACV,6BAAC,MAAD,CAAQ,YAAR;AAAqB,MAAA,OAAO,EAAE,KAAKC;AAAnC,oBACE,6BAAC,uBAAD;AAAgB,MAAA,IAAI,EAAC;AAArB,MADF,CAHJ,eAOE,6BAAC,sCAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADT;AAEE,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb;AAFT,OAIGV,QAAQ,iBACP,6BAAC,MAAD,CAAQ,qBAAR,qBACE,6BAAC,MAAD,CAAQ,UAAR;AAAmB,MAAA,OAAO,EAAE,KAAKE;AAAjC,oBACE,6BAAC,oBAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,MADF,CADF,EAIGM,WAJH,CALJ,CAPF,CAFF,CADF;AA0BD;;AAnD+C;;;AAsDlDZ,UAAU,CAACe,SAAX,GAAuB;AACrBL,EAAAA,IAAI,EAAEM,mBAAUC,IAAV,CAAeC,UADA;AAErBP,EAAAA,OAAO,EAAEK,mBAAUC,IAAV,CAAeC,UAFH;AAGrBN,EAAAA,WAAW,EAAEI,mBAAUC;AAHF,CAAvB;AAMAjB,UAAU,CAACmB,YAAX,GAA0B;AACxBP,EAAAA,WAAW,EAAEQ;AADW,CAA1B","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { QuestionCircle, TimesCircle } from \"@styled-icons/fa-solid\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\n\nimport * as Styled from \"./styled\";\n\nexport default class TripDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false\n    };\n  }\n\n  toggle = () => {\n    const { expanded } = this.state;\n    if (expanded) this.onHideClick();\n    else this.onExpandClick();\n  };\n\n  onExpandClick = () => {\n    this.setState({ expanded: true });\n  };\n\n  onHideClick = () => {\n    this.setState({ expanded: false });\n  };\n\n  render() {\n    const { icon, summary, description } = this.props;\n    const { expanded } = this.state;\n    return (\n      <Styled.TripDetail>\n        <Styled.TripDetailIcon>{icon}</Styled.TripDetailIcon>\n        <Styled.TripDetailSummary>\n          {summary}\n          {description && (\n            <Styled.ExpandButton onClick={this.toggle}>\n              <QuestionCircle size=\"0.92em\" />\n            </Styled.ExpandButton>\n          )}\n          <VelocityTransitionGroup\n            enter={{ animation: \"slideDown\" }}\n            leave={{ animation: \"slideUp\" }}\n          >\n            {expanded && (\n              <Styled.TripDetailDescription>\n                <Styled.HideButton onClick={this.onHideClick}>\n                  <TimesCircle size=\"0.92em\" />\n                </Styled.HideButton>\n                {description}\n              </Styled.TripDetailDescription>\n            )}\n          </VelocityTransitionGroup>\n        </Styled.TripDetailSummary>\n      </Styled.TripDetail>\n    );\n  }\n}\n\nTripDetail.propTypes = {\n  icon: PropTypes.node.isRequired,\n  summary: PropTypes.node.isRequired,\n  description: PropTypes.node\n};\n\nTripDetail.defaultProps = {\n  description: undefined\n};\n"]}