{"version":3,"sources":["index.js"],"names":["ModeButton","props","className","children","enabled","onClick","selected","showTitle","title","style","activeClassName","disabledClassName","propTypes","PropTypes","oneOfType","node","arrayOf","string","bool","func","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAWA,QAAMS,eAAe,GAAGJ,QAAQ,GAAG,QAAH,GAAc,EAA9C;AACA,QAAMK,iBAAiB,GAAGP,OAAO,GAAG,EAAH,GAAQ,UAAzC;AAEA,sBACE,6BAAC,MAAD,CAAQ,UAAR;AAAmB,IAAA,SAAS,EAAEF,SAA9B;AAAyC,IAAA,KAAK,EAAEO;AAAhD,kBACE,6BAAC,MAAD,CAAQ,UAAR,CAAmB,MAAnB;AACE,IAAA,SAAS,EAAG,GAAEC,eAAgB,IAAGC,iBAAkB,EADrD;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,KAAK,EAAEG,KAHT;AAIE,IAAA,QAAQ,EAAE,CAACJ;AAJb,KAMGD,QANH,CADF,EAUGK,KAAK,IAAID,SAAT,iBACC,6BAAC,MAAD,CAAQ,UAAR,CAAmB,KAAnB;AACE,IAAA,SAAS,EAAG,GAAEG,eAAgB,IAAGC,iBAAkB,EADrD;AAEE,IAAA,KAAK,EAAEH;AAFT,KAIGA,KAJH,CAXJ,CADF;AAqBD,CApCD;;AAsCAR,UAAU,CAACY,SAAX,GAAuB;AACrB;AACF;AACA;AACET,EAAAA,QAAQ,EAAEU,mBAAUC,SAAV,CAAoB,CAC5BD,mBAAUE,IADkB,EAE5BF,mBAAUG,OAAV,CAAkBH,mBAAUE,IAA5B,CAF4B,CAApB,CAJW;;AAQrB;AACF;AACA;AACEb,EAAAA,SAAS,EAAEW,mBAAUI,MAXA;;AAYrB;AACF;AACA;AACEb,EAAAA,OAAO,EAAES,mBAAUK,IAfE;;AAgBrB;AACF;AACA;AACEb,EAAAA,OAAO,EAAEQ,mBAAUM,IAnBE;;AAoBrB;AACF;AACA;AACEb,EAAAA,QAAQ,EAAEO,mBAAUK,IAvBC;;AAwBrB;AACF;AACA;AACEX,EAAAA,SAAS,EAAEM,mBAAUK,IA3BA;;AA4BrB;AACF;AACA;AACA;AACEV,EAAAA,KAAK,EAAEK,mBAAUI;AAhCI,CAAvB;AAmCAjB,UAAU,CAACoB,YAAX,GAA0B;AACxBjB,EAAAA,QAAQ,EAAE,IADc;AAExBD,EAAAA,SAAS,EAAE,IAFa;AAGxBE,EAAAA,OAAO,EAAE,IAHe;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,QAAQ,EAAE,KALc;AAMxBC,EAAAA,SAAS,EAAE,IANa;AAOxBC,EAAAA,KAAK,EAAE;AAPiB,CAA1B;eAUeR,U","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as Styled from \"../styled\";\n\n/**\n * ModeButton lets the user pick a travel mode.\n * It includes the actual button that supports HTML/React text and graphics,\n * and a title displayed when hovering the mouse over the button, and, optionally, underneath it.\n * A ModeButton can be enabled or disabled, active or inactive.\n */\nconst ModeButton = props => {\n  const {\n    className,\n    children,\n    enabled,\n    onClick,\n    selected,\n    showTitle,\n    title,\n    style\n  } = props;\n\n  const activeClassName = selected ? \"active\" : \"\";\n  const disabledClassName = enabled ? \"\" : \"disabled\";\n\n  return (\n    <Styled.ModeButton className={className} style={style}>\n      <Styled.ModeButton.Button\n        className={`${activeClassName} ${disabledClassName}`}\n        onClick={onClick}\n        title={title}\n        disabled={!enabled}\n      >\n        {children}\n      </Styled.ModeButton.Button>\n\n      {title && showTitle && (\n        <Styled.ModeButton.Title\n          className={`${activeClassName} ${disabledClassName}`}\n          title={title}\n        >\n          {title}\n        </Styled.ModeButton.Title>\n      )}\n    </Styled.ModeButton>\n  );\n};\n\nModeButton.propTypes = {\n  /**\n   * The contents of the button. Can be any HTML/React content.\n   */\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  /**\n   * The CSS class name to apply to this element.\n   */\n  className: PropTypes.string,\n  /**\n   * Determines whether the button is currently enabled.\n   */\n  enabled: PropTypes.bool,\n  /**\n   * Triggered when the user clicks the button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * Determines whether the button should appear selected.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Determines whether the title should be displayed (underneath the button).\n   */\n  showTitle: PropTypes.bool,\n  /**\n   * A title text for the button, displayed as popup when the user hover the mouse over the button,\n   * and optionally displayed underneath the button if showTitle is true.\n   */\n  title: PropTypes.string\n};\n\nModeButton.defaultProps = {\n  children: null,\n  className: null,\n  enabled: true,\n  onClick: null,\n  selected: false,\n  showTitle: true,\n  title: null\n};\n\nexport default ModeButton;\n"]}