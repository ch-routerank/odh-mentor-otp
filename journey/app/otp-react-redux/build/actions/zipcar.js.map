{"version":3,"sources":["zipcar.js"],"names":["fetch","require","receivedZipcarLocationsError","receivedZipcarLocationsResponse","requestZipcarLocationsResponse","zipcarLocationsQuery","url","dispatch","getState","json","response","status","error","Error","err"],"mappings":";;;;;;;;AAAA;;AACA,IAAI,OAAQA,KAAR,KAAmB,WAAvB,EAAoCC,OAAO,CAAC,kBAAD,CAAP;AAE7B,MAAMC,4BAA4B,GAAG,gCAAa,wBAAb,CAArC;;AACA,MAAMC,+BAA+B,GAAG,gCAAa,2BAAb,CAAxC;;AACA,MAAMC,8BAA8B,GAAG,gCAAa,0BAAb,CAAvC;;;AAEA,SAASC,oBAAT,CAA+BC,GAA/B,EAAoC;AACzC,SAAO,gBAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AACzCD,IAAAA,QAAQ,CAACH,8BAA8B,EAA/B,CAAR;AACA,QAAIK,IAAJ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACM,GAAD,CAA5B;;AACA,UAAII,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,4BAAV,CAAd;AACAD,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACD;;AACDH,MAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACD,IAAT,EAAb;AACD,KARD,CAQE,OAAOK,GAAP,EAAY;AACZ,aAAOP,QAAQ,CAACL,4BAA4B,CAACY,GAAD,CAA7B,CAAf;AACD;;AAEDP,IAAAA,QAAQ,CAACJ,+BAA+B,CAACM,IAAD,CAAhC,CAAR;AACD,GAhBD;AAiBD","sourcesContent":["import { createAction } from 'redux-actions'\nif (typeof (fetch) === 'undefined') require('isomorphic-fetch')\n\nexport const receivedZipcarLocationsError = createAction('ZIPCAR_LOCATIONS_ERROR')\nexport const receivedZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_RESPONSE')\nexport const requestZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_REQUEST')\n\nexport function zipcarLocationsQuery (url) {\n  return async function (dispatch, getState) {\n    dispatch(requestZipcarLocationsResponse())\n    let json\n    try {\n      const response = await fetch(url)\n      if (response.status >= 400) {\n        const error = new Error('Received error from server')\n        error.response = response\n        throw error\n      }\n      json = await response.json()\n    } catch (err) {\n      return dispatch(receivedZipcarLocationsError(err))\n    }\n\n    dispatch(receivedZipcarLocationsResponse(json))\n  }\n}\n"]}