{"version":3,"sources":["call-record.js"],"names":["CallRecord","Component","expanded","call","fetchQueries","props","state","id","setState","render","RED","index","inProgress","searches","activeQueries","map","searchId","color","fontSize","verticalAlign","display","marginLeft","length","query","i","margin","width","_toggleExpanded","endTime","fromNow","queries"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport React, { Component } from 'react'\n\nimport CallTimeCounter from './call-time-counter'\nimport Icon from '../narrative/icon'\nimport QueryRecord from './query-record'\nimport {searchToQuery} from '../../util/call-taker'\n\n/**\n * Displays information for a particular call record in the Call Taker window.\n */\nexport default class CallRecord extends Component {\n  state = {\n    expanded: false\n  }\n\n  _toggleExpanded = () => {\n    const {call, fetchQueries} = this.props\n    const {expanded} = this.state\n    if (!expanded) fetchQueries(call.id)\n    this.setState({expanded: !expanded})\n  }\n\n  render () {\n    // FIXME: consolidate red color with call taker controls\n    const RED = '#C35134'\n    const {call, index, inProgress, searches} = this.props\n    const {expanded} = this.state\n    if (!call) return null\n    if (inProgress) {\n      // Map search IDs made during active call to queries.\n      const activeQueries = call.searches\n        .map(searchId => searchToQuery(searches[searchId], call, {}))\n      return (\n        <div>\n          <div className='pull-right'>\n            <Icon\n              style={{color: RED, fontSize: '8px', verticalAlign: '2px'}}\n              type='circle'\n              className='animate-flicker' />\n            <CallTimeCounter style={{display: 'inline'}} />\n          </div>\n          <Icon type='phone' className='fa-flip-horizontal' />{' '}\n          [Active call]\n          <br />\n          <small style={{marginLeft: '20px'}}>\n            In progress... click <Icon type='stop' /> to save{' '}\n            ({call.searches.length} searches)\n          </small>\n          <div>\n            {activeQueries.length > 0\n              ? activeQueries.map((query, i) => (\n                <QueryRecord key={i} query={query} index={i} />\n              ))\n              : 'No queries recorded.'\n            }\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div style={{margin: '5px 0'}}>\n        <button\n          style={{width: '100%'}}\n          className='clear-button-formatting'\n          onClick={this._toggleExpanded}\n        >\n          <Icon type='phone' className='fa-flip-horizontal' />\n          Call {index} ({moment(call.endTime).fromNow()})\n        </button>\n        {expanded\n          ? <ul className='list-unstyled'>\n            {call.queries && call.queries.length > 0\n              ? call.queries.map((query, i) => (\n                <QueryRecord key={i} query={query} index={i} />\n              ))\n              : 'No queries recorded.'\n            }\n          </ul>\n          : null\n        }\n      </div>\n    )\n  }\n}\n"]}