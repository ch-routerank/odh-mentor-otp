{"version":3,"sources":["call-taker-windows.js"],"names":["CallTakerWindows","Component","render","callTaker","fetchQueries","searches","props","activeCall","callHistory","visible","defaultPosition","position","toggleCallHistory","calls","data","length","map","call","i","mapStateToProps","state","ownProps","currentQuery","otp","callTakerActions","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA,MAAMA,gBAAN,SAA+BC,gBAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAI;AACR,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA;AAA1B,QAAsC,KAAKC,KAAjD;AACA,UAAM;AAACC,MAAAA,UAAD;AAAaC,MAAAA;AAAb,QAA4BL,SAAlC;AACA,wBACE,4DACGK,WAAW,CAACC,OAAZ,CACC;AADD;AAAA;AAEG,iCAAC,wBAAD;AACA,MAAA,cAAc,EAAE;AACdC,QAAAA,eAAe,EAAEF,WAAW,CAACG;AADf,OADhB;AAIA,MAAA,MAAM,eAAE,wDAAM,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QAAN,kBAJR;AAKA,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM;AALzB,OAOCL,UAAU,gBACP,6BAAC,mBAAD;AACA,MAAA,IAAI,EAAEA,UADN;AAEA,MAAA,QAAQ,EAAEF,QAFV;AAGA,MAAA,UAAU;AAHV,MADO,GAKP,IAZJ,EAcCG,WAAW,CAACK,KAAZ,CAAkBC,IAAlB,CAAuBC,MAAvB,GAAgC,CAAhC,GACGP,WAAW,CAACK,KAAZ,CAAkBC,IAAlB,CAAuBE,GAAvB,CAA2B,CAACC,IAAD,EAAOC,CAAP,kBAC3B,6BAAC,mBAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAEA,CAFT;AAGE,MAAA,IAAI,EAAED,IAHR;AAIE,MAAA,YAAY,EAAEb;AAJhB,MADA,CADH,gBAQG,gEAtBJ,CAFH,GA2BG,IA5BN,CADF;AAiCD;;AArCsC;;AAwCzC,MAAMe,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLlB,IAAAA,SAAS,EAAEiB,KAAK,CAACjB,SADZ;AAELmB,IAAAA,YAAY,EAAEF,KAAK,CAACG,GAAN,CAAUD,YAFnB;AAGLjB,IAAAA,QAAQ,EAAEe,KAAK,CAACG,GAAN,CAAUlB;AAHf,GAAP;AAKD,CAND;;AAQA,MAAM;AACJD,EAAAA,YADI;AAEJQ,EAAAA;AAFI,IAGFY,gBAHJ;AAKA,MAAMC,kBAAkB,GAAG;AAAErB,EAAAA,YAAF;AAAgBQ,EAAAA;AAAhB,CAA3B;;eAEe,yBAAQO,eAAR,EAAyBM,kBAAzB,EAA6CzB,gBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as callTakerActions from '../../actions/call-taker'\nimport CallRecord from './call-record'\nimport DraggableWindow from './draggable-window'\nimport Icon from '../narrative/icon'\n\n/**\n * Collects the various draggable windows used in the Call Taker module to\n * display, for example, the call record list and (TODO) the list of field trips.\n */\nclass CallTakerWindows extends Component {\n  render () {\n    const {callTaker, fetchQueries, searches} = this.props\n    const {activeCall, callHistory} = callTaker\n    return (\n      <>\n        {callHistory.visible\n          // Active call window\n          ? <DraggableWindow\n            draggableProps={{\n              defaultPosition: callHistory.position\n            }}\n            header={<span><Icon type='history' /> Call history</span>}\n            onClickClose={this.props.toggleCallHistory}\n          >\n            {activeCall\n              ? <CallRecord\n                call={activeCall}\n                searches={searches}\n                inProgress />\n              : null\n            }\n            {callHistory.calls.data.length > 0\n              ? callHistory.calls.data.map((call, i) => (\n                <CallRecord\n                  key={i}\n                  index={i}\n                  call={call}\n                  fetchQueries={fetchQueries} />\n              ))\n              : <div>No calls in history</div>\n            }\n          </DraggableWindow>\n          : null\n        }\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    callTaker: state.callTaker,\n    currentQuery: state.otp.currentQuery,\n    searches: state.otp.searches\n  }\n}\n\nconst {\n  fetchQueries,\n  toggleCallHistory\n} = callTakerActions\n\nconst mapDispatchToProps = { fetchQueries, toggleCallHistory }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CallTakerWindows)\n"]}