{"version":3,"sources":["call-taker-windows.js"],"names":["CallTakerWindows","props","callTaker","fetchQueries","searches","activeCall","callHistory","visible","defaultPosition","position","toggleCallHistory","calls","data","length","map","call","i","Component","mapStateToProps","state","ownProps","currentQuery","otp","callTakerActions","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAIMA,gB;;;;;;;;;;;;;6BACM;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACDC,SADC,eACDA,SADC;AAAA,UACUC,YADV,eACUA,YADV;AAAA,UACwBC,QADxB,eACwBA,QADxB;AAAA,UAEDC,UAFC,GAE0BH,SAF1B,CAEDG,UAFC;AAAA,UAEWC,WAFX,GAE0BJ,SAF1B,CAEWI,WAFX;AAGR,0BACE,4DACGA,WAAW,CAACC,OAAZ,CACC;AADD;AAAA;AAEG,mCAAC,wBAAD;AACA,QAAA,cAAc,EAAE;AACdC,UAAAA,eAAe,EAAEF,WAAW,CAACG;AADf,SADhB;AAIA,QAAA,MAAM,eAAE,wDAAM,6BAAC,aAAD;AAAM,UAAA,IAAI,EAAC;AAAX,UAAN,kBAJR;AAKA,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS;AALzB,SAOCL,UAAU,gBACP,6BAAC,mBAAD;AACA,QAAA,IAAI,EAAEA,UADN;AAEA,QAAA,QAAQ,EAAED,QAFV;AAGA,QAAA,UAAU;AAHV,QADO,GAKP,IAZJ,EAcCE,WAAW,CAACK,KAAZ,CAAkBC,IAAlB,CAAuBC,MAAvB,GAAgC,CAAhC,GACGP,WAAW,CAACK,KAAZ,CAAkBC,IAAlB,CAAuBE,GAAvB,CAA2B,UAACC,IAAD,EAAOC,CAAP;AAAA,4BAC3B,6BAAC,mBAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,KAAK,EAAEA,CAFT;AAGE,UAAA,IAAI,EAAED,IAHR;AAIE,UAAA,YAAY,EAAEZ;AAJhB,UAD2B;AAAA,OAA3B,CADH,gBAQG,gEAtBJ,CAFH,GA2BG,IA5BN,CADF;AAiCD;;;;EArC4Bc,gB;;AAwC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLlB,IAAAA,SAAS,EAAEiB,KAAK,CAACjB,SADZ;AAELmB,IAAAA,YAAY,EAAEF,KAAK,CAACG,GAAN,CAAUD,YAFnB;AAGLjB,IAAAA,QAAQ,EAAEe,KAAK,CAACG,GAAN,CAAUlB;AAHf,GAAP;AAKD,CAND;;IASED,Y,GAEEoB,gB,CAFFpB,Y;IACAO,iB,GACEa,gB,CADFb,iB;AAGF,IAAMc,kBAAkB,GAAG;AAAErB,EAAAA,YAAY,EAAZA,YAAF;AAAgBO,EAAAA,iBAAiB,EAAjBA;AAAhB,CAA3B;;eAEe,yBAAQQ,eAAR,EAAyBM,kBAAzB,EAA6CxB,gBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as callTakerActions from '../../actions/call-taker'\nimport CallRecord from './call-record'\nimport DraggableWindow from './draggable-window'\nimport Icon from '../narrative/icon'\n\n/**\n * Collects the various draggable windows used in the Call Taker module to\n * display, for example, the call record list and (TODO) the list of field trips.\n */\nclass CallTakerWindows extends Component {\n  render () {\n    const {callTaker, fetchQueries, searches} = this.props\n    const {activeCall, callHistory} = callTaker\n    return (\n      <>\n        {callHistory.visible\n          // Active call window\n          ? <DraggableWindow\n            draggableProps={{\n              defaultPosition: callHistory.position\n            }}\n            header={<span><Icon type='history' /> Call history</span>}\n            onClickClose={this.props.toggleCallHistory}\n          >\n            {activeCall\n              ? <CallRecord\n                call={activeCall}\n                searches={searches}\n                inProgress />\n              : null\n            }\n            {callHistory.calls.data.length > 0\n              ? callHistory.calls.data.map((call, i) => (\n                <CallRecord\n                  key={i}\n                  index={i}\n                  call={call}\n                  fetchQueries={fetchQueries} />\n              ))\n              : <div>No calls in history</div>\n            }\n          </DraggableWindow>\n          : null\n        }\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    callTaker: state.callTaker,\n    currentQuery: state.otp.currentQuery,\n    searches: state.otp.searches\n  }\n}\n\nconst {\n  fetchQueries,\n  toggleCallHistory\n} = callTakerActions\n\nconst mapDispatchToProps = { fetchQueries, toggleCallHistory }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CallTakerWindows)\n"]}