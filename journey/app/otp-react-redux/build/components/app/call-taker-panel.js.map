{"version":3,"sources":["call-taker-panel.js"],"names":["StyledSubmodeSelector","SubmodeSelector","TripFormClasses","Row","ModeButton","Button","InlineRow","modeButtonButtonCss","departureOptions","value","children","modeOptions","metersToMiles","meters","Math","round","milesToMeters","miles","CallTakerPanel","Component","constructor","props","currentQuery","routingQuery","issues","push","length","window","alert","join","options","bannedRoutes","map","o","setQueryParam","mode","isTransit","isBike","result","index","intermediatePlaces","undefined","splice","location","evt","target","transitIsSelected","indexOf","accessMode","transitModes","state","modes","m","newModes","setState","expandAdvanced","keyCode","preventDefault","_planTrip","render","activeSearch","itineraryFooter","LegIcon","mainPanelContent","mobile","ModeIcon","routes","showUserSettings","showPlanTripButton","departArrive","date","from","time","to","actionText","advancedSearchStyle","zIndex","background","position","right","left","padding","display","maxPlacesDefined","addIntermediateDisabled","top","bottom","paddingBottom","overflow","Array","isArray","place","i","_removePlace","_addPlace","marginBottom","marginLeft","height","_handleFormKeyDown","_setMode","modeToOptionValue","_onHideAdvancedClick","findRoutes","flexDirection","CallTakerAdvancedOptions","preferredRoutes","option","getRouteList","find","distanceInMeters","changedMode","allModes","split","maxWalkDistance","key","routesParam","idList","routeOptions","filter","id","label","route","longName","shortName","replace","componentWillMount","componentWillReceiveProps","nextProps","Object","values","routeToOption","maxBikeDistance","modeObj","modeStr","selected","text","title","unitsString","alignItems","justifyContent","fontWeight","_setMaxWalkDistance","getDistanceStep","marginRight","width","_setMaxBikeDistance","_onSubModeChange","_isPreferredRouteOptionDisabled","_setPreferredRoutes","_isBannedRouteOptionDisabled","_setBannedRoutes","TIME_FORMATS","format","DateTimeOptions","OTP_API_DATE_FORMAT","OTP_API_TIME_FORMAT","timeInput","console","log","startOf","leaveNow","dateTime","cleanDate","cleanTime","_setDepartArrive","onKeyDown","handleTimeChange","border","outline","handleDateChange","mapStateToProps","ownProps","otp","user","ui","config","transitIndex","mapDispatchToProps","apiActions","formActions"],"mappings":"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","sourcesContent":["import {\n  OTP_API_DATE_FORMAT,\n  OTP_API_TIME_FORMAT\n} from '@opentripplanner/core-utils/lib/time'\nimport { hasBike, hasTransit } from '@opentripplanner/core-utils/lib/itinerary'\nimport { storeItem } from '@opentripplanner/core-utils/lib/storage'\nimport {SubmodeSelector} from '@opentripplanner/trip-form'\nimport * as TripFormClasses from '@opentripplanner/trip-form/lib/styled'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\nimport styled from 'styled-components'\n\nimport * as apiActions from '../../actions/api'\nimport * as formActions from '../../actions/form'\nimport IntermediatePlace from '../form/intermediate-place-field'\nimport LocationField from '../form/connected-location-field'\nimport { modeButtonButtonCss } from '../form/styled'\nimport SwitchButton from '../form/switch-button'\nimport UserSettings from '../form/user-settings'\nimport NarrativeItineraries from '../narrative/narrative-itineraries'\nimport { hasValidLocation, getActiveSearch, getShowUserSettings } from '../../util/state'\nimport ViewerContainer from '../viewers/viewer-container'\n\n// FIXME: move to styled.js?\nexport const StyledSubmodeSelector = styled(SubmodeSelector)`\n  ${TripFormClasses.SubmodeSelector.Row} {\n    > * {\n      padding: 3px 5px 3px 0px;\n    }\n    > :last-child {\n      padding-right: 0px;\n    }\n    ${TripFormClasses.ModeButton.Button} {\n      padding: 6px 12px;\n    }\n    svg,\n    img {\n      margin-left: 0px;\n    }\n  }\n  ${TripFormClasses.SubmodeSelector.InlineRow} {\n    margin: -3px 0px;\n  }\n\n  ${TripFormClasses.SubmodeSelector} {\n      ${modeButtonButtonCss}\n  }\n`\n\nconst departureOptions = [\n  {\n    // Default option.\n    value: 'NOW',\n    children: '$_now_$'\n  },\n  {\n    value: 'DEPART',\n    children: '$_depart_at_$'\n  },\n  {\n    value: 'ARRIVE',\n    children: '$_arrive_at_$'\n  }\n]\n\nconst modeOptions = [\n  {\n    // Default option.\n    value: 'TRANSIT',\n    children: '$_tpl_$'\n  },\n  {\n    value: 'WALK',\n    children: '$_by_walk_$'\n  },\n  {\n    value: 'BICYCLE',\n    children: 'Solo Bicicletta'\n  },\n  {\n    value: 'BICYCLE,TRANSIT',\n    children: 'Bike & Ride'\n  }\n]\n\nconst metersToMiles = meters => Math.round(meters * 0.000621371 * 100) / 100\nconst milesToMeters = miles => miles / 0.000621371\n\n/**\n * This is the main panel/sidebar for the Call Taker/Field Trip module. It\n * currently also serves as the main panel for the FDOT RMCE trip comparison view\n * which depends on the BATCH trip planning mode.\n */\nclass CallTakerPanel extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expandAdvanced: props.expandAdvanced,\n      transitModes: props.modes.transitModes.map(m => m.mode)\n    }\n  }\n\n  _planTrip = () => {\n    const {currentQuery, routingQuery} = this.props\n    const issues = []\n    if (!hasValidLocation(currentQuery, 'from')) issues.push('from')\n    if (!hasValidLocation(currentQuery, 'to')) issues.push('to')\n    if (issues.length > 0) {\n      // TODO: replace with less obtrusive validation.\n      window.alert(`Please define the following fields to $_travel_$ ${issues.join(', ')}`)\n      return\n    }\n    routingQuery()\n  }\n\n  _setBannedRoutes = options => {\n    const bannedRoutes = options ? options.map(o => o.value).join(',') : ''\n    this.props.setQueryParam({ bannedRoutes })\n  }\n\n  modeToOptionValue = mode => {\n    const isTransit = hasTransit(mode)\n    const isBike = hasBike(mode)\n    if (isTransit && isBike) return 'BICYCLE,TRANSIT'\n    else if (isTransit) return 'TRANSIT'\n    // Currently handles bicycle\n    else return mode\n  }\n\n  _addPlace = (result, index) => {\n    const intermediatePlaces = [...this.props.currentQuery.intermediatePlaces] || []\n    if (result && index !== undefined) {\n      // If adding an actual intermediate place with location. Overwrite the\n      // placeholder with the new value.\n      intermediatePlaces.splice(index, 1, result.location)\n    } else {\n      // Otherwise, we're just adding a dummy place.\n      intermediatePlaces.push({})\n    }\n    this.props.setQueryParam({intermediatePlaces})\n  }\n\n  _removePlace = ({index}) => {\n    const intermediatePlaces = [...this.props.currentQuery.intermediatePlaces] || []\n    intermediatePlaces.splice(index, 1)\n    this.props.setQueryParam({intermediatePlaces})\n  }\n\n  _setMode = evt => {\n    const {value: mode} = evt.target\n    const transitIsSelected = mode.indexOf('TRANSIT') !== -1\n    if (transitIsSelected) {\n      // Collect transit modes and selected access mode.\n      const accessMode = mode === 'TRANSIT' ? 'WALK' : 'BICYCLE'\n      // If no transit is selected, selected all available. Otherwise, default\n      // to state.\n      const transitModes = this.state.transitModes.length > 0\n        ? this.state.transitModes\n        : this.props.modes.transitModes.map(m => m.mode)\n      const newModes = [accessMode, ...transitModes].join(',')\n      this.setState({transitModes})\n      this.props.setQueryParam({ mode: newModes })\n    } else {\n      this.props.setQueryParam({ mode })\n    }\n  }\n\n  _onHideAdvancedClick = () => {\n    const expandAdvanced = !this.state.expandAdvanced\n    // FIXME move logic to action\n    storeItem('expandAdvanced', expandAdvanced)\n    this.setState({expandAdvanced})\n  }\n\n  /**\n   * Key down listener that will submit a $_plan_trip_$ query when Enter is pressed.\n   * This listener can be passed to constituent form elements for easy\n   * keyboard-only operation of the trip planning form. Note: it generally should\n   * not be passed to buttons or other elements that natively rely on the Enter\n   * key.\n   *\n   * FIXME: Should we use a proper submit button instead?\n   */\n  _handleFormKeyDown = (evt) => {\n    switch (evt.keyCode) {\n      case 13: // Enter\n        evt.preventDefault()\n        // Submit routing query.\n        this._planTrip()\n        break\n      default:\n        // Do nothing.\n        break\n    }\n  }\n\n  render () {\n    const {\n      activeSearch,\n      currentQuery,\n      itineraryFooter,\n      LegIcon,\n      mainPanelContent,\n      mobile,\n      modes,\n      ModeIcon,\n      routes,\n      setQueryParam,\n      showUserSettings\n    } = this.props\n    // FIXME: Remove showPlanTripButton\n    const showPlanTripButton = mainPanelContent === 'EDIT_DATETIME' ||\n      mainPanelContent === 'EDIT_SETTINGS'\n    // const mostRecentQuery = activeSearch ? activeSearch.query : null\n    // const planDisabled = isEqual(currentQuery, mostRecentQuery)\n    const {\n      departArrive,\n      date,\n      from,\n      intermediatePlaces,\n      mode,\n      time,\n      to\n    } = currentQuery\n    const actionText = mobile ? \"$_tap_$\" : \"$_click_$\"\n    const {expandAdvanced} = this.state\n    const advancedSearchStyle = {\n      zIndex: 99999,\n      background: 'white',\n      position: 'absolute',\n      right: '0px',\n      left: '0px',\n      padding: '0px 8px 5px',\n      display: expandAdvanced ? 'none' : undefined\n    }\n    // Only permit adding intermediate place if from/to is defined.\n    const maxPlacesDefined = intermediatePlaces.length >= 3\n    const addIntermediateDisabled = !from || !to || maxPlacesDefined\n    return (\n      <ViewerContainer>\n        {/* FIXME: should this be a styled component */}\n        <div className='main-panel' style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: showPlanTripButton ? 55 : 0,\n          paddingBottom: 15,\n          overflow: 'hidden',\n          padding: '10px'\n        }}>\n          <div className='form'>\n            <LocationField\n              inputPlaceholder={`Inserisci partenza o ${actionText} su mappa...`}\n              locationType='from'\n              showClearButton\n            />\n            {Array.isArray(intermediatePlaces) && intermediatePlaces.map((place, i) => {\n              return (\n                <IntermediatePlace\n                  key={i}\n                  index={i}\n                  location={place}\n                  onLocationCleared={this._removePlace}\n                  // FIXME: function def\n                  onLocationSelected={result => this._addPlace(result, i)}\n                  // FIXME: allow intermediate location type.\n                  locationType='to'\n                  inputPlaceholder={`Enter intermediate destination`}\n                  showClearButton={!mobile}\n                />\n              )\n            })}\n            <LocationField\n              inputPlaceholder={`Inserisci destinazione o ${actionText} su mappa...`}\n              locationType='to'\n              showClearButton={!mobile}\n            />\n            <div\n              // FIXME\n              style={{\n                top: '20px'\n              }}\n              className='switch-button-container'>\n              <SwitchButton content={<i className='fa fa-exchange fa-rotate-90' />} />\n            </div>\n            <button\n              className='clear-button-formatting'\n              style={{marginBottom: '5px', marginLeft: '10px'}}\n              disabled={addIntermediateDisabled}\n              onClick={this._addPlace}>\n              <i className='fa fa-plus-circle' />{' '}\n              {maxPlacesDefined\n                ? 'Maximum intermediate places reached'\n                : addIntermediateDisabled\n                  ? 'Define origin/destination to add intermediate places'\n                  : 'Add place'\n              }\n            </button>\n            <div className='search-options' style={{height: '30px'}}>\n              <DateTimeOptions\n                date={date}\n                onKeyDown={this._handleFormKeyDown}\n                departArrive={departArrive}\n                setQueryParam={setQueryParam}\n                time={time} />\n              <select\n                onBlur={this._setMode}\n                onKeyDown={this._handleFormKeyDown}\n                value={this.modeToOptionValue(mode)}\n                style={{position: 'absolute', right: '50px'}}\n                onChange={this._setMode}>\n                {modeOptions.map(o => (\n                  <option key={o.value} {...o} />\n                ))}\n              </select>\n              <Button\n                bsStyle='default'\n                bsSize='small'\n                onClick={this._planTrip}\n                style={{\n                  position: 'absolute',\n                  right: '0px'\n                }} >\n                Plan\n              </Button>\n            </div>\n            <div className='advanced-search-options-container'>\n              <Button\n                className='hide-button clear-button-formatting'\n                onClick={this._onHideAdvancedClick}>\n                <i className={`fa fa-caret-${expandAdvanced ? 'up' : 'down'}`} /> Advanced options\n              </Button>\n              <div className='advanced-search-options' style={advancedSearchStyle}>\n                <CallTakerAdvancedOptions\n                  modes={modes}\n                  ModeIcon={ModeIcon}\n                  routes={routes}\n                  findRoutes={this.props.findRoutes}\n                  setQueryParam={setQueryParam}\n                  currentQuery={currentQuery} />\n              </div>\n            </div>\n          </div>\n          {!activeSearch && !showPlanTripButton && showUserSettings &&\n            <UserSettings />\n          }\n          <div className='desktop-narrative-container'>\n            <NarrativeItineraries\n              containerStyle={{\n                display: 'flex',\n                flexDirection: 'column',\n                position: 'absolute',\n                // FIXME: This top pixel value can be variable dependent on\n                // height of the form above. It may need to be specified differently\n                top: 193 + intermediatePlaces.length * 45,\n                right: '0',\n                left: '0',\n                bottom: '0'\n              }}\n              itineraryFooter={itineraryFooter}\n              LegIcon={LegIcon}\n            />\n          </div>\n        </div>\n      </ViewerContainer>\n    )\n  }\n}\n\nclass CallTakerAdvancedOptions extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expandAdvanced: props.expandAdvanced,\n      routeOptions: [],\n      transitModes: props.modes.transitModes.map(m => m.mode)\n    }\n  }\n\n  componentWillMount () {\n    // Fetch routes for banned/preferred routes selectors.\n    this.props.findRoutes()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    const {routes} = nextProps\n    // Once routes are available, map them to the route options format.\n    if (routes && !this.props.routes) {\n      const routeOptions = Object.values(routes).map(this.routeToOption)\n      this.setState({routeOptions})\n    }\n  }\n\n  _setPreferredRoutes = options => {\n    const preferredRoutes = options ? options.map(o => (o.value)).join(',') : ''\n    this.props.setQueryParam({ preferredRoutes })\n  }\n\n  _isBannedRouteOptionDisabled = option => {\n    // Disable routes that are preferred already.\n    const preferredRoutes = this.getRouteList('preferredRoutes')\n    return preferredRoutes && preferredRoutes.find(o => o.value === option.value)\n  }\n\n  _isPreferredRouteOptionDisabled = option => {\n    // Disable routes that are banned already.\n    const bannedRoutes = this.getRouteList('bannedRoutes')\n    return bannedRoutes && bannedRoutes.find(o => o.value === option.value)\n  }\n\n  getDistanceStep = distanceInMeters => {\n    // Determine step for max walk/bike based on current value. Increment by a\n    // quarter mile if dealing with small values, whatever number will round off\n    // the number if it is not an integer, or default to one mile.\n    return metersToMiles(distanceInMeters) <= 2\n      ? '.25'\n      : metersToMiles(distanceInMeters) % 1 !== 0\n        ? `${metersToMiles(distanceInMeters) % 1}`\n        : '1'\n  }\n\n  _onSubModeChange = changedMode => {\n    // Get previous transit modes from state and all modes from query.\n    const transitModes = [...this.state.transitModes]\n    const allModes = this.props.currentQuery.mode.split(',')\n    const index = transitModes.indexOf(changedMode)\n    if (index === -1) {\n      // If submode was not selected, add it.\n      transitModes.push(changedMode)\n      allModes.push(changedMode)\n    } else {\n      // Otherwise, remove it.\n      transitModes.splice(index, 1)\n      const i = allModes.indexOf(changedMode)\n      allModes.splice(i, 1)\n    }\n    // Update transit modes in state.\n    this.setState({transitModes})\n    // Update all modes in query (set to walk if all transit modes inactive).\n    this.props.setQueryParam({ mode: allModes.join(',') || 'WALK' })\n  }\n\n  _setMaxWalkDistance = evt => {\n    this.props.setQueryParam({ maxWalkDistance: milesToMeters(evt.target.value) })\n  }\n\n  /**\n   * Get list of routes for specified key (either 'bannedRoutes' or\n   * 'preferredRoutes').\n   */\n  getRouteList = key => {\n    const routesParam = this.props.currentQuery[key]\n    const idList = routesParam ? routesParam.split(',') : []\n    if (this.state.routeOptions) {\n      return this.state.routeOptions.filter(o => idList.indexOf(o.value) !== -1)\n    } else {\n      // If route list is not available, default labels to route IDs.\n      return idList.map(id => ({value: id, label: id}))\n    }\n  }\n\n  routeToOption = route => {\n    if (!route) return null\n    const {id, longName, shortName} = route\n    // For some reason the OTP API expects route IDs in this double\n    // underscore format\n    // FIXME: This replace is flimsy! What if there are more colons?\n    const value = id.replace(':', '__')\n    const label = shortName\n      ? `${shortName}${longName ? ` - ${longName}` : ''}`\n      : longName\n    return {value, label}\n  }\n\n  render () {\n    const {currentQuery, modes, ModeIcon} = this.props\n    const {maxBikeDistance, maxWalkDistance, mode} = currentQuery\n    const bannedRoutes = this.getRouteList('bannedRoutes')\n    const preferredRoutes = this.getRouteList('preferredRoutes')\n    const transitModes = modes.transitModes.map(modeObj => {\n      const modeStr = modeObj.mode || modeObj\n      return {\n        id: modeStr,\n        selected: this.state.transitModes.indexOf(modeStr) !== -1,\n        text: (\n          <span>\n            <ModeIcon mode={modeStr} />\n          </span>\n        ),\n        title: modeObj.label\n      }\n    })\n    // FIXME: Set units via config.\n    const unitsString = '(mi.)'\n    return (\n      <div>\n        <div style={{alignItems: 'center', display: 'flex', justifyContent: 'space-between'}}>\n          <label style={{fontWeight: '400'}}>\n            Max walk {unitsString}\n            <input\n              onChange={this._setMaxWalkDistance}\n              onKeyDown={this._handleFormKeyDown}\n              step={this.getDistanceStep(maxWalkDistance)}\n              min='0'\n              style={{display: 'block', marginRight: '10px', width: '60px'}}\n              value={metersToMiles(maxWalkDistance)}\n              type='number' />\n          </label>\n          {hasBike(mode)\n            ? <label style={{fontWeight: '400'}}>\n              Max bike {unitsString}\n              <input\n                onChange={this._setMaxBikeDistance}\n                onKeyDown={this._handleFormKeyDown}\n                step={this.getDistanceStep(maxBikeDistance)}\n                min='0'\n                style={{display: 'block', marginRight: '10px', width: '60px'}}\n                value={metersToMiles(maxBikeDistance)}\n                type='number' />\n            </label>\n            : null\n          }\n          <StyledSubmodeSelector\n            modes={transitModes}\n            onChange={this._onSubModeChange}\n            // FIXME: Need to pass onKeyDown to children buttons in\n            // otp-ui.\n            onKeyDown={this._handleFormKeyDown}\n          />\n        </div>\n        <Select\n          value={preferredRoutes}\n          id='preferredRoutes'\n          isMulti\n          isOptionDisabled={this._isPreferredRouteOptionDisabled}\n          options={this.state.routeOptions}\n          onChange={this._setPreferredRoutes}\n          placeholder='Select preferred routes...' />\n        <Select\n          value={bannedRoutes}\n          id='bannedRoutes'\n          isMulti\n          isOptionDisabled={this._isBannedRouteOptionDisabled}\n          options={this.state.routeOptions}\n          onChange={this._setBannedRoutes}\n          placeholder='Select banned routes...' />\n      </div>\n    )\n  }\n}\n\nconst TIME_FORMATS = [\n  'HH:mm:ss',\n  'h:mm:ss a',\n  'h:mm:ssa',\n  'h:mm a',\n  'h:mma',\n  'h:mm',\n  'HHmm',\n  'hmm',\n  'ha',\n  'h',\n  'HH:mm'\n].map(format => `YYYY-MM-DDT${format}`)\n\nclass DateTimeOptions extends Component {\n  _setDepartArrive = evt => {\n    const {value: departArrive} = evt.target\n    if (departArrive === 'NOW') {\n      this.props.setQueryParam({\n        departArrive,\n        date: moment().format(OTP_API_DATE_FORMAT),\n        time: moment().format(OTP_API_TIME_FORMAT)\n      })\n    } else {\n      this.props.setQueryParam({ departArrive })\n    }\n  }\n\n  handleDateChange = evt => {\n    this.props.setQueryParam({ date: evt.target.value })\n  }\n\n  handleTimeChange = evt => {\n    const timeInput = evt.target.value\n    console.log(timeInput)\n    const date = moment().startOf('day').format('YYYY-MM-DD')\n    const time = moment(date + 'T' + timeInput, TIME_FORMATS)\n    this.props.setQueryParam({ time: time.format(OTP_API_TIME_FORMAT) })\n  }\n\n  render () {\n    const {date, departArrive, time} = this.props\n    const leaveNow = departArrive === 'NOW' && !date && !time\n    const dateTime = moment(`${date} ${time}`)\n    const cleanDate = dateTime.format('YYYY-MM-DD')\n    const cleanTime = dateTime.format('HH:mm')\n    return (\n      <>\n        <select\n          onBlur={this._setDepartArrive}\n          onKeyDown={this.props.onKeyDown}\n          value={departArrive}\n          onChange={this._setDepartArrive}>\n          {departureOptions.map(o => (\n            <option key={o.value} {...o} />\n          ))}\n        </select>\n        {leaveNow\n          ? null\n          : <span style={{\n            display: 'inline-flex'\n          }}>\n            <span>{cleanTime}</span>\n            <input\n              style={{width: '50px'}}\n              onKeyDown={this.props.onKeyDown}\n              required\n              onChange={this.handleTimeChange}\n            />\n          </span>\n        }\n        {leaveNow\n          ? null\n          : <input\n            onKeyDown={this.props.onKeyDown}\n            type='date'\n            value={cleanDate}\n            style={{\n              position: 'absolute',\n              left: '180px',\n              width: '124px',\n              border: 'none',\n              outline: 'none'\n            }}\n            required\n            onChange={this.handleDateChange}\n          />\n        }\n      </>\n    )\n  }\n}\n\n// connect to the redux store\nconst mapStateToProps = (state, ownProps) => {\n  const showUserSettings = getShowUserSettings(state.otp)\n  return {\n    activeSearch: getActiveSearch(state.otp),\n    currentQuery: state.otp.currentQuery,\n    expandAdvanced: state.otp.user.expandAdvanced,\n    mainPanelContent: state.otp.ui.mainPanelContent,\n    modes: state.otp.config.modes,\n    routes: state.otp.transitIndex.routes,\n    showUserSettings\n  }\n}\n\nconst mapDispatchToProps = {\n  findRoutes: apiActions.findRoutes,\n  routingQuery: apiActions.routingQuery,\n  setQueryParam: formActions.setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CallTakerPanel)\n"]}