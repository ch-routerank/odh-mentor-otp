{"version":3,"sources":["print-layout.js"],"names":["PrintLayout","Component","constructor","props","setState","mapVisible","state","window","print","componentDidMount","location","parseUrlQueryString","root","document","getElementsByTagName","setAttribute","search","componentWillUnmount","removeAttribute","render","config","itinerary","LegIcon","float","_toggleMap","_print","PropTypes","object","elementType","isRequired","func","mapStateToProps","ownProps","otp","mapDispatchToProps","routingQuery"],"mappings":"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","sourcesContent":["import PrintableItinerary from '@opentripplanner/printable-itinerary'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { parseUrlQueryString } from '../../actions/form'\nimport { routingQuery } from '../../actions/api'\nimport DefaultMap from '../map/default-map'\nimport TripDetails from '../narrative/connected-trip-details'\nimport { getActiveItinerary } from '../../util/state'\n\nclass PrintLayout extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object,\n    LegIcon: PropTypes.elementType.isRequired,\n    parseUrlQueryString: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      mapVisible: true\n    }\n  }\n\n  _toggleMap = () => {\n    this.setState({ mapVisible: !this.state.mapVisible })\n  }\n\n  _print = () => {\n    window.print()\n  }\n\n  componentDidMount () {\n    const { location, parseUrlQueryString } = this.props\n    // Add print-view class to html tag to ensure that iOS scroll fix only applies\n    // to non-print views.\n    const root = document.getElementsByTagName('html')[0]\n    root.setAttribute('class', 'print-view')\n    // Parse the URL query parameters, if present\n    if (location && location.search) {\n      parseUrlQueryString()\n    }\n  }\n\n  /**\n   * Remove class attribute from html tag on clean up.\n   */\n  componentWillUnmount () {\n    const root = document.getElementsByTagName('html')[0]\n    root.removeAttribute('class')\n  }\n\n  render () {\n    const { config, itinerary, LegIcon } = this.props\n    return (\n      <div className='otp print-layout'>\n        {/* The header bar, including the Toggle Map and Print buttons */}\n        <div className='header'>\n          <div style={{ float: 'right' }}>\n            <Button bsSize='small' onClick={this._toggleMap}>\n              <i className='fa fa-map' /> Toggle Map\n            </Button>\n            {' '}\n            <Button bsSize='small' onClick={this._print}>\n              <i className='fa fa-print' /> Print\n            </Button>\n          </div>\n          Itinerary\n        </div>\n\n        {/* The map, if visible */}\n        {this.state.mapVisible &&\n          <div className='map-container'>\n            <DefaultMap />\n          </div>\n        }\n\n        {/* The main itinerary body */}\n        {itinerary &&\n          <>\n            <PrintableItinerary\n              config={config}\n              itinerary={itinerary}\n              LegIcon={LegIcon}\n            />\n            <TripDetails itinerary={itinerary} />\n          </>\n        }\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    config: state.otp.config,\n    itinerary: getActiveItinerary(state.otp)\n  }\n}\n\nconst mapDispatchToProps = {\n  parseUrlQueryString,\n  routingQuery\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrintLayout)\n"]}