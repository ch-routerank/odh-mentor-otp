{"version":3,"sources":["connected-settings-selector-panel.js"],"names":["ConnectedSettingsSelectorPanel","Component","render","config","ModeIcon","query","setQueryParam","showUserSettings","props","modes","companies","PropTypes","elementType","isRequired","mapStateToProps","state","ownProps","currentQuery","otp","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA;AAEA,MAAMA,8BAAN,SAA6CC,gBAA7C,CAAuD;AAKrDC,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMF,KAAKC,KANT;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGD,gBAAgB,iBAAI,6BAAC,yBAAD,OADvB,eAGE,6BAAC,mCAAD;AACE,MAAA,QAAQ,EAAEH,QADZ;AAEE,MAAA,WAAW,EAAEC,KAFf;AAGE,MAAA,cAAc,EAAEF,MAAM,CAACM,KAHzB;AAIE,MAAA,kBAAkB,EAAEN,MAAM,CAACO,SAJ7B;AAKE,MAAA,kBAAkB,EAAEJ;AALtB,MAHF,CADF,CADF;AAeD;;AA5BoD,C,CA+BvD;;;gBA/BMN,8B,eACe;AACjBI,EAAAA,QAAQ,EAAEO,mBAAUC,WAAV,CAAsBC;AADf,C;;AAgCrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAEb,IAAAA,MAAF;AAAUc,IAAAA;AAAV,MAA2BF,KAAK,CAACG,GAAvC;AACA,SAAO;AACLb,IAAAA,KAAK,EAAEY,YADF;AAELd,IAAAA,MAFK;AAGLI,IAAAA,gBAAgB,EAAE,gCAAoBQ,KAAK,CAACG,GAA1B;AAHb,GAAP;AAKD,CAPD;;AASA,MAAMC,kBAAkB,GAAG;AACzBb,EAAAA,aAAa,EAAbA;AADyB,CAA3B;;eAIe,yBAAQQ,eAAR,EAAyBK,kBAAzB,EAA6CnB,8BAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\nimport { getShowUserSettings } from '../../util/state'\n\nimport { StyledSettingsSelectorPanel } from './styled'\nimport UserTripSettings from './user-trip-settings'\n\n// TODO: Button title should be bold when button is selected.\n\nclass ConnectedSettingsSelectorPanel extends Component {\n  static propTypes = {\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  render () {\n    const {\n      config,\n      ModeIcon,\n      query,\n      setQueryParam,\n      showUserSettings\n    } = this.props\n    return (\n      <div className='settings-selector-panel'>\n        <div className='modes-panel'>\n          {showUserSettings && <UserTripSettings />}\n\n          <StyledSettingsSelectorPanel\n            ModeIcon={ModeIcon}\n            queryParams={query}\n            supportedModes={config.modes}\n            supportedCompanies={config.companies}\n            onQueryParamChange={setQueryParam}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const { config, currentQuery } = state.otp\n  return {\n    query: currentQuery,\n    config,\n    showUserSettings: getShowUserSettings(state.otp)\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedSettingsSelectorPanel)\n"]}