{"version":3,"sources":["connected-settings-selector-panel.js"],"names":["ConnectedSettingsSelectorPanel","props","config","ModeIcon","query","setQueryParam","showUserSettings","modes","companies","Component","PropTypes","elementType","isRequired","mapStateToProps","state","ownProps","otp","currentQuery","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;IAEMA,8B;;;;;;;;;;;;;6BAKM;AAAA,wBAOJ,KAAKC,KAPD;AAAA,UAENC,MAFM,eAENA,MAFM;AAAA,UAGNC,QAHM,eAGNA,QAHM;AAAA,UAINC,KAJM,eAINA,KAJM;AAAA,UAKNC,aALM,eAKNA,aALM;AAAA,UAMNC,gBANM,eAMNA,gBANM;AAQR,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGA,gBAAgB,iBAAI,6BAAC,yBAAD,OADvB,eAGE,6BAAC,mCAAD;AACE,QAAA,QAAQ,EAAEH,QADZ;AAEE,QAAA,WAAW,EAAEC,KAFf;AAGE,QAAA,cAAc,EAAEF,MAAM,CAACK,KAHzB;AAIE,QAAA,kBAAkB,EAAEL,MAAM,CAACM,SAJ7B;AAKE,QAAA,kBAAkB,EAAEH;AALtB,QAHF,CADF,CADF;AAeD;;;;EA5B0CI,gB,GA+B7C;;;gBA/BMT,8B,eACe;AACjBG,EAAAA,QAAQ,EAAEO,mBAAUC,WAAV,CAAsBC;AADf,C;;AAgCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,mBACVD,KAAK,CAACE,GADI;AAAA,MACnCd,MADmC,cACnCA,MADmC;AAAA,MAC3Be,YAD2B,cAC3BA,YAD2B;AAE3C,SAAO;AACLb,IAAAA,KAAK,EAAEa,YADF;AAELf,IAAAA,MAAM,EAANA,MAFK;AAGLI,IAAAA,gBAAgB,EAAE,gCAAoBQ,KAAK,CAACE,GAA1B;AAHb,GAAP;AAKD,CAPD;;AASA,IAAME,kBAAkB,GAAG;AACzBb,EAAAA,aAAa,EAAbA;AADyB,CAA3B;;eAIe,yBAAQQ,eAAR,EAAyBK,kBAAzB,EAA6ClB,8BAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\nimport { getShowUserSettings } from '../../util/state'\n\nimport { StyledSettingsSelectorPanel } from './styled'\nimport UserTripSettings from './user-trip-settings'\n\n// TODO: Button title should be bold when button is selected.\n\nclass ConnectedSettingsSelectorPanel extends Component {\n  static propTypes = {\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  render () {\n    const {\n      config,\n      ModeIcon,\n      query,\n      setQueryParam,\n      showUserSettings\n    } = this.props\n    return (\n      <div className='settings-selector-panel'>\n        <div className='modes-panel'>\n          {showUserSettings && <UserTripSettings />}\n\n          <StyledSettingsSelectorPanel\n            ModeIcon={ModeIcon}\n            queryParams={query}\n            supportedModes={config.modes}\n            supportedCompanies={config.companies}\n            onQueryParamChange={setQueryParam}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const { config, currentQuery } = state.otp\n  return {\n    query: currentQuery,\n    config,\n    showUserSettings: getShowUserSettings(state.otp)\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedSettingsSelectorPanel)\n"]}