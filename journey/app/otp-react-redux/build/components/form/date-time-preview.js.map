{"version":3,"sources":["date-time-preview.js"],"names":["OTP_API_DATE_FORMAT","OTP_API_TIME_FORMAT","getTimeFormat","getDateFormat","coreUtils","time","DateTimePreview","Component","render","caret","date","editButtonText","departArrive","routingType","startTime","endTime","timeFormat","dateFormat","props","timeStr","moment","locale","getUserLang","separator","formattedTime","utc","format","summary","calendar","sameElse","split","button","onClick","clear","PropTypes","string","compressed","bool","element","func","mapStateToProps","state","ownProps","otp","currentQuery","config","mapDispatchToProps"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nconst {\n  OTP_API_DATE_FORMAT,\n  OTP_API_TIME_FORMAT,\n  getTimeFormat,\n  getDateFormat\n} = coreUtils.time\n\nclass DateTimePreview extends Component {\n  static propTypes = {\n    caret: PropTypes.string,\n    compressed: PropTypes.bool,\n    date: PropTypes.string,\n    departArrive: PropTypes.string,\n    editButtonText: PropTypes.element,\n    time: PropTypes.string,\n    onClick: PropTypes.func,\n    routingType: PropTypes.string\n  }\n\n  static defaultProps = {\n    editButtonText: <i className='fa fa-pencil' />\n  }\n\n  render () {\n    const {\n      caret,\n      date,\n      editButtonText,\n      time,\n      departArrive,\n      routingType,\n      startTime,\n      endTime,\n      timeFormat,\n      dateFormat\n    } = this.props\n\n    let timeStr\n    moment.locale(getUserLang() || \"it\");\n    var separator = getUserLang() === \"it\" ? \"a\" : \"um\";\n    const formattedTime = moment.utc(time, OTP_API_TIME_FORMAT).format(timeFormat)\n    if (routingType === 'ITINERARY') {\n      if (departArrive === 'NOW') timeStr = '$_now_$'\n      else if (departArrive === 'ARRIVE') timeStr = '$_arrive_$ ' + formattedTime\n      else if (departArrive === 'DEPART') timeStr = '$_departure_$ ' + formattedTime\n    } else if (routingType === 'PROFILE') {\n      timeStr = startTime + \" \"+separator+\" \" + endTime\n    }\n\n    const summary = (\n      <div className='summary'>\n        <i className='fa fa-calendar' /> {\n          moment(date, OTP_API_DATE_FORMAT)\n            .calendar(null, { sameElse: dateFormat })\n            .split(\" \"+separator)[0]}\n        <br />\n        <i className='fa fa-clock-o' /> {timeStr}\n      </div>\n    )\n\n    const button = (\n      <div className='button-container'>\n        <Button\n          aria-label='Edit departure or arrival time'\n          onClick={this.props.onClick}\n        >\n          {editButtonText}{caret && <span> <i className={`fa fa-caret-${caret}`} /></span>}\n        </Button>\n      </div>\n    )\n\n    return (\n      <div className='settings-preview' onClick={this.props.onClick}>\n        {summary}\n        {button}\n        <div style={{ clear: 'both' }} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time, routingType, startTime, endTime } = state.otp.currentQuery\n  const config = state.otp.config\n  return {\n    config,\n    routingType,\n    departArrive,\n    date,\n    time,\n    startTime,\n    endTime,\n    timeFormat: getTimeFormat(config),\n    dateFormat: getDateFormat(config)\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimePreview)\n"]}