{"version":3,"sources":["plan-trip-button.js"],"names":["PlanTripButton","Component","props","routingQuery","onClick","coreUtils","ui","isMobile","setMainPanelContent","render","currentQuery","text","locationMissing","from","to","disabled","_onClick","routingType","PropTypes","string","func","planTrip","profileTrip","mapStateToProps","state","ownProps","otp","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA,MAAMA,cAAN,SAA6BC,gBAA7B,CAAuC;AAAA;AAAA;;AAAA,sCAa1B,MAAM;AACf,WAAKC,KAAL,CAAWC,YAAX;AACA,UAAI,OAAO,KAAKD,KAAL,CAAWE,OAAlB,KAA8B,UAAlC,EAA8C,KAAKF,KAAL,CAAWE,OAAX;AAC9C,UAAI,CAACC,mBAAUC,EAAV,CAAaC,QAAb,EAAL,EAA8B,KAAKL,KAAL,CAAWM,mBAAX,CAA+B,IAA/B;AAC/B,KAjBoC;AAAA;;AAmBrCC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAyB,KAAKT,KAApC;AACA,UAAMU,eAAe,GAAG,CAACF,YAAY,CAACG,IAAd,IAAsB,CAACH,YAAY,CAACI,EAA5D;AACA,UAAMC,QAAQ,GAAGH,eAAe,IAAI,KAAKV,KAAL,CAAWa,QAA/C;AACA,wBACE,6BAAC,sBAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,QAAQ,EAAEA,QAFZ;AAGE,MAAA,OAAO,EAAE,KAAKC;AAHhB,OAIEL,IAAI,IAAI,eAJV,CADF;AAOD;;AA9BoC;;gBAAjCX,c,eACe;AACjBiB,EAAAA,WAAW,EAAEC,mBAAUC,MADN;AAEjBR,EAAAA,IAAI,EAAEO,mBAAUC,MAFC;AAGjBf,EAAAA,OAAO,EAAEc,mBAAUE,IAHF;AAIjBC,EAAAA,QAAQ,EAAEH,mBAAUE,IAJH;AAKjBE,EAAAA,WAAW,EAAEJ,mBAAUE;AALN,C;;gBADfpB,c,kBASkB;AACpBe,EAAAA,QAAQ,EAAE;AADU,C;;AAwBxB,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEf,IAAAA,YAAY,EAAEc,KAAK,CAACE,GAAN,CAAUhB;AAA1B,GAAP;AACD,CAFD;;AAIA,MAAMiB,kBAAkB,GAAG;AAAExB,EAAAA,YAAY,EAAZA,iBAAF;AAAgBK,EAAAA,mBAAmB,EAAnBA;AAAhB,CAA3B;;eAEe,yBAAQe,eAAR,EAAyBI,kBAAzB,EAA6C3B,cAA7C,C","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { routingQuery } from '../../actions/api'\nimport { setMainPanelContent } from '../../actions/ui'\n\nclass PlanTripButton extends Component {\n  static propTypes = {\n    routingType: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    planTrip: PropTypes.func,\n    profileTrip: PropTypes.func\n  }\n\n  static defaultProps = {\n    disabled: false\n  }\n\n  _onClick = () => {\n    this.props.routingQuery()\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n    if (!coreUtils.ui.isMobile()) this.props.setMainPanelContent(null)\n  }\n\n  render () {\n    const { currentQuery, text } = this.props\n    const locationMissing = !currentQuery.from || !currentQuery.to\n    const disabled = locationMissing || this.props.disabled\n    return (\n      <Button\n        className='plan-trip-button'\n        disabled={disabled}\n        onClick={this._onClick}\n      >{text || '$_plan_trip_$'}</Button>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { currentQuery: state.otp.currentQuery }\n}\n\nconst mapDispatchToProps = { routingQuery, setMainPanelContent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanTripButton)\n"]}