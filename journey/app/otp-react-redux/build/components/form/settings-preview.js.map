{"version":3,"sources":["settings-preview.js"],"names":["SettingsPreview","Component","render","caret","config","query","editButtonText","props","messages","defaultProps","showDot","coreUtils","isNotDefaultQuery","button","label","replace","onClick","addClass","match","clear","PropTypes","string","compressed","bool","element","showCaret","func","companies","modeGroups","array","queryModes","mapStateToProps","state","ownProps","otp","language","settingsPreview","currentQuery","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,eAAN,SAA8BC,gBAA9B,CAAwC;AAsBtCC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,QAA2C,KAAKC,KAAtD;AACA,UAAMC,QAAQ,GAAG,6BAAcR,eAAe,CAACS,YAA9B,EAA4C,KAAKF,KAAjD,CAAjB,CAFQ,CAGR;;AACA,QAAIG,OAAO,GAAGC,aAAUN,KAAV,CAAgBO,iBAAhB,CAAkCP,KAAlC,EAAyCD,MAAzC,CAAd;;AACA,UAAMS,MAAM,gBACV;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,sBAAD;AACE,oBAAYL,QAAQ,CAACM,KAAT,CAAeC,OAAf,CAAuB,IAAvB,EAA6B,GAA7B,CADd;AAEE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS;AAFtB,OAIGV,cAJH,EAImBH,KAAK,iBAAI,6DAAO;AAAG,MAAA,SAAS,EAAG,eAAcA,KAAM;AAAnC,MAAP,CAJ5B,CADF,EAOGO,OAAO,iBAAI;AAAK,MAAA,SAAS,EAAC;AAAf,MAPd,CADF,CALQ,CAgBR;AACA;;;AACA,UAAMO,QAAQ,GAAGT,QAAQ,CAACM,KAAT,CAAeI,KAAf,CAAqB,IAArB,IAA6B,EAA7B,GAAkC,OAAnD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWS;AAAtD,oBACE;AAAK,MAAA,SAAS,EAAG,UAASC,QAAS;AAAnC,OACGT,QAAQ,CAACM,KADZ,CADF,EAIGD,MAJH,eAKE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT;AAAZ,MALF,CADF;AASD;;AAlDqC;;gBAAlCnB,e,eACe;AACjB;AACAG,EAAAA,KAAK,EAAEiB,mBAAUC,MAFA;AAGjBC,EAAAA,UAAU,EAAEF,mBAAUG,IAHL;AAIjBjB,EAAAA,cAAc,EAAEc,mBAAUI,OAJT;AAKjBC,EAAAA,SAAS,EAAEL,mBAAUG,IALJ;AAMjBP,EAAAA,OAAO,EAAEI,mBAAUM,IANF;AAQjB;AACAC,EAAAA,SAAS,EAAEP,mBAAUC,MATJ;AAUjBO,EAAAA,UAAU,EAAER,mBAAUS,KAVL;AAWjBC,EAAAA,UAAU,EAAEV,mBAAUS;AAXL,C;;gBADf7B,e,kBAekB;AACpBM,EAAAA,cAAc,eAAE;AAAG,IAAA,SAAS,EAAC;AAAb,IADI;AAEpBE,EAAAA,QAAQ,EAAE;AACRM,IAAAA,KAAK,EAAE;AADC;AAFU,C;;AAsCxB,MAAMiB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACL7B,IAAAA,MAAM,EAAE4B,KAAK,CAACE,GAAN,CAAU9B,MADb;AAELI,IAAAA,QAAQ,EAAEwB,KAAK,CAACE,GAAN,CAAU9B,MAAV,CAAiB+B,QAAjB,CAA0BC,eAF/B;AAGL/B,IAAAA,KAAK,EAAE2B,KAAK,CAACE,GAAN,CAAUG;AAHZ,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAG,EAA3B;;eAEe,yBAAQP,eAAR,EAAyBO,kBAAzB,EAA6CtC,eAA7C,C","sourcesContent":["import coreUtils from '../../otp-ui/core-utils/src'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { mergeMessages } from '../../util/messages'\n\nclass SettingsPreview extends Component {\n  static propTypes = {\n    // component props\n    caret: PropTypes.string,\n    compressed: PropTypes.bool,\n    editButtonText: PropTypes.element,\n    showCaret: PropTypes.bool,\n    onClick: PropTypes.func,\n\n    // application state\n    companies: PropTypes.string,\n    modeGroups: PropTypes.array,\n    queryModes: PropTypes.array\n  }\n\n  static defaultProps = {\n    editButtonText: <i className='fa fa-pencil' />,\n    messages: {\n      label: '$_settings_$'\n    }\n  }\n\n  render () {\n    const { caret, config, query, editButtonText } = this.props\n    const messages = mergeMessages(SettingsPreview.defaultProps, this.props)\n    // Show dot indicator if the current query differs from the default query.\n    let showDot = coreUtils.query.isNotDefaultQuery(query, config)\n    const button = (\n      <div className='button-container'>\n        <Button\n          aria-label={messages.label.replace('\\n', ' ')}\n          onClick={this.props.onClick}\n        >\n          {editButtonText}{caret && <span> <i className={`fa fa-caret-${caret}`} /></span>}\n        </Button>\n        {showDot && <div className='dot' />}\n      </div>\n    )\n    // Add tall class to account for vertical centering if there is only\n    // one line in the label (default is 2).\n    const addClass = messages.label.match(/\\n/) ? '' : ' tall'\n    return (\n      <div className='settings-preview' onClick={this.props.onClick}>\n        <div className={`summary${addClass}`}>\n          {messages.label}\n        </div>\n        {button}\n        <div style={{ clear: 'both' }} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    config: state.otp.config,\n    messages: state.otp.config.language.settingsPreview,\n    query: state.otp.currentQuery\n  }\n}\n\nconst mapDispatchToProps = { }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPreview)\n"]}