{"version":3,"sources":["connected-stop-viewer-overlay.js"],"names":["mapStateToProps","state","ownProps","viewedStop","otp","ui","stop","transitIndex","stops","stopId","StopMarker","DefaultStopMarker","mapDispatchToProps","StopViewerOverlay"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMC,UAAU,GAAGF,KAAK,CAACG,GAAN,CAAUC,EAAV,CAAaF,UAAhC;AACA,SAAO;AACLG,IAAAA,IAAI,EAAEH,UAAU,GACZF,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBC,KAAvB,CAA6BL,UAAU,CAACM,MAAxC,CADY,GAEZ,IAHC;AAILC,IAAAA,UAAU,EAAEC;AAJP,GAAP;AAMD,CARD;;AAUA,IAAMC,kBAAkB,GAAG,EAA3B;;eAEe,yBAAQZ,eAAR,EAAyBY,kBAAzB,EAA6CC,0BAA7C,C","sourcesContent":["import StopViewerOverlay from '@opentripplanner/stop-viewer-overlay'\nimport DefaultStopMarker from '@opentripplanner/stop-viewer-overlay/lib/default-stop-marker'\nimport { connect } from 'react-redux'\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const viewedStop = state.otp.ui.viewedStop\n  return {\n    stop: viewedStop\n      ? state.otp.transitIndex.stops[viewedStop.stopId]\n      : null,\n    StopMarker: DefaultStopMarker\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StopViewerOverlay)\n"]}