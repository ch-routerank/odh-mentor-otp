{"version":3,"sources":["location-search.js"],"names":["MobileLocationSearch","Component","props","setMobileScreen","MobileScreens","SEARCH_FORM","render","backScreen","location","locationType","otherLocation","suppressNearby","category","name","_locationSelected","PropTypes","number","string","mapStateToProps","state","ownProps","otp","currentQuery","type","to","from","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,oBAAN,SAAmCC,gBAAnC,CAA6C;AAAA;AAAA;;AAAA,+CAMvB,MAAM;AACxB,WAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,WAAzC;AACD,KAR0C;AAAA;;AAU3CC,EAAAA,MAAM,GAAI;AACR,UAAM;AACJC,MAAAA,UADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKR,KALT;AAMA,UAAMS,cAAc,GAAGD,aAAa,IAClCA,aAAa,CAACE,QAAd,KAA2B,kBAD7B;AAEA,wBACE,6BAAC,kBAAD,qBACE,6BAAC,sBAAD;AACE,MAAA,UAAU,EAAG,WAAUH,YAAY,KAAK,IAAjB,GAAwB,cAAxB,GAAyC,SAAU,EAD5E;AAEE,MAAA,cAAc,MAFhB;AAGE,MAAA,UAAU,EAAEF;AAHd,MADF,eAME;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,+BAAD;AACE,MAAA,iBAAiB,MADnB;AAEE,MAAA,gBAAgB,EAAEC,QAAQ,GAAGA,QAAQ,CAACK,IAAZ,GAAmB,mBAF/C;AAGE,MAAA,YAAY,EAAEJ,YAHhB;AAIE,MAAA,kBAAkB,EAAE,KAAKK,iBAJ3B;AAKE,MAAA,MAAM,MALR;AAME,MAAA,cAAc,EAAEH;AANlB,MADF,CANF,CADF;AAmBD;;AAtC0C,C,CAyC7C;;;gBAzCMX,oB,eACe;AACjBO,EAAAA,UAAU,EAAEQ,mBAAUC,MADL;AAEjBP,EAAAA,YAAY,EAAEM,mBAAUE;AAFP,C;;AA0CrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLZ,IAAAA,QAAQ,EAAEW,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBF,QAAQ,CAACX,YAAhC,CADL;AAELC,IAAAA,aAAa,EAAEU,QAAQ,CAACG,IAAT,KAAkB,MAAlB,GACXJ,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBE,EADZ,GAEXL,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBG;AAJtB,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAG;AACzBvB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQe,eAAR,EAAyBQ,kBAAzB,EAA6C1B,oBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\nimport LocationField from '../form/connected-location-field'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileLocationSearch extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    locationType: PropTypes.string\n  }\n\n  _locationSelected = () => {\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  render () {\n    const {\n      backScreen,\n      location,\n      locationType,\n      otherLocation\n    } = this.props\n    const suppressNearby = otherLocation &&\n      otherLocation.category === 'CURRENT_LOCATION'\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={`Imposta ${locationType === 'to' ? 'Destinazione' : 'Origine'}`}\n          showBackButton\n          backScreen={backScreen}\n        />\n        <div className='location-search mobile-padding'>\n          <LocationField\n            hideExistingValue\n            inputPlaceholder={location ? location.name : '$_type_location_$'}\n            locationType={locationType}\n            onLocationSelected={this._locationSelected}\n            static\n            suppressNearby={suppressNearby}\n          />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    location: state.otp.currentQuery[ownProps.locationType],\n    otherLocation: ownProps.type === 'from'\n      ? state.otp.currentQuery.to\n      : state.otp.currentQuery.from\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileLocationSearch)\n"]}