{"version":3,"sources":["results-screen.js"],"names":["LocationContainer","styled","div","LocationSummaryContainer","LocationsSummaryColFromTo","Col","LocationsSummaryRow","Row","StyledLocationIcon","LocationIcon","MobileResultsScreen","Component","constructor","props","clearActiveSearch","setMobileScreen","MobileScreens","SEARCH_FORM","_setExpanded","state","expanded","setUseRealtimeResponse","useRealtime","componentDidMount","coreUtils","ui","enableScrollForSelector","componentDidUpdate","prevProps","activeLeg","setState","refs","scrollTop","render","activeItineraryIndex","error","itineraryClass","itineraryFooter","LegIcon","query","realtimeEffects","resultCount","narrativeContainerStyle","top","overflowY","height","backgroundColor","headerAction","showRealtimeAnnotation","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","locationsSummary","from","name","marginTop","to","_editSearchClicked","width","dots","i","push","map","bottom","_optionClicked","marginLeft","padding","PropTypes","number","element","object","func","mapStateToProps","ownProps","activeSearch","otp","response","nonRealtimeResponse","itineraries","currentQuery","routingType","length","profile","activeItinerary","mapDispatchToProps"],"mappings":"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","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport LocationIcon from '@opentripplanner/location-icon'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport DefaultMap from '../map/default-map'\nimport ErrorMessage from '../form/error-message'\nimport ItineraryCarousel from '../narrative/itinerary-carousel'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setUseRealtimeResponse } from '../../actions/narrative'\nimport { clearActiveSearch } from '../../actions/form'\nimport { getActiveItineraries, getActiveSearch, getRealtimeEffects } from '../../util/state'\n\nconst LocationContainer = styled.div`\n  font-weight: 300;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nconst LocationSummaryContainer = styled.div`\n  height: 50px;\n  left: 0;\n  padding-right: 10px;\n  position: fixed;\n  right: 0;\n  top: 50px;\n`\n\nconst LocationsSummaryColFromTo = styled(Col)`\n  font-size: 1.1em;\n  line-height: 1.2em;\n`\n\nconst LocationsSummaryRow = styled(Row)`\n  padding: 4px 8px;\n`\n\nconst StyledLocationIcon = styled(LocationIcon)`\n  margin: 3px;\n`\n\nclass MobileResultsScreen extends Component {\n  static propTypes = {\n    activeItineraryIndex: PropTypes.number,\n    map: PropTypes.element,\n    query: PropTypes.object,\n    resultCount: PropTypes.number,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      expanded: false\n    }\n  }\n\n  componentDidMount () {\n    // Get the target element that we want to persist scrolling for\n    // FIXME Do we need to add something that removes the listeners when\n    // component unmounts?\n    coreUtils.ui.enableScrollForSelector('.mobile-narrative-container')\n  }\n\n  componentDidUpdate (prevProps) {\n    // Check if the active leg changed\n    if (this.props.activeLeg !== prevProps.activeLeg) {\n      this._setExpanded(false)\n    }\n  }\n\n  _setExpanded (expanded) {\n    this.setState({ expanded })\n    this.refs['narrative-container'].scrollTop = 0\n  }\n\n  _editSearchClicked = () => {\n    this.props.clearActiveSearch()\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  _optionClicked = () => {\n    this._setExpanded(!this.state.expanded)\n  }\n\n  _toggleRealtime = () => this.props.setUseRealtimeResponse({useRealtime: !this.props.useRealtime})\n\n  render () {\n    const {\n      activeItineraryIndex,\n      error,\n      itineraryClass,\n      itineraryFooter,\n      LegIcon,\n      query,\n      realtimeEffects,\n      resultCount,\n      useRealtime\n    } = this.props\n    const { expanded } = this.state\n\n    const narrativeContainerStyle = expanded\n      ? { top: 140, overflowY: 'auto' }\n      : { height: 80, overflowY: 'hidden' }\n\n    // Ensure that narrative covers map.\n    narrativeContainerStyle.backgroundColor = 'white'\n\n    let headerAction = null\n    const showRealtimeAnnotation = realtimeEffects.isAffectedByRealtimeData && (\n      realtimeEffects.exceedsThreshold ||\n      realtimeEffects.routesDiffer ||\n      !useRealtime\n    )\n\n    /* Old navbar alert\n    if (showRealtimeAnnotation) {\n      headerAction = (\n        <RealtimeAnnotation\n          componentClass='popover'\n          toggleRealtime={this._toggleRealtime}\n          realtimeEffects={realtimeEffects}\n          useRealtime={useRealtime}\n        />\n      )\n    */\n\n    const locationsSummary = (\n      <LocationSummaryContainer>\n        <LocationsSummaryRow className='locations-summary'>\n          <LocationsSummaryColFromTo xs={8} sm={11}>\n            <LocationContainer>\n              <StyledLocationIcon type='from' /> { query.from ? query.from.name : '' }\n            </LocationContainer>\n            <LocationContainer style={{ marginTop: 2 }}>\n              <StyledLocationIcon type='to' /> { query.to ? query.to.name : '' }\n            </LocationContainer>\n          </LocationsSummaryColFromTo>\n          <Col xs={4} sm={1}>\n            <Button\n              className='edit-search-button pull-right'\n              onClick={this._editSearchClicked}\n            >Edit</Button>\n          </Col>\n        </LocationsSummaryRow>\n      </LocationSummaryContainer>\n    )\n\n    if (error) {\n      return (\n        <MobileContainer>\n          <MobileNavigationBar headerText='Nessun viaggio trovato' />\n          {locationsSummary}\n          <div className='results-error-map'><DefaultMap /></div>\n          <div className='results-error-message'>\n            <ErrorMessage error={error} />\n            <div className='options-lower-tray mobile-padding'>\n              <Button className='back-to-search-button' onClick={this._editSearchClicked} style={{ width: '100%' }}>\n                <i className='fa fa-arrow-left' /> Back to Search\n              </Button>\n            </div>\n          </div>\n        </MobileContainer>\n      )\n    }\n\n    // Construct the 'dots'\n    const dots = []\n    for (let i = 0; i < resultCount; i++) {\n      dots.push(<div key={i} className={`dot${activeItineraryIndex === i ? ' active' : ''}`} />)\n    }\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={resultCount\n            ? `$_found_$ ${resultCount} ${resultCount > 1 ? '$_options_$' : '$_option_$'}`\n            : 'Attendi...'\n          }\n          headerAction={headerAction}\n        />\n        {locationsSummary}\n\n        <div className='results-map'>\n          {this.props.map}\n        </div>\n\n        <div\n          className='mobile-narrative-header'\n          style={{ bottom: expanded ? null : 100, top: expanded ? 100 : null }}\n          onClick={this._optionClicked}\n        >\n          Option {activeItineraryIndex + 1}\n          <i className={`fa fa-caret-${expanded ? 'down' : 'up'}`} style={{ marginLeft: 8 }} />\n        </div>\n\n        <div\n          ref='narrative-container'\n          className='mobile-narrative-container'\n          style={narrativeContainerStyle}\n        >\n          <ItineraryCarousel\n            itineraryClass={itineraryClass}\n            itineraryFooter={itineraryFooter}\n            hideHeader\n            expanded={this.state.expanded}\n            onClick={this._optionClicked}\n            showRealtimeAnnotation={showRealtimeAnnotation}\n            LegIcon={LegIcon}\n          />\n        </div>\n\n        <div className='dots-container' style={{ padding: 'none' }}>{dots}</div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {useRealtime} = state.otp\n  const response = !activeSearch\n    ? null\n    : useRealtime ? activeSearch.response : activeSearch.nonRealtimeResponse\n\n  const realtimeEffects = getRealtimeEffects(state.otp)\n  const itineraries = getActiveItineraries(state.otp)\n  return {\n    query: state.otp.currentQuery,\n    realtimeEffects,\n    error: response && response.error,\n    resultCount:\n      response\n        ? activeSearch.query.routingType === 'ITINERARY'\n          ? itineraries.length\n          : response.otp.profile.length\n        : null,\n    useRealtime,\n    activeItineraryIndex: activeSearch ? activeSearch.activeItinerary : null,\n    activeLeg: activeSearch ? activeSearch.activeLeg : null\n  }\n}\n\nconst mapDispatchToProps = {\n  clearActiveSearch,\n  setMobileScreen,\n  setUseRealtimeResponse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileResultsScreen)\n"]}