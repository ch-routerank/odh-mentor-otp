{"version":3,"sources":["route-viewer.js"],"names":["MobileRouteViewer","Component","props","setViewedRoute","setMainPanelContent","render","languageConfig","routeViewer","_backClicked","PropTypes","func","mapStateToProps","state","ownProps","otp","config","language","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,iBAAN,SAAgCC,gBAAhC,CAA0C;AAAA;AAAA;;AAAA,0CAMzB,MAAM;AACnB,WAAKC,KAAL,CAAWC,cAAX,CAA0B,IAA1B;AACA,WAAKD,KAAL,CAAWE,mBAAX,CAA+B,IAA/B;AACD,KATuC;AAAA;;AAWxCC,EAAAA,MAAM,GAAI;AACR,wBACE,6BAAC,kBAAD,qBACE,6BAAC,sBAAD;AACE,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,cAAX,CAA0BC,WAA1B,IAAyC,kBADvD;AAEE,MAAA,cAAc,MAFhB;AAGE,MAAA,aAAa,EAAE,KAAKC;AAHtB,MADF,eAME;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,mBAAD,OADF,CANF,eAUE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,oBAAD;AAAa,MAAA,cAAc;AAA3B,MADF,CAVF,CADF;AAgBD;;AA5BuC,C,CA+B1C;;;gBA/BMR,iB,eACe;AACjBG,EAAAA,cAAc,EAAEM,mBAAUC,IADT;AAEjBN,EAAAA,mBAAmB,EAAEK,mBAAUC;AAFd,C;;AAgCrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLP,IAAAA,cAAc,EAAEM,KAAK,CAACE,GAAN,CAAUC,MAAV,CAAiBC;AAD5B,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBd,EAAAA,cAAc,EAAdA,kBADyB;AAEzBC,EAAAA,mBAAmB,EAAnBA;AAFyB,CAA3B;;eAKe,yBAAQO,eAAR,EAAyBM,kBAAzB,EAA6CjB,iBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport RouteViewer from '../viewers/route-viewer'\nimport DefaultMap from '../map/default-map'\n\nimport { setViewedRoute, setMainPanelContent } from '../../actions/ui'\n\nclass MobileRouteViewer extends Component {\n  static propTypes = {\n    setViewedRoute: PropTypes.func,\n    setMainPanelContent: PropTypes.func\n  }\n\n  _backClicked = () => {\n    this.props.setViewedRoute(null)\n    this.props.setMainPanelContent(null)\n  }\n\n  render () {\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={this.props.languageConfig.routeViewer || 'Visualizza Linee'}\n          showBackButton\n          onBackClicked={this._backClicked}\n        />\n        <div className='viewer-map'>\n          <DefaultMap />\n        </div>\n\n        <div className='viewer-container'>\n          <RouteViewer hideBackButton />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    languageConfig: state.otp.config.language\n  }\n}\n\nconst mapDispatchToProps = {\n  setViewedRoute,\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileRouteViewer)\n"]}