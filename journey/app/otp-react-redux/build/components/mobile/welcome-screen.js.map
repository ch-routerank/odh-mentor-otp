{"version":3,"sources":["welcome-screen.js"],"names":["MobileWelcomeScreen","Component","props","setMobileScreen","MobileScreens","SET_INITIAL_LOCATION","selection","type","setLocationToCurrent","locationType","render","title","_toFieldClicked","_locationSetFromPopup","map","PropTypes","element","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA,MAAMA,mBAAN,SAAkCC,gBAAlC,CAA4C;AAAA;AAAA;;AAAA,6CAQxB,MAAM;AACtB,WAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,oBAAzC;AACD,KAVyC;;AAAA,mDAgBjBC,SAAD,IAAe;AACrC;AACA;AACA;AACA,UAAIA,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC7B,aAAKL,KAAL,CAAWM,oBAAX,CAAgC;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAhC;AACD;AACF,KAvByC;AAAA;;AAyB1CC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,wBACE,6BAAC,kBAAD,qBACE,6BAAC,sBAAD;AAAqB,MAAA,KAAK,EAAES;AAA5B,MADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,+BAAD;AACE,MAAA,gBAAgB,EAAC,cADnB;AAEE,MAAA,YAAY,EAAC,IAFf;AAGE,MAAA,gBAAgB,EAAE,KAAKC,eAHzB;AAIE,MAAA,eAAe,EAAE;AAJnB,MADF,CAFF,eAUE;AAAK,MAAA,SAAS,EAAC;AAAf,oBACE,6BAAC,mBAAD;AAAY,MAAA,aAAa,EAAE,KAAKC;AAAhC,MADF,CAVF,CADF;AAgBD;;AA3CyC,C,CA8C5C;;;gBA9CMb,mB,eACe;AACjBc,EAAAA,GAAG,EAAEC,mBAAUC,OADE;AAGjBR,EAAAA,oBAAoB,EAAEO,mBAAUE,IAHf;AAIjBd,EAAAA,eAAe,EAAEY,mBAAUE;AAJV,C;;AA+CrB,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;AACzBb,EAAAA,oBAAoB,EAApBA,yBADyB;AAEzBL,EAAAA,eAAe,EAAfA;AAFyB,CAA3B;;eAKe,yBAAQe,eAAR,EAAyBG,kBAAzB,EAA6CrB,mBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport LocationField from '../form/connected-location-field'\nimport DefaultMap from '../map/default-map'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setLocationToCurrent } from '../../actions/map'\n\nclass MobileWelcomeScreen extends Component {\n  static propTypes = {\n    map: PropTypes.element,\n\n    setLocationToCurrent: PropTypes.func,\n    setMobileScreen: PropTypes.func\n  }\n\n  _toFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_INITIAL_LOCATION)\n  }\n\n  /* Called when the user selects a from/to location using the selection\n   * popup (invoked in mobile mode via a long tap). Note that BaseMap already\n   * takes care of updating the query in the store w/ the selected location */\n\n  _locationSetFromPopup = (selection) => {\n    // If the tapped location was selected as the 'from' endpoint, set the 'to'\n    // endpoint to be the current user location. (If selected as the 'to' point,\n    // no action is needed since 'from' is the current location by default.)\n    if (selection.type === 'from') {\n      this.props.setLocationToCurrent({ locationType: 'to' })\n    }\n  }\n\n  render () {\n    const { title } = this.props\n    return (\n      <MobileContainer>\n        <MobileNavigationBar title={title} />\n        <div className='welcome-location mobile-padding'>\n          <LocationField\n            inputPlaceholder='$_where_go_$'\n            locationType='to'\n            onTextInputClick={this._toFieldClicked}\n            showClearButton={false}\n          />\n        </div>\n        <div className='welcome-map'>\n          <DefaultMap onSetLocation={this._locationSetFromPopup} />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  setLocationToCurrent,\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileWelcomeScreen)\n"]}