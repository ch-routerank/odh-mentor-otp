{"version":3,"sources":["itinerary-details.js"],"names":["ItineraryDetails","Component","render","itinerary","activeLeg","activeStep","LegIcon","setActiveLeg","setActiveStep","props","legs","map","leg","index","legIsActive","coreUtils","isTransit","mode","PropTypes","object","elementType","isRequired"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEe,MAAMA,gBAAN,SAA+BC,gBAA/B,CAAyC;AAMtDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,OAApC;AAA6CC,MAAAA,YAA7C;AAA2DC,MAAAA;AAA3D,QAA6E,KAAKC,KAAxF;AACA,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGN,SAAS,CAACO,IAAV,CAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,YAAMC,WAAW,GAAGV,SAAS,KAAKS,KAAlC;AACA,aAAOE,aAAUZ,SAAV,CAAoBa,SAApB,CAA8BJ,GAAG,CAACK,IAAlC,iBACH,6BAAC,mBAAD;AACA,QAAA,MAAM,EAAEH,WADR;AAEA,QAAA,KAAK,EAAED,KAFP;AAGA,QAAA,GAAG,EAAEA,KAHL;AAIA,QAAA,GAAG,EAAED,GAJL;AAKA,QAAA,OAAO,EAAEN,OALT;AAMA,QAAA,YAAY,EAAEC;AANd,QADG,gBAQH,6BAAC,kBAAD;AACA,QAAA,MAAM,EAAEO,WADR;AAEA,QAAA,UAAU,EAAET,UAFZ;AAGA,QAAA,KAAK,EAAEQ,KAHP;AAIA,QAAA,GAAG,EAAEA,KAJL;AAKA,QAAA,GAAG,EAAED,GALL;AAMA,QAAA,YAAY,EAAEL,YANd;AAOA,QAAA,aAAa,EAAEC;AAPf,QARJ;AAgBD,KAlBA,CADH,CADF;AAuBD;;AA/BqD;;;;gBAAnCR,gB,eACA;AACjBG,EAAAA,SAAS,EAAEe,mBAAUC,MADJ;AAEjBb,EAAAA,OAAO,EAAEY,mBAAUE,WAAV,CAAsBC;AAFd,C","sourcesContent":["import coreUtils from '../../../otp-ui/core-utils/src'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport AccessLeg from './access-leg'\nimport TransitLeg from './transit-leg'\n\nexport default class ItineraryDetails extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object,\n    LegIcon: PropTypes.elementType.isRequired\n  }\n\n  render () {\n    const { itinerary, activeLeg, activeStep, LegIcon, setActiveLeg, setActiveStep } = this.props\n    return (\n      <div className='detail'>\n        {itinerary.legs.map((leg, index) => {\n          const legIsActive = activeLeg === index\n          return coreUtils.itinerary.isTransit(leg.mode)\n            ? <TransitLeg\n              active={legIsActive}\n              index={index}\n              key={index}\n              leg={leg}\n              LegIcon={LegIcon}\n              setActiveLeg={setActiveLeg} />\n            : <AccessLeg\n              active={legIsActive}\n              activeStep={activeStep}\n              index={index}\n              key={index}\n              leg={leg}\n              setActiveLeg={setActiveLeg}\n              setActiveStep={setActiveStep} />\n        })}\n      </div>\n    )\n  }\n}\n"]}