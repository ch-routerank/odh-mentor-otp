{"version":3,"sources":["itinerary-summary.js"],"names":["modeColors","BICYCLE","BUS","CAR","PARK","RAIL","WALK","DEFAULT_COLOR","getModeColor","mode","color","toUpperCase","ItinerarySummary","Component","render","itinerary","LegIcon","props","blocks","legs","forEach","leg","i","length","transitLeg","title","routeShortName","routeLongName","style","margin","padding","height","width","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","push","PropTypes","object","elementType","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst modeColors = {\n  BICYCLE: '#E0C3E2',\n  BUS: '#CAC3DF',\n  CAR: '#E4CCCC',\n  PARK: '#E4CCCC',\n  RAIL: '#BDDAC0',\n  WALK: '#DFC486'\n}\nconst DEFAULT_COLOR = 'grey'\n\nfunction getModeColor (mode) {\n  if (!mode) return DEFAULT_COLOR\n  let color = modeColors[mode.toUpperCase()]\n  if (typeof color === 'undefined') color = DEFAULT_COLOR\n  return color\n}\n\nexport default class ItinerarySummary extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object,\n    LegIcon: PropTypes.elementType.isRequired\n  }\n\n  render () {\n    const { itinerary, LegIcon } = this.props\n\n    const blocks = []\n    itinerary.legs.forEach((leg, i) => {\n      // Skip mid-itinerary walk transfer legs\n      if (\n        i > 0 &&\n        i < itinerary.legs.length - 1 &&\n        !leg.transitLeg &&\n        itinerary.legs[i - 1].transitLeg &&\n        itinerary.legs[i + 1].transitLeg) {\n        return null\n      }\n\n      // Add the mode icon\n      let title = leg.mode\n      if (leg.transitLeg) {\n        title = leg.routeShortName\n          ? `${leg.routeShortName}${leg.routeLongName ? ` - ${leg.routeLongName}` : ''}`\n          : leg.routeLongName\n      }\n      const style = {\n        margin: '0px',\n        padding: '3px',\n        height: '24px',\n        width: '24px',\n        backgroundColor: getModeColor(leg.mode)\n      }\n      if (i === 0) {\n        style.borderTopLeftRadius = '4px'\n        style.borderBottomLeftRadius = '4px'\n      }\n      if (i === itinerary.legs.length - 1) {\n        style.borderTopRightRadius = '4px'\n        style.borderBottomRightRadius = '4px'\n      }\n      blocks.push(\n        <div\n          style={style}\n          title={title}\n          key={blocks.length}\n          className='summary-block mode-block'\n        >\n          <LegIcon leg={leg} />\n        </div>\n      )\n    })\n\n    return <div className='summary'>{blocks}</div>\n  }\n}\n"]}