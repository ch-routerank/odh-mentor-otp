{"version":3,"sources":["itinerary-carousel.js"],"names":["ItineraryCarousel","Component","props","onClick","activeItinerary","itineraries","setActiveItinerary","length","index","indexLatest","render","itineraryClass","hideHeader","pending","user","views","map","itinerary","React","createElement","key","expanded","_onItineraryClick","_onLeftClick","_onRightClick","_onSwipe","PropTypes","array","number","bool","func","setActiveLeg","setActiveStep","companies","string","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","activeLeg","activeStep","currentQuery","timeFormat","coreUtils","time","getTimeFormat","config","loggedInUser","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","sourcesContent":["import coreUtils from '../../otp-ui/core-utils/src'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport SwipeableViews from 'react-swipeable-views'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport Icon from './icon'\nimport DefaultItinerary from './default/default-itinerary'\nimport Loading from './loading'\nimport { getActiveItineraries, getActiveSearch } from '../../util/state'\n\nclass ItineraryCarousel extends Component {\n  state = {}\n  static propTypes = {\n    itineraries: PropTypes.array,\n    pending: PropTypes.number,\n    activeItinerary: PropTypes.number,\n    hideHeader: PropTypes.bool,\n    itineraryClass: PropTypes.func,\n    onClick: PropTypes.func,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    expanded: PropTypes.bool,\n    companies: PropTypes.string\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  _onItineraryClick = () => {\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n  }\n\n  _onLeftClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === 0 ? itineraries.length - 1 : activeItinerary - 1)\n  }\n\n  _onRightClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === itineraries.length - 1 ? 0 : activeItinerary + 1)\n  }\n\n  _onSwipe = (index, indexLatest) => {\n    this.props.setActiveItinerary(index)\n  }\n\n  render () {\n    const { activeItinerary, itineraries, itineraryClass, hideHeader, pending, user } = this.props\n    if (pending) return <Loading small />\n    if (!itineraries) return null\n\n    const views = itineraries.map((itinerary, index) => {\n      return React.createElement(itineraryClass, {\n        itinerary,\n        index,\n        key: index,\n        expanded: this.props.expanded,\n        onClick: this._onItineraryClick,\n        user,\n        ...this.props\n      })\n    })\n\n    return (\n      <div className='options itinerary'>\n        {hideHeader\n          ? null\n          : <div className='header carousel-header'>\n            <Button\n              className='carousel-left-button carousel-button'\n              disabled={activeItinerary === 0}\n              onClick={this._onLeftClick}>\n              <Icon type='arrow-left' />\n            </Button>\n            <div\n              className='text-center carousel-header-text'>\n              {activeItinerary + 1} of {itineraries.length}\n            </div>\n            <Button\n              disabled={activeItinerary === itineraries.length - 1}\n              className='pull-right carousel-right-button carousel-button'\n              onClick={this._onRightClick}>\n              <Icon type='arrow-right' />\n            </Button>\n          </div>\n        }\n        <SwipeableViews\n          index={activeItinerary}\n          onChangeIndex={this._onSwipe}\n        >{views}</SwipeableViews>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const itineraries = getActiveItineraries(state.otp)\n\n  return {\n    itineraries,\n    pending: activeSearch && activeSearch.pending,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    companies: state.otp.currentQuery.companies,\n    timeFormat: coreUtils.time.getTimeFormat(state.otp.config),\n    user: state.user.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryCarousel)\n"]}