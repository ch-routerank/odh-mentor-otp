{"version":3,"sources":["narrative-itineraries.js"],"names":["humanReadableMode","modeStr","arr","toLowerCase","replace","split","length","last","pop","join","NarrativeItineraries","Component","setState","showDetails","state","window","confirm","evt","sort","updateItineraryFilter","props","value","target","filter","type","direction","e","setUseRealtimeResponse","useRealtime","itineraries","modes","pending","count","combinations","Array","from","v","i","render","activeItinerary","activeSearch","containerStyle","errors","itineraryClass","persistence","realtimeEffects","itineraryIsExpanded","undefined","showRealtimeAnnotation","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","resultText","display","justifyContent","flexGrow","_toggleDetailedItinerary","enabled","whiteSpace","overflow","textOverflow","_onFilterChange","_onSortDirChange","marginRight","_onSortChange","overflowY","map","itinerary","index","active","React","createElement","key","routingType","expanded","onClick","mode","requestParameters","error","msg","_renderLoadingDivs","PropTypes","array","func","number","setActiveItinerary","setActiveLeg","setActiveStep","bool","DefaultItinerary","mapStateToProps","ownProps","otp","config","Boolean","activeLeg","activeStep","timeFormat","coreUtils","time","getTimeFormat","visibleItinerary","mapDispatchToProps","dispatch","payload","leg","step","setVisibleItinerary"],"mappings":"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","sourcesContent":["import coreUtils from '../../otp-ui/core-utils/src'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { connect } from 'react-redux'\n\nimport {\n  setActiveItinerary,\n  setActiveLeg,\n  setActiveStep,\n  setUseRealtimeResponse,\n  setVisibleItinerary,\n  updateItineraryFilter\n} from '../../actions/narrative'\nimport DefaultItinerary from './default/default-itinerary'\nimport Icon from '../narrative/icon'\nimport LinkButton from '../user/link-button'\nimport {\n  getActiveErrors,\n  getActiveItineraries,\n  getActiveSearch,\n  getRealtimeEffects\n} from '../../util/state'\n\n// TODO: move to utils?\nfunction humanReadableMode (modeStr) {\n  if (!modeStr) return 'N/A'\n  const arr = modeStr.toLowerCase().replace(/_/g, ' ').split(',')\n  if (arr.length > 2) {\n    const last = arr.pop()\n    return arr.join(', ') + ' and ' + last\n  } else {\n    return arr.join(' and ')\n  }\n}\n\nclass NarrativeItineraries extends Component {\n  static propTypes = {\n    itineraries: PropTypes.array,\n    itineraryClass: PropTypes.func,\n    pending: PropTypes.number,\n    activeItinerary: PropTypes.number,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    setUseRealtimeResponse: PropTypes.func,\n    useRealtime: PropTypes.bool\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  state = {}\n\n  _toggleDetailedItinerary = () => {\n    this.setState({showDetails: !this.state.showDetails})\n  }\n\n  _saveTrip = () => {\n    // FIXME: Replace with new save-trip functionality.\n    window.confirm('Are you sure you want to save this trip?')\n  }\n\n  _onFilterChange = evt => {\n    const {sort, updateItineraryFilter} = this.props\n    const {value} = evt.target\n    updateItineraryFilter({filter: value, sort})\n  }\n\n  _onSortChange = evt => {\n    const {value: type} = evt.target\n    const {filter, sort, updateItineraryFilter} = this.props\n    updateItineraryFilter({filter, sort: {...sort, type}})\n  }\n\n  _onSortDirChange = () => {\n    const {filter, sort, updateItineraryFilter} = this.props\n    const direction = sort.direction === 'ASC' ? 'DESC' : 'ASC'\n    updateItineraryFilter({filter, sort: {...sort, direction}})\n  }\n\n  _toggleRealtimeItineraryClick = (e) => {\n    const {setUseRealtimeResponse, useRealtime} = this.props\n    setUseRealtimeResponse({useRealtime: !useRealtime})\n  }\n\n  _renderLoadingDivs = () => {\n    const {itineraries, modes, pending} = this.props\n    if (!pending) return null\n    // Construct loading divs as placeholders while all itineraries load.\n    const count = modes.combinations\n      ? modes.combinations.length - itineraries.length\n      : 0\n    return Array.from(\n      {length: count},\n      (v, i) =>\n        <div key={i} className='option default-itin'>\n          <SkeletonTheme color='#ddd' highlightColor='#eee'>\n            <Skeleton count={3} />\n          </SkeletonTheme>\n        </div>\n    )\n  }\n\n  render () {\n    const {\n      activeItinerary,\n      activeSearch,\n      containerStyle,\n      errors,\n      filter,\n      itineraries,\n      itineraryClass,\n      pending,\n      persistence,\n      realtimeEffects,\n      sort,\n      useRealtime\n    } = this.props\n    if (!activeSearch) return null\n    const itineraryIsExpanded = activeItinerary !== undefined && activeItinerary !== null && this.state.showDetails\n    const showRealtimeAnnotation = realtimeEffects.isAffectedByRealtimeData && (\n      realtimeEffects.exceedsThreshold ||\n      realtimeEffects.routesDiffer ||\n      !useRealtime\n    )\n    const resultText = pending\n      ? 'Finding your options...'\n      : `${itineraries.length} itineraries found.`\n    return (\n      <div className='options itinerary' style={containerStyle}>\n        <div\n          className='options header'\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexGrow: '0'\n          }}\n        >\n          {itineraryIsExpanded\n            ? <>\n              <button\n                className='clear-button-formatting'\n                onClick={this._toggleDetailedItinerary}>\n                <i className='fa fa-arrow-left' /> View all options\n              </button>\n              {/* FIXME: only save if meets requirements (e.g., is transit + non-realtime mode) */}\n              {persistence && persistence.enabled\n                ? <LinkButton\n                  componentClass='button'\n                  className='clear-button-formatting'\n                  to='/savetrip'\n                >\n                  <i className='fa fa-plus-circle' /> Save trip\n                </LinkButton>\n                : null\n              }\n            </>\n            : <>\n              <div\n                title={resultText}\n                style={{\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis'\n                }}>\n                {resultText}\n              </div>\n              { // FIXME: Enable only when ITINERARY/BATCH routing type enabled.\n                <select\n                  onChange={this._onFilterChange}\n                  value={filter}\n                >\n                  <option value='ALL'>All modes</option>\n                  <option value='TRANSIT'>Transit only</option>\n                  <option value='ACTIVE'>Active only</option>\n                  <option value='CAR'>Uses car</option>\n                </select>\n              }\n              <div style={{display: 'inherit'}} className='sort-options'>\n                <button\n                  onClick={this._onSortDirChange} className='clear-button-formatting'\n                  style={{marginRight: '5px'}}>\n                  <i className={`fa fa-sort-amount-${sort.direction.toLowerCase()}`} />\n                </button>\n                <select onChange={this._onSortChange} value={sort.value}>\n                  <option value='BEST'>Best option</option>\n                  <option value='DURATION'>Duration</option>\n                  <option value='ARRIVALTIME'>Arrival time</option>\n                  <option value='DEPARTURETIME'>Departure time</option>\n                  <option value='WALKTIME'>Walk time</option>\n                  <option value='COST'>Cost</option>\n                </select>\n              </div>\n            </>\n          }\n        </div>\n        <div\n          // FIXME: Change to a ul with li children?\n          className='list'\n          style={{\n            flexGrow: '1',\n            overflowY: 'auto'\n          }}\n        >\n          {itineraries.map((itinerary, index) => {\n            const active = index === activeItinerary\n            // Hide non-active itineraries.\n            if (!active && itineraryIsExpanded) return null\n            return React.createElement(itineraryClass, {\n              itinerary,\n              index,\n              key: index,\n              active,\n              routingType: 'ITINERARY',\n              sort,\n              expanded: this.state.showDetails,\n              onClick: active ? this._toggleDetailedItinerary : undefined,\n              showRealtimeAnnotation,\n              ...this.props\n            })\n          })}\n          {/* FIXME: Flesh out error design/move to component? */}\n          {errors.map((e, i) => {\n            const mode = humanReadableMode(e.requestParameters.mode)\n            return (\n              <div key={i} className='option default-itin'>\n                <h4>\n                  <Icon className='text-warning' type='exclamation-triangle' />{' '}\n                  No trip found for {mode}\n                </h4>\n                <div>{e.error.msg}</div>\n              </div>\n            )\n          })}\n          {this._renderLoadingDivs()}\n        </div>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {persistence} = state.otp.config\n  const {modes} = state.otp.config\n  const {filter, sort} = state.otp.filter\n  const pending = activeSearch ? Boolean(activeSearch.pending) : false\n  const itineraries = getActiveItineraries(state.otp)\n  const realtimeEffects = getRealtimeEffects(state.otp)\n  const useRealtime = state.otp.useRealtime\n  return {\n    activeSearch,\n    errors: getActiveErrors(state.otp),\n    // swap out realtime itineraries with non-realtime depending on boolean\n    itineraries,\n    pending,\n    realtimeEffects,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    filter,\n    modes,\n    persistence,\n    sort,\n    timeFormat: coreUtils.time.getTimeFormat(state.otp.config),\n    useRealtime,\n    visibleItinerary: activeSearch && activeSearch.visibleItinerary\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  // FIXME: update signature of these methods,\n  // so that only one argument is passed,\n  // e.g. setActiveLeg({ index, leg })\n  return {\n    setActiveItinerary: payload => dispatch(setActiveItinerary(payload)),\n    // FIXME\n    setActiveLeg: (index, leg) => {\n      dispatch(setActiveLeg({index, leg}))\n    },\n    // FIXME\n    setActiveStep: (index, step) => {\n      dispatch(setActiveStep({index, step}))\n    },\n    setUseRealtimeResponse: payload => dispatch(setUseRealtimeResponse(payload)),\n    setVisibleItinerary: payload => dispatch(setVisibleItinerary(payload)),\n    updateItineraryFilter: payload => dispatch(updateItineraryFilter(payload))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  NarrativeItineraries\n)\n"]}