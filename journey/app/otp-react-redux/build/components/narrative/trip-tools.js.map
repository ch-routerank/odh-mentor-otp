{"version":3,"sources":["trip-tools.js"],"names":["TripTools","Component","render","buttonTypes","reportConfig","reactRouterConfig","props","buttonComponents","forEach","type","push","mailto","startOverUrl","basename","map","btn","i","CopyUrlButton","constructor","setState","showCopied","routerId","window","sessionStorage","getItem","url","location","href","parts","split","length","console","warn","setTimeout","_resetState","state","_onClick","PrintButton","printUrl","replace","open","ReportIssueButton","subject","bodyLines","bowser","name","version","osname","osversion","encodeURIComponent","join","LinkButton","icon","text","mapStateToProps","ownProps","otp","config","reportIssue","reactRouter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\n// import { DropdownButton, MenuItem } from 'react-bootstrap'\nimport copyToClipboard from 'copy-to-clipboard'\nimport bowser from 'bowser'\n\nclass TripTools extends Component {\n  static defaultProps = {\n    buttonTypes: [ 'COPY_URL', 'PRINT', 'REPORT_ISSUE', 'START_OVER' ]\n  }\n\n  render () {\n    const { buttonTypes, reportConfig, reactRouterConfig } = this.props\n\n    const buttonComponents = []\n    buttonTypes.forEach((type) => {\n      switch (type) {\n        case 'COPY_URL':\n          buttonComponents.push(<CopyUrlButton />)\n          break\n        case 'PRINT':\n          buttonComponents.push(<PrintButton />)\n          break\n        case 'REPORT_ISSUE':\n          if (!reportConfig || !reportConfig.mailto) break\n          buttonComponents.push(<ReportIssueButton {...reportConfig} />)\n          break\n        case 'START_OVER':\n          // Determine \"home\" URL\n          let startOverUrl = '/'\n          if (reactRouterConfig && reactRouterConfig.basename) {\n            startOverUrl += reactRouterConfig.basename\n          }\n          buttonComponents.push(<LinkButton icon='undo' text='$_restart_$' url={startOverUrl} />)\n          break\n      }\n    })\n\n    return (\n      <div className='trip-tools'>\n        {buttonComponents.map((btn, i) => <div key={i} className='button-container'>{btn}</div>)}\n      </div>\n    )\n  }\n}\n\n// Share/Save Dropdown Component -- not used currently\n\n/*\nclass ShareSaveDropdownButton extends Component {\n  _onCopyToClipboardClick = () => {\n    copyToClipboard(window.location.href)\n  }\n\n  render () {\n    return (\n      <DropdownButton\n        className='tool-button'\n        title={<span><i className='fa fa-share' /> Share/Save</span>}\n        id={'tool-share-dropdown'}\n      >\n        <MenuItem onClick={this._onCopyToClipboardClick}>\n          <i className='fa fa-clipboard' /> Copy Link to Clipboard\n        </MenuItem>\n      </DropdownButton>\n    )\n  }\n}\n*/\n\n// Copy URL Button\n\nclass CopyUrlButton extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { showCopied: false }\n  }\n\n  _resetState = () => this.setState({ showCopied: false })\n\n  _onClick = () => {\n    // If special routerId has been set in session storage, construct copy URL\n    // for itinerary with #/start/ prefix to set routerId on page load.\n    const routerId = window.sessionStorage.getItem('routerId')\n    let url = window.location.href\n    if (routerId) {\n      const parts = url.split('#')\n      if (parts.length === 2) {\n        url = `${parts[0]}#/start/x/x/x/${routerId}${parts[1]}`\n      } else {\n        console.warn('URL not formatted as expected, copied URL will not contain session routerId.', routerId)\n      }\n    }\n    copyToClipboard(url)\n    this.setState({ showCopied: true })\n    window.setTimeout(this._resetState, 2000)\n  }\n\n  render () {\n    return (\n      <div>\n        <Button\n          className='tool-button'\n          onClick={this._onClick}\n        >\n          {this.state.showCopied\n            ? <span><i className='fa fa-check' /> Copied</span>\n            : <span><i className='fa fa-clipboard' /> Copy Link</span>\n          }\n        </Button>\n      </div>\n    )\n  }\n}\n\n// Print Button Component\n\nclass PrintButton extends Component {\n  _onClick = () => {\n    // Note: this is designed to work only with hash routing.\n    const printUrl = window.location.href.replace('#', '#/print')\n    window.open(printUrl, '_blank')\n  }\n\n  render () {\n    return (\n      <div>\n        <Button\n          className='tool-button'\n          onClick={this._onClick}\n        >\n          <i className='fa fa-print' /> Print\n        </Button>\n      </div>\n    )\n  }\n}\n\n// Report Issue Button Component\n\nclass ReportIssueButton extends Component {\n  static defaultProps = {\n    subject: 'Reporting an Issue with OpenTripPlanner'\n  }\n\n  _onClick = () => {\n    const { mailto, subject } = this.props\n\n    const bodyLines = [\n      '                       *** INSTRUCTIONS TO USER ***',\n      'This feature allows you to email a report to site administrators for review.',\n      `Please add any additional feedback for this trip under the 'Additional Comments'`,\n      'section below and send using your regular email program.',\n      '',\n      'SEARCH DATA:',\n      'Address: ' + window.location.href,\n      'Browser: ' + bowser.name + ' ' + bowser.version,\n      'OS: ' + bowser.osname + ' ' + bowser.osversion,\n      '',\n      'ADDITIONAL COMMENTS:',\n      ''\n    ]\n\n    window.open(`mailto:${mailto}?subject=${subject}&body=${encodeURIComponent(bodyLines.join('\\n'))}`, '_self')\n  }\n\n  render () {\n    return (\n      <Button\n        className='tool-button'\n        onClick={this._onClick}\n      >\n        <i className='fa fa-flag' /> Report Issue\n      </Button>\n    )\n  }\n}\n\n// Link to URL Button\n\nclass LinkButton extends Component {\n  _onClick = () => {\n    window.location.href = this.props.url\n  }\n\n  render () {\n    const { icon, text } = this.props\n    return (\n      <div>\n        <Button\n          className='tool-button'\n          onClick={this._onClick}\n        >\n          {icon && <span><i className={`fa fa-${icon}`} /> </span>}\n          {text}\n        </Button>\n      </div>\n    )\n  }\n}\n\n// Connect main class to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    reportConfig: state.otp.config.reportIssue,\n    reactRouterConfig: state.otp.config.reactRouter\n  }\n}\n\nexport default connect(mapStateToProps)(TripTools)\n"]}