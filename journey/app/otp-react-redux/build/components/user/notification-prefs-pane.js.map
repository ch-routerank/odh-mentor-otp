{"version":3,"sources":["notification-prefs-pane.js"],"names":["allowedNotificationChannels","type","text","Details","styled","div","NotificationPrefsPane","Component","e","onUserDataChange","props","notificationChannel","phoneNumber","target","value","render","userData","email","_handleNotificationChannelChange","map","index","_handlePhoneNumberChange","PropTypes","func","isRequired","object"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,2BAA2B,GAAG,CAClC;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADkC,EAKlC;AACED,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALkC,EASlC;AACED,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATkC,CAApC,C,CAeA;AACA;;AACA,MAAMC,OAAO,GAAGC,0BAAOC,GAAI;AAC3B;AACA,CAFA;AAIA;AACA;AACA;;AACA,MAAMC,qBAAN,SAAoCC,gBAApC,CAA8C;AAAA;AAAA;;AAAA,8DAMTC,CAAC,IAAI;AACtC,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKC,KAAlC;AACAD,MAAAA,gBAAgB,CAAC;AAAEE,QAAAA,mBAAmB,EAAEH;AAAvB,OAAD,CAAhB;AACD,KAT2C;;AAAA,sDAWjBA,CAAC,IAAI;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKC,KAAlC;AACAD,MAAAA,gBAAgB,CAAC;AAAEG,QAAAA,WAAW,EAAEJ,CAAC,CAACK,MAAF,CAASC;AAAxB,OAAD,CAAhB;AACD,KAd2C;AAAA;;AAgB5CC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKN,KAA1B;AACA,UAAM;AACJO,MAAAA,KADI;AAEJN,MAAAA,mBAFI;AAGJC,MAAAA;AAHI,QAIFI,QAJJ;AAMA,wBACE,uDACE,yGADF,eAIE,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,uDADF,eAEE,6BAAC,6BAAD,qBACE,6BAAC,iCAAD;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,QAAQ,EAAE,KAAKE,gCAFjB;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAEP;AAJT,OAMGX,2BAA2B,CAACmB,GAA5B,CAAgC,CAAC;AAAElB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAiBkB,KAAjB,kBAC/B,6BAAC,4BAAD;AACE,MAAA,OAAO,EAAET,mBAAmB,KAAKV,IAAxB,GAA+B,SAA/B,GAA2C,SADtD;AAEE,MAAA,GAAG,EAAEmB,KAFP;AAGE,MAAA,KAAK,EAAEnB;AAHT,OAKGC,IALH,CADD,CANH,CADF,CAFF,CAJF,eAyBE,6BAAC,OAAD,QACGS,mBAAmB,KAAK,OAAxB,iBACC,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,mDADF,eAEE,6BAAC,2BAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,KAAK,EAAEM;AAAzC,MAFF,CAFJ,EAOGN,mBAAmB,KAAK,KAAxB,iBACC,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,yDADF,eAGE,6BAAC,2BAAD;AAAa,MAAA,QAAQ,EAAE,KAAKU,wBAA5B;AAAsD,MAAA,IAAI,EAAC,KAA3D;AAAiE,MAAA,KAAK,EAAET;AAAxE,MAHF,CARJ,CAzBF,CADF;AA2CD;;AAnE2C;;gBAAxCN,qB,eACe;AACjBG,EAAAA,gBAAgB,EAAEa,mBAAUC,IAAV,CAAeC,UADhB;AAEjBR,EAAAA,QAAQ,EAAEM,mBAAUG,MAAV,CAAiBD;AAFV,C;;eAqENlB,qB","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { ButtonToolbar, ControlLabel, FormControl, FormGroup, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst allowedNotificationChannels = [\n  {\n    type: 'email',\n    text: 'Email'\n  },\n  {\n    type: 'sms',\n    text: 'SMS'\n  },\n  {\n    type: 'none',\n    text: 'Don\\'t notify me'\n  }\n]\n\n// Styles\n// HACK: Preverve container height.\nconst Details = styled.div`\n  height: 150px;\n`\n\n/**\n * User notification preferences pane.\n */\nclass NotificationPrefsPane extends Component {\n  static propTypes = {\n    onUserDataChange: PropTypes.func.isRequired,\n    userData: PropTypes.object.isRequired\n  }\n\n  _handleNotificationChannelChange = e => {\n    const { onUserDataChange } = this.props\n    onUserDataChange({ notificationChannel: e })\n  }\n\n  _handlePhoneNumberChange = e => {\n    const { onUserDataChange } = this.props\n    onUserDataChange({ phoneNumber: e.target.value })\n  }\n\n  render () {\n    const { userData } = this.props\n    const {\n      email,\n      notificationChannel,\n      phoneNumber\n    } = userData\n\n    return (\n      <div>\n        <p>\n          You can receive notifications about trips you frequently take.\n        </p>\n        <FormGroup>\n          <ControlLabel>How would you like to receive notifications?</ControlLabel>\n          <ButtonToolbar>\n            <ToggleButtonGroup\n              name='notificationChannels'\n              onChange={this._handleNotificationChannelChange}\n              type='radio'\n              value={notificationChannel}\n            >\n              {allowedNotificationChannels.map(({ type, text }, index) => (\n                <ToggleButton\n                  bsStyle={notificationChannel === type ? 'primary' : 'default'}\n                  key={index}\n                  value={type}\n                >\n                  {text}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          </ButtonToolbar>\n        </FormGroup>\n        <Details>\n          {notificationChannel === 'email' && (\n            <FormGroup>\n              <ControlLabel>Notification emails will be sent out to:</ControlLabel>\n              <FormControl disabled type='text' value={email} />\n            </FormGroup>\n          )}\n          {notificationChannel === 'sms' && (\n            <FormGroup>\n              <ControlLabel>Enter your phone number for SMS notifications:</ControlLabel>\n              {/* TODO: Add field validation. */}\n              <FormControl onChange={this._handlePhoneNumberChange} type='tel' value={phoneNumber} />\n            </FormGroup>\n          )}\n        </Details>\n      </div>\n    )\n  }\n}\n\nexport default NotificationPrefsPane\n"]}