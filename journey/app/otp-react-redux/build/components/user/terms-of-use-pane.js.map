{"version":3,"sources":["terms-of-use-pane.js"],"names":["TermsOfUsePane","Component","e","onUserDataChange","props","storeTripHistory","target","checked","hasConsentedToTerms","render","disableCheckTerms","userData","_handleCheckTermsChange","_handleCheckHistoryChange","PropTypes","bool","func","isRequired","object"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA,MAAMA,cAAN,SAA6BC,gBAA7B,CAAuC;AAAA;AAAA;;AAAA,uDAOTC,CAAC,IAAI;AAC/B,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKC,KAAlC;AACAD,MAAAA,gBAAgB,CAAC;AAAEE,QAAAA,gBAAgB,EAAEH,CAAC,CAACI,MAAF,CAASC;AAA7B,OAAD,CAAhB;AACD,KAVoC;;AAAA,qDAYXL,CAAC,IAAI;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKC,KAAlC;AACAD,MAAAA,gBAAgB,CAAC;AAAEK,QAAAA,mBAAmB,EAAEN,CAAC,CAACI,MAAF,CAASC;AAAhC,OAAD,CAAhB;AACD,KAfoC;AAAA;;AAiBrCE,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAAkC,KAAKP,KAA7C;AACA,UAAM;AACJI,MAAAA,mBADI;AAEJH,MAAAA;AAFI,QAGFM,QAHJ;AAKA,wBACE,uDACE,6BAAC,4BAAD,8DADF,eAGE,6BAAC,yBAAD,qBACE,6BAAC,wBAAD;AACE,MAAA,OAAO,EAAEH,mBADX;AAEE,MAAA,QAAQ,EAAEE,iBAFZ;AAGE,MAAA,QAAQ,EAAEA,iBAAiB,GAAG,IAAH,GAAU,KAAKE;AAH5C,uDAMiC;AAAG,MAAA,IAAI,EAAC;AAAR,0BANjC,iCADF,CAHF,eAcE,6BAAC,yBAAD,qBACE,6BAAC,wBAAD;AACE,MAAA,OAAO,EAAEP,gBADX;AAEE,MAAA,QAAQ,EAAE,KAAKQ;AAFjB,qJAMuC;AAAG,MAAA,IAAI,EAAC;AAAR,sBANvC,CADF,CAdF,CADF;AA2BD;;AAnDoC;;gBAAjCb,c,eACe;AACjBU,EAAAA,iBAAiB,EAAEI,mBAAUC,IADZ;AAEjBZ,EAAAA,gBAAgB,EAAEW,mBAAUE,IAAV,CAAeC,UAFhB;AAGjBN,EAAAA,QAAQ,EAAEG,mBAAUI,MAAV,CAAiBD;AAHV,C;;eAqDNjB,c","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Checkbox, ControlLabel, FormGroup } from 'react-bootstrap'\n\n/**\n * User terms of use pane.\n */\nclass TermsOfUsePane extends Component {\n  static propTypes = {\n    disableCheckTerms: PropTypes.bool,\n    onUserDataChange: PropTypes.func.isRequired,\n    userData: PropTypes.object.isRequired\n  }\n\n  _handleCheckHistoryChange = e => {\n    const { onUserDataChange } = this.props\n    onUserDataChange({ storeTripHistory: e.target.checked })\n  }\n\n  _handleCheckTermsChange = e => {\n    const { onUserDataChange } = this.props\n    onUserDataChange({ hasConsentedToTerms: e.target.checked })\n  }\n\n  render () {\n    const { disableCheckTerms, userData } = this.props\n    const {\n      hasConsentedToTerms,\n      storeTripHistory\n    } = userData\n\n    return (\n      <div>\n        <ControlLabel>You must agree to the terms of service to continue.</ControlLabel>\n\n        <FormGroup>\n          <Checkbox\n            checked={hasConsentedToTerms}\n            disabled={disableCheckTerms}\n            onChange={disableCheckTerms ? null : this._handleCheckTermsChange}\n          >\n            {/* TODO: Implement the link */}\n            I have read and consent to the <a href='/#/terms-of-service'>Terms of Service</a> for using the Trip Planner.\n          </Checkbox>\n        </FormGroup>\n\n        <FormGroup>\n          <Checkbox\n            checked={storeTripHistory}\n            onChange={this._handleCheckHistoryChange}\n          >\n            {/* TODO: Implement the link */}\n            Optional: I consent to the Trip Planner storing my historical planned trips in order to\n            improve transit services in my area. <a href='/#/terms-of-storage'>More info...</a>\n          </Checkbox>\n        </FormGroup>\n      </div>\n    )\n  }\n}\n\nexport default TermsOfUsePane\n"]}