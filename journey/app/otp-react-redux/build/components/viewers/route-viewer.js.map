{"version":3,"sources":["route-viewer.js"],"names":["operatorIndexForRoute","transitOperators","route","agency","index","findIndex","o","id","toLowerCase","split","order","getContrastYIQ","hexcolor","replace","r","parseInt","substr","g","b","yiq","RouteViewer","props","setMainPanelContent","findRoutes","findRoute","hideBackButton","languageConfig","routes","setViewedRoute","viewedRoute","sortedRoutes","Object","values","sort","coreUtils","routeComparator","agencySortedRoutes","length","a","_backClicked","routeViewer","routeViewerDetails","clear","map","routeId","Component","PropTypes","bool","object","RouteRow","isActive","operator","defaultRouteColor","defaultRouteTextColor","longNameSplitter","backgroundColor","color","contrastColor","textColor","longName","nameParts","shortName","borderBottom","padding","width","_onClick","display","marginTop","fontSize","fontWeight","animation","url","PureComponent","mapStateToProps","state","ownProps","otp","config","transitIndex","ui","language","mapDispatchToProps"],"mappings":"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","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport React, { Component, PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Label, Button } from 'react-bootstrap'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../narrative/icon'\n\nimport { setMainPanelContent, setViewedRoute } from '../../actions/ui'\nimport { findRoutes, findRoute } from '../../actions/api'\n\nfunction operatorIndexForRoute (transitOperators, route) {\n  if (!route.agency) return 0\n  const index = transitOperators.findIndex(o =>\n    o.id.toLowerCase() === route.agency.id.split(':')[0].toLowerCase())\n  if (index !== -1 && typeof transitOperators[index].order !== 'undefined') return transitOperators[index].order\n  else return 0\n}\n\n/**\n * Determine the appropriate contrast color for text (white or black) based on\n * the input hex string (e.g., '#ff00ff') value.\n *\n * From https://stackoverflow.com/a/11868398/915811\n *\n * TODO: Move to @opentripplanner/core-utils once otp-rr uses otp-ui library.\n */\nfunction getContrastYIQ (hexcolor) {\n  hexcolor = hexcolor.replace('#', '')\n  const r = parseInt(hexcolor.substr(0, 2), 16)\n  const g = parseInt(hexcolor.substr(2, 2), 16)\n  const b = parseInt(hexcolor.substr(4, 2), 16)\n  const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000\n  return (yiq >= 128) ? '000000' : 'ffffff'\n}\n\nclass RouteViewer extends Component {\n  static propTypes = {\n    hideBackButton: PropTypes.bool,\n    routes: PropTypes.object\n  }\n\n  _backClicked = () => this.props.setMainPanelContent(null)\n\n  componentDidMount () {\n    this.props.findRoutes()\n  }\n\n  render () {\n    const {\n      findRoute,\n      hideBackButton,\n      languageConfig,\n      transitOperators,\n      routes,\n      setViewedRoute,\n      viewedRoute\n    } = this.props\n    const sortedRoutes = routes\n      ? Object.values(routes).sort(coreUtils.route.routeComparator)\n      : []\n    const agencySortedRoutes = transitOperators.length > 0\n      ? sortedRoutes.sort((a, b) => {\n        return operatorIndexForRoute(transitOperators, a) - operatorIndexForRoute(transitOperators, b)\n      })\n      : sortedRoutes\n    return (\n      <div className='route-viewer'>\n        {/* Header Block */}\n        <div className='route-viewer-header'>\n          {/* Back button */}\n          {!hideBackButton && (\n            <div className='back-button-container'>\n              <Button\n                bsSize='small'\n                onClick={this._backClicked}\n              ><Icon type='arrow-left' />Back</Button>\n            </div>\n          )}\n\n          {/* Header Text */}\n          <div className='header-text'>\n            {languageConfig.routeViewer || 'Visualizza Linee'}\n          </div>\n          <div className=''>\n            {languageConfig.routeViewerDetails}\n          </div>\n          <div style={{ clear: 'both' }} />\n        </div>\n\n        <div className='route-viewer-body'>\n          {agencySortedRoutes\n            .map(route => {\n              // Find operator based on agency_id (extracted from OTP route ID).\n              // TODO: re-implement multi-agency logos for route viewer.\n              // const operator = operatorForRoute(transitOperators, route) || {}\n              return (\n                <RouteRow\n                  findRoute={findRoute}\n                  isActive={viewedRoute && viewedRoute.routeId === route.id}\n                  key={route.id}\n                  // operator={operator}\n                  route={route}\n                  setViewedRoute={setViewedRoute}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass RouteRow extends PureComponent {\n  _onClick = () => {\n    const { findRoute, isActive, route, setViewedRoute } = this.props\n    if (isActive) {\n      // Deselect current route if active.\n      setViewedRoute({ routeId: null })\n    } else {\n      // Otherwise, set active and fetch route patterns.\n      findRoute({ routeId: route.id })\n      setViewedRoute({ routeId: route.id })\n    }\n  }\n\n  render () {\n    const {isActive, route, operator} = this.props\n    const {defaultRouteColor, defaultRouteTextColor, longNameSplitter} = operator || {}\n    const backgroundColor = `#${defaultRouteColor || route.color || 'ffffff'}`\n    // NOTE: text color is not a part of short response route object, so there\n    // is no way to determine from OTP what the text color should be if the\n    // background color is, say, black. Instead, determine the appropriate\n    // contrast color and use that if no text color is available.\n    const contrastColor = getContrastYIQ(backgroundColor)\n    const color = `#${defaultRouteTextColor || route.textColor || contrastColor}`\n    // Default long name is empty string (long name is an optional GTFS value).\n    let longName = ''\n    if (route.longName) {\n      // Attempt to split route name if splitter is defined for operator (to\n      // remove short name value from start of long name value).\n      const nameParts = route.longName.split(longNameSplitter)\n      longName = (longNameSplitter && nameParts.length > 1)\n        ? nameParts[1]\n        : route.longName\n      // If long name and short name are identical, set long name to be an empty\n      // string.\n      if (longName === route.shortName) longName = ''\n    }\n    return (\n      <div\n        style={{\n          borderBottom: '1px solid gray',\n          backgroundColor: isActive ? '#f6f8fa' : 'white'\n        }}>\n        <Button className='clear-button-formatting' style={{ padding: 8, width: '100%' }}\n          onClick={this._onClick}\n        >\n          <div style={{display: 'inline-block'}}>\n            {// TODO: re-implement multi-agency logos for route viewer.\n              // Currently, the agency object is not nested within the get all\n              // routes endpoint and causing this to only display transitOperators for\n              // the selected route.\n              // operator && <img src={operator.logo} style={{marginRight: '5px'}} height={25} />\n            }\n          </div>\n          <div style={{display: 'inline-block', marginTop: '2px'}}>\n            <Label\n              style={{\n                backgroundColor: backgroundColor === '#ffffff' ? 'rgba(0,0,0,0)' : backgroundColor,\n                fontSize: 'medium',\n                fontWeight: 400,\n                color\n              }}>\n              <b>{route.shortName}</b> {longName}\n            </Label>\n          </div>\n        </Button>\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {isActive && (\n            <div style={{ padding: 8 }}>\n              {route.url\n                ? <a href={route.url} target='_blank'>Route Details</a>\n                : 'No route URL provided.'\n              }\n            </div>\n          )}\n        </VelocityTransitionGroup>\n      </div>\n    )\n  }\n}\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    transitOperators: state.otp.config.transitOperators,\n    routes: state.otp.transitIndex.routes,\n    viewedRoute: state.otp.ui.viewedRoute,\n    languageConfig: state.otp.config.language\n  }\n}\n\nconst mapDispatchToProps = {\n  findRoute,\n  findRoutes,\n  setMainPanelContent,\n  setViewedRoute\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteViewer)\n"]}