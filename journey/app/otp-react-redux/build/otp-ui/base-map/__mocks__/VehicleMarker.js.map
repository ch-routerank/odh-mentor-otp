{"version":3,"sources":["VehicleMarker.js"],"names":["VehicleMarker","React","Component","getLastReportDate","v","seconds","makeToolTip","props","vehicle","routeShortName","makePopup","status","stopSequence","vehicleId","indexOf","replace","stopLink","stopId","routeLongName","reportDate","tripId","blockId","render","position","lat","lon"],"mappings":";;;;;;;AAEA;;AACA;;;;AAHA;;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAN,SAA4BC,eAAMC,SAAlC,CAA4C;AAC1CC,EAAAA,iBAAiB,CAACC,CAAD,EAAI;AACnB,WAAQ,GAAEA,CAAC,CAACC,OAAQ,cAApB;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAMF,CAAC,GAAG,KAAKG,KAAL,CAAWC,OAArB;AAEA,wBACE,6BAAC,qBAAD,qBACE,wDACE,wCAAIJ,CAAC,CAACK,cAAN,CADF,QAC8B,KAAKN,iBAAL,CAAuBC,CAAvB,CAD9B,CADF,CADF;AAOD;;AAEDM,EAAAA,SAAS,GAAG;AACV,UAAMN,CAAC,GAAG,KAAKG,KAAL,CAAWC,OAArB;AAEA,QAAIG,MAAM,GAAG,SAAb;AACA,QAAIP,CAAC,CAACO,MAAF,KAAa,eAAjB,EAAkCA,MAAM,GAAG,mBAAT,CAAlC,KACK,IAAIP,CAAC,CAACO,MAAF,KAAa,YAAjB,EACH,IAAIP,CAAC,CAACQ,YAAF,KAAmB,CAAvB,EAA0BD,MAAM,GAAG,4BAAT,CAA1B,KACKA,MAAM,GAAG,aAAT;AAEP,QAAIH,OAAO,GAAG,EAAd;AACA,QAAIJ,CAAC,CAACS,SAAF,CAAYC,OAAZ,CAAoB,GAApB,IAA2B,CAA/B,EACEN,OAAO,GAAI,aAAYJ,CAAC,CAACS,SAAF,CAAYE,OAAZ,CAAoB,KAApB,EAA2B,IAA3B,CAAiC,EAAxD,CADF,KAEKP,OAAO,GAAI,YAAWJ,CAAC,CAACS,SAAU,EAAlC;AAEL,UAAMG,QAAQ,GAAI,6CAA4CZ,CAAC,CAACa,MAAO,EAAvE;AAEA,wBACE,6BAAC,mBAAD,qBACE,uDACE,wDACE,wCAAIb,CAAC,CAACc,aAAN,CADF,CADF,eAIE,wCAJF,eAKE,8DAAsB,KAAKf,iBAAL,CAAuBC,CAAvB,CAAtB,CALF,eAME,wCANF,eAOE,4DAAoBA,CAAC,CAACe,UAAtB,CAPF,eAQE,wCARF,eASE,uDACWR,MADX,EACmB,GADnB,eAEE;AAAG,MAAA,MAAM,EAAC,GAAV;AAAc,MAAA,IAAI,EAAEK;AAApB,OACGZ,CAAC,CAACa,MADL,CAFF,CATF,eAeE,wCAfF,eAgBE,qDACSb,CAAC,CAACgB,MADX,eAC4BhB,CAAC,CAACiB,OAD9B,CAhBF,eAmBE,wCAnBF,eAoBE,2CAAOb,OAAP,CApBF,oBAoByB,wCApBzB,eAqBE,wCArBF,CADF,CADF;AA2BD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMlB,CAAC,GAAG,KAAKG,KAAL,CAAWC,OAArB;AACA,UAAMe,QAAQ,GAAG,CAACnB,CAAC,CAACoB,GAAH,EAAQpB,CAAC,CAACqB,GAAV,CAAjB;AAEA,wBACE,6BAAC,oBAAD;AAAQ,MAAA,MAAM,EAAEF,QAAhB;AAA0B,MAAA,MAAM,EAAE,GAAlC;AAAuC,MAAA,KAAK,EAAC;AAA7C,OACG,KAAKb,SAAL,EADH,EAEG,KAAKJ,WAAL,EAFH,CADF;AAMD;;AAxEyC;;eA2E7B,+BAAYN,aAAZ,C","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React from \"react\";\nimport { Circle, Popup, Tooltip, withLeaflet } from \"react-leaflet\";\n\n/**\n * This component demonstrates a custom marker used in the SelectVehicles overlay provided as an example.\n * It is modeled after the component available in this file:\n * https://github.com/OpenTransitTools/transit-components/blob/master/lib/vehicles/VehicleMarker.js\n */\nclass VehicleMarker extends React.Component {\n  getLastReportDate(v) {\n    return `${v.seconds} seconds ago`;\n  }\n\n  makeToolTip() {\n    const v = this.props.vehicle;\n\n    return (\n      <Tooltip>\n        <span>\n          <b>{v.routeShortName}</b>: {this.getLastReportDate(v)}\n        </span>\n      </Tooltip>\n    );\n  }\n\n  makePopup() {\n    const v = this.props.vehicle;\n\n    let status = \"unknown\";\n    if (v.status === \"IN_TRANSIT_TO\") status = \"en-route to stop \";\n    else if (v.status === \"STOPPED_AT\")\n      if (v.stopSequence === 1) status = \"beginning route from stop \";\n      else status = \"stopped at \";\n\n    let vehicle = \"\";\n    if (v.vehicleId.indexOf(\"+\") > 0)\n      vehicle = `Vehicles: ${v.vehicleId.replace(/\\+/g, \", \")}`;\n    else vehicle = `Vehicle: ${v.vehicleId}`;\n\n    const stopLink = `https://trimet.org/ride/stop.html?stop_id=${v.stopId}`;\n\n    return (\n      <Popup>\n        <div>\n          <span>\n            <b>{v.routeLongName}</b>\n          </span>\n          <br />\n          <span>Last reported: {this.getLastReportDate(v)}</span>\n          <br />\n          <span>Report date: {v.reportDate}</span>\n          <br />\n          <span>\n            Status: {status}{\" \"}\n            <a target=\"#\" href={stopLink}>\n              {v.stopId}\n            </a>\n          </span>\n          <br />\n          <span>\n            Trip: {v.tripId}, Block: {v.blockId}\n          </span>\n          <br />\n          <span>{vehicle}</span> <br />\n          <br />\n        </div>\n      </Popup>\n    );\n  }\n\n  render() {\n    const v = this.props.vehicle;\n    const position = [v.lat, v.lon];\n\n    return (\n      <Circle center={position} radius={100} color=\"black\">\n        {this.makePopup()}\n        {this.makeToolTip()}\n      </Circle>\n    );\n  }\n}\n\nexport default withLeaflet(VehicleMarker);\n"]}