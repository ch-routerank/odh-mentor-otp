{"version":3,"sources":["index.js"],"names":["L","Map","prototype","panToOffset","latlng","offsetX","offsetY","options","x","latLngToContainerPoint","parseInt","y","point","containerPointToLatLng","setView","_zoom","pan","Evented","addInitHook","singleClickTimeout","on","scheduleSingleClick","cancelSingleClick","include","setTimeout","clearSingleClickTimeout","bind","e","fireSingleClick","originalEvent","_stopped","fire","Util","extend","type","clearTimeout","BaseMap","Component","constructor","props","baseLayers","layerIndex","state","activeLayer","url","startsWith","onClick","eventName","layer","overlays","find","child","name","forEach","onBaseLayerChange","index","findIndex","l","setState","forwardOne","forwardAll","overlay","push","componentDidMount","lmap","refs","map","leafletElement","onLeftClick","componentDidUpdate","componentWillUnmount","eachLayer","removeLayer","render","center","children","maxZoom","popup","onContextMenu","onPopupClosed","zoom","userControlledOverlays","fixedOverlays","React","Children","toArray","newChild","cloneElement","registerOverlay","handleOverlayAdded","handleBaseLayerChange","handleOverlayRemoved","handleViewportChanged","showMapboxWordmark","i","retina","attribution","detectRetina","visible","location","contents","propTypes","PropTypes","oneOfType","node","arrayOf","shape","string","isRequired","subdomains","number","hasRetinaSupport","bool","utils","types","latlngType","func","onOverlayAdded","onOverlayRemoved","onViewportChanged","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LayersControl, Map, Popup, TileLayer } from \"react-leaflet\";\nimport utils from \"../../core-utils/src\";\nimport L from \"leaflet\";\n\nimport callIfValid from \"./util\";\n\n/**\n * panToOffset will allow you to pan the map and adjust for something like a floating\n * left nav bar, or a page header with an offset center\n *\n * @note adapted from Peter's code: https://gist.github.com/missinglink/7620340\n *\n * @param latlng\n * @param offsetX & offsetY: defaults to [0, 0] ([X, Y] pixel offsets center) a positive x\n * offset to shift the center to the right, and a positive y offset to shift the center to the\n * bottom. Negatives will move to the center point left and top.\n * @param options: pan options https://leafletjs.com/reference.html#pan-options\n * @return return value from a call to https://leafletjs.com/reference.html#map-panto\n */\nL.Map.prototype.panToOffset = function(latlng, offsetX, offsetY, options) {\n  const x =\n    this.latLngToContainerPoint(latlng).x - (parseInt(offsetX, 10) || 0);\n  const y =\n    this.latLngToContainerPoint(latlng).y - (parseInt(offsetY, 10) || 0);\n  const point = this.containerPointToLatLng([x, y]);\n  /* eslint-disable-next-line no-underscore-dangle */\n  return this.setView(point, this._zoom, { pan: options });\n};\n\n// eslint-disable-next-line func-names\nL.Evented.addInitHook(function() {\n  if (this) this.singleClickTimeout = null;\n  this.on(\"click\", this.scheduleSingleClick, this);\n  this.on(\"dblclick dragstart zoomstart\", this.cancelSingleClick, this);\n});\n\nL.Evented.include({\n  cancelSingleClick() {\n    // This timeout is key to workaround an issue where double-click events\n    // are fired in this order on some touch browsers: ['click', 'dblclick', 'click']\n    // instead of ['click', 'click', 'dblclick']\n    setTimeout(this.clearSingleClickTimeout.bind(this), 0);\n  },\n\n  scheduleSingleClick(e) {\n    this.clearSingleClickTimeout();\n\n    this.singleClickTimeout = setTimeout(\n      this.fireSingleClick.bind(this, e),\n      this.options.singleClickTimeout || 500\n    );\n  },\n\n  fireSingleClick(e) {\n    // eslint-disable-next-line no-underscore-dangle\n    if (!e.originalEvent._stopped) {\n      this.fire(\"singleclick\", L.Util.extend(e, { type: \"singleclick\" }));\n    }\n  },\n\n  clearSingleClickTimeout() {\n    if (this.singleClickTimeout !== null) {\n      clearTimeout(this.singleClickTimeout);\n      this.singleClickTimeout = null;\n    }\n  }\n});\n\n/**\n * The base OpenTripPlanner map on which everything else is rendered.\n */\nclass BaseMap extends Component {\n  overlays = [];\n\n  constructor(props) {\n    super(props);\n    // Default active base layer index to zero (first layer).\n    // TODO: derive layerIndex from props?\n    this.state = {\n      layerIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    // register single click event\n    const lmap = this.refs.map.leafletElement;\n    lmap.options.singleClickTimeout = 250;\n    lmap.on(\"singleclick\", this.onLeftClick);\n  }\n\n  componentDidUpdate() {}\n\n  // remove custom overlays on unmount\n  // TODO: Is this needed? It may have something to do with mobile vs desktop views\n  componentWillUnmount() {\n    const lmap = this.refs.map.leafletElement;\n    lmap.eachLayer(layer => {\n      // Do not inline, there is a 'this' implied.\n      lmap.removeLayer(layer);\n    });\n  }\n\n  /**\n   * Returns whether to show the Mapbox wordmark (if the current layer's URL is\n   * a Mapbox url).\n   */\n  showMapboxWordmark = () => {\n    const { baseLayers } = this.props;\n    const { layerIndex } = this.state;\n    // Get current layer and check its URL.\n    const activeLayer = baseLayers[layerIndex];\n    return activeLayer && activeLayer.url.startsWith(\"//api.mapbox.com\");\n  };\n\n  onLeftClick = e => {\n    const { onClick } = this.props;\n    callIfValid(onClick)(e);\n  };\n\n  forwardOne = (eventName, e) => {\n    // Call the event handler, if implemented, on the layer for which this event applies.\n    const layer = this.overlays.find(child => child.props.name === e.name);\n    if (layer) callIfValid(layer[eventName])(e);\n\n    // Call the event handler on this control's parent element.\n    // eslint-disable-next-line react/destructuring-assignment\n    callIfValid(this.props[eventName])(e);\n  };\n\n  forwardAll = (eventName, e) => {\n    // Call the event handler, if implemented, on each registered overlay.\n    this.overlays.forEach(layer => {\n      callIfValid(layer[eventName])(e);\n    });\n\n    // Call the event handler on this control's parent element.\n    // eslint-disable-next-line react/destructuring-assignment\n    callIfValid(this.props[eventName])(e);\n  };\n\n  handleBaseLayerChange = e => {\n    const { baseLayers, onBaseLayerChange } = this.props;\n    // Find layer index\n    const index = baseLayers.findIndex(l => l.name === e.name);\n    const layer = baseLayers[index];\n    // Call prop if exists.\n    if (typeof onBaseLayerChange === \"function\") {\n      onBaseLayerChange({ index, layer });\n    }\n    // Update active index in state.\n    this.setState({ layerIndex: index });\n  };\n\n  handleOverlayAdded = e => {\n    this.forwardOne(\"onOverlayAdded\", e);\n  };\n\n  handleOverlayRemoved = e => {\n    this.forwardOne(\"onOverlayRemoved\", e);\n  };\n\n  handleViewportChanged = e => {\n    this.forwardAll(\"onViewportChanged\", e);\n  };\n\n  registerOverlay = overlay => {\n    this.overlays.push(overlay);\n  };\n\n  render() {\n    const {\n      baseLayers,\n      center,\n      children,\n      maxZoom,\n      popup,\n      onContextMenu,\n      onPopupClosed,\n      zoom\n    } = this.props;\n    const { layerIndex } = this.state;\n\n    // Separate overlay layers into user-controlled (those with a checkbox in\n    // the layer control) and those that are needed by the app (e.g., stop viewer\n    // and itinerary overlay).\n    const userControlledOverlays = [];\n    const fixedOverlays = [];\n    React.Children.toArray(children).forEach(child => {\n      if (child.props.name) {\n        const newChild = React.cloneElement(child, {\n          // Inject registerOverlay prop to each custom overlay.\n          registerOverlay: this.registerOverlay\n        });\n        userControlledOverlays.push(newChild);\n      } else fixedOverlays.push(child);\n    });\n\n    return (\n      <Map\n        ref=\"map\"\n        className=\"map\"\n        center={center}\n        zoom={zoom}\n        maxZoom={maxZoom}\n        // onClick={this.onLeftClick}\n        // Note: Map-click is handled via single-click plugin, set up in componentDidMount()\n        onContextMenu={onContextMenu}\n        onOverlayAdd={this.handleOverlayAdded}\n        onBaseLayerChange={this.handleBaseLayerChange}\n        onOverlayRemove={this.handleOverlayRemoved}\n        onViewportChanged={this.handleViewportChanged}\n      >\n        {/* Add the mapbox wordmark if the current base layer's URL appears to\n          be a Mapbox URL. The implementing application must include CSS that\n          properly displays the wordmark. See Mapbox website for example CSS:\n          https://docs.mapbox.com/help/how-mapbox-works/attribution/#other-mapping-frameworks */}\n        {this.showMapboxWordmark() && (\n          <a\n            href=\"http://mapbox.com/about/maps\"\n            className=\"mapbox-wordmark\"\n            target=\"_blank noopener noreferrer\"\n          >\n            Mapbox\n          </a>\n        )}\n\n        {/* Create the layers control, including base map layers and any\n         * user-controlled overlays. */}\n        <LayersControl position=\"topright\">\n          {/* base layers */}\n          {baseLayers &&\n            baseLayers.map((layer, i) => {\n              return (\n                <LayersControl.BaseLayer\n                  name={layer.name}\n                  checked={i === layerIndex}\n                  key={i}\n                >\n                  {\n                    // Fix tile size/zoom offset: https://stackoverflow.com/a/37043490/915811\n                    // Also, split the declaration between the two\n                    // outcomes to avoid error 'attempted to load an infinite number of tiles'\n                    // if the tiles cannot be loaded for any reason.\n                  }\n                  {layer.retina ? (\n                    <TileLayer\n                      url={layer.url}\n                      attribution={layer.attribution}\n                      retina={layer.retina}\n                      maxZoom={layer.maxZoom}\n                      tileSize={512}\n                      zoomOffset={-1}\n                      detectRetina={layer.detectRetina}\n                    />\n                  ) : (\n                    <TileLayer\n                      url={layer.url}\n                      attribution={layer.attribution}\n                      maxZoom={layer.maxZoom}\n                      detectRetina={layer.detectRetina}\n                    />\n                  )}\n                </LayersControl.BaseLayer>\n              );\n            })}\n\n          {/* user-controlled overlay layers (e.g., vehicle locations, stops) */}\n          {userControlledOverlays.map((child, i) => (\n            <LayersControl.Overlay\n              key={i}\n              name={child.props.name}\n              checked={child.props.visible}\n            >\n              {child}\n            </LayersControl.Overlay>\n          ))}\n        </LayersControl>\n\n        {/* Add the fixed, i.e. non-user-controllable, overlays (e.g., itinerary overlay) */}\n        {fixedOverlays}\n\n        {/* Add the location selection popup and content, if both are set. */}\n        {popup && popup.location && popup.contents && (\n          <Popup position={popup.location} onClose={onPopupClosed}>\n            {popup.contents}\n          </Popup>\n        )}\n      </Map>\n    );\n  }\n}\n\nBaseMap.propTypes = {\n  /**\n   * Zero, one, or multiple components that extend { MapLayer } from 'react-leaflet'.\n   * Children can be overlays or loose markers.\n   */\n  children: PropTypes.oneOfType([\n    // Ideally, the types below should be MapLayer,\n    // however, during type validation in the browser,\n    // MapLayer components all seem to resolve to Object.\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  /**\n   * The base (background) layers for the map.\n   */\n  baseLayers: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      subdomains: PropTypes.string,\n      attribution: PropTypes.string,\n      maxZoom: PropTypes.number,\n      hasRetinaSupport: PropTypes.bool\n    })\n  ),\n  /**\n   * The center of the map, as a [lat, lng] array.\n   */\n  center: utils.types.latlngType.isRequired,\n  /**\n   * The maximum zoom level allowed on the map.\n   */\n  maxZoom: PropTypes.number,\n  /**\n   * Triggered when the user changes the active base layer.\n   * See https://leafletjs.com/reference-1.7.1.html#map-baselayerchange\n   */\n  onBaseLayerChange: PropTypes.func,\n  /**\n   * Triggered when the user clicks on the map.\n   * See https://leafletjs.com/reference-1.6.0.html#map-click for details.\n   */\n  onClick: PropTypes.func,\n  /**\n   * Triggered when the user right-clicks on the map or, on a mobile device, presses the map for a second (\"long-press\").\n   * See https://leafletjs.com/reference-1.6.0.html#map-contextmenu for details.\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * Triggered when the user makes an overlay visible using the map's layers control.\n   * See https://leafletjs.com/reference-1.6.0.html#map-overlayadd for details.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  onOverlayAdded: PropTypes.func,\n  /**\n   * Triggered when the user hides an overlay using the map's layers control.\n   * See https://leafletjs.com/reference-1.6.0.html#map-overlayremove for details.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  onOverlayRemoved: PropTypes.func,\n  /**\n   * Triggered when the user closes the popup (if `popupLocation` and `popupContent` have been set).\n   */\n  onPopupClosed: PropTypes.func,\n  /**\n   * Triggered when the user pans the map or changes zoom level.\n   * See https://github.com/PaulLeCam/react-leaflet/blob/master/example/components/viewport.js for more details.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  onViewportChanged: PropTypes.func,\n  /**\n   * The contents and location (in [lat, lng] format) of the popup to display, or null if no popup is displayed.\n   */\n  popup: PropTypes.shape({\n    contents: PropTypes.node.isRequired,\n    location: utils.types.latlngType.isRequired\n  }),\n  /**\n   * The zoom level of the map.\n   */\n  zoom: PropTypes.number\n};\n\nBaseMap.defaultProps = {\n  children: null,\n  baseLayers: [\n    {\n      name: \"Streets\",\n      url:\n        \"//cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png\",\n      attribution:\n        'Map tiles: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      maxZoom: 20\n\n      // FIXME?? CartoDB displays characters proportionally too large\n      // on regular monitors (1080p or lower) when using the \"retina\" parameters below.\n      // (That does not happen on \"retina\" displays such as Macbook or mobile phones.)\n      // url:\n      //  \"//cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}{retina}.png\",\n      // retina: \"@2x\",\n      // detectRetina: true\n    }\n  ],\n  maxZoom: 20,\n  onBaseLayerChange: null,\n  onClick: null,\n  onContextMenu: null,\n  onOverlayAdded: null,\n  onOverlayRemoved: null,\n  onPopupClosed: null,\n  onViewportChanged: null,\n  popup: null,\n  zoom: 13\n};\n\nexport default BaseMap;\n"]}