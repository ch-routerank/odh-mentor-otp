{"version":3,"sources":["types.js"],"names":["Object","defineProperty","exports","value","createChainableTypeChecker","userLocationType","geocodedFeatureType","configuredCompanyType","configuredModesType","configuredModeType","modeSelectorOptionsType","modeOptionType","latlngType","stationType","transitiveDataType","stopLayerStopType","transitIndexStopWithRoutes","timeOptionsType","locationType","itineraryType","fareType","legType","placeType","stepsType","encodedPolylineType","configType","vehicleRentalMapOverlaySymbolsType","transitVehicleType","languageConfigType","transitOperatorType","leafletPathType","companyType","_propTypes","_interopRequireDefault","require","_react","_map","obj","__esModule","default","shape","id","string","isRequired","label","modes","bubblingMouseEvents","bool","color","className","dashArray","dashOffset","fill","fillColor","fillOpacity","number","fillRule","lineCap","lineJoin","opacity","renderer","func","stroke","weight","defaultRouteColor","defaultRouteTextColor","logo","longNameSplitter","name","order","stopViewer","routeShortName","routeLongName","routeType","status","reportDate","seconds","stopSequence","stopId","vehicleId","tripId","blockId","lat","lon","heading","arrayOf","dockStrokeColor","maxZoom","minZoom","pixels","type","companies","dateTime","timeFormat","dateFormat","longDateFormat","map","overlays","mapSymbols","maxTransitDistance","transitOperators","feedScopedIdType","agencyId","length","points","elevationData","first","second","alertType","alertHeaderText","alertDescriptionText","alertUrl","effectiveStartDate","absoluteDirection","alerts","area","bogusName","distance","elevation","relativeDirection","stayOn","streetName","arrival","departure","networks","stopCode","stopIndex","vertexType","zoneId","agencyName","agencyTimeZoneOffset","agencyUrl","arrivalDelay","departureDelay","duration","endTime","from","hailedCar","headsign","interlineWithPreviousLeg","intermediateStops","interStopGeometry","legGeometry","mode","pathway","realTime","rentedBike","rentedCar","rentedVehicle","route","routeId","serviceDate","startTime","steps","tncData","company","currency","displayName","estimatedArrival","maxCost","minCost","productId","travelDuration","to","transitLeg","tripBlockId","moneyType","cents","defaultFractionDigits","currencyCode","symbol","details","objectOf","fareId","oneOfType","price","routes","fare","elevationGained","elevationLost","legs","tooSloped","transfers","transitTime","waitingTime","walkDistance","walkLimitExceeded","walkTime","format","offset","code","dist","longName","shortName","transitivePlaceType","place_id","journeys","journey_id","journey_name","segments","arc","patterns","pattern_id","from_stop_index","to_stop_index","streetEdges","pattern_name","route_id","stops","geometry","stop_id","places","place_lat","place_lon","place_name","agency_id","route_short_name","route_long_name","route_type","route_color","stop_name","stop_lat","stop_lon","edge_id","bikesAvailable","isFloatingBike","isFloatingCar","isFloatingVehicle","spacesAvailable","x","y","validator","checkType","props","propName","componentName","location","locationName","ReactPropTypeLocationNames","Error","chainedCheckType","bind","isValidLatLng","selected","showTitle","text","node","title","primary","secondary","tertiary","transitModes","accessModes","exclusiveModes","bicycleModes","micromobilityModes","coordinates","properties","icon","timestamp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,0BAAR,GAAqCA,0BAArC;AACAF,OAAO,CAACG,gBAAR,GAA2BH,OAAO,CAACI,mBAAR,GAA8BJ,OAAO,CAACK,qBAAR,GAAgCL,OAAO,CAACM,mBAAR,GAA8BN,OAAO,CAACO,kBAAR,GAA6BP,OAAO,CAACQ,uBAAR,GAAkCR,OAAO,CAACS,cAAR,GAAyBT,OAAO,CAACU,UAAR,GAAqBV,OAAO,CAACW,WAAR,GAAsBX,OAAO,CAACY,kBAAR,GAA6BZ,OAAO,CAACa,iBAAR,GAA4Bb,OAAO,CAACc,0BAAR,GAAqCd,OAAO,CAACe,eAAR,GAA0Bf,OAAO,CAACgB,YAAR,GAAuBhB,OAAO,CAACiB,aAAR,GAAwBjB,OAAO,CAACkB,QAAR,GAAmBlB,OAAO,CAACmB,OAAR,GAAkBnB,OAAO,CAACoB,SAAR,GAAoBpB,OAAO,CAACqB,SAAR,GAAoBrB,OAAO,CAACsB,mBAAR,GAA8BtB,OAAO,CAACuB,UAAR,GAAqBvB,OAAO,CAACwB,kCAAR,GAA6CxB,OAAO,CAACyB,kBAAR,GAA6BzB,OAAO,CAAC0B,kBAAR,GAA6B1B,OAAO,CAAC2B,mBAAR,GAA8B3B,OAAO,CAAC4B,eAAR,GAA0B5B,OAAO,CAAC6B,WAAR,GAAsB,KAAK,CAA3tB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIE,IAAI,GAAGF,OAAO,CAAC,OAAD,CAAlB;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMN,WAAW,GAAGC,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC3CC,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADa;AAE3CC,EAAAA,KAAK,EAAEZ,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFU;;AAI3C;AACAE,EAAAA,KAAK,EAAEb,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AALU,CAAzB,CAApB;AAOA;AACA;AACA;AACA;AACA;;;AAGAzC,OAAO,CAAC6B,WAAR,GAAsBA,WAAtB;;AAEA,MAAMD,eAAe,GAAGE,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC/CM,EAAAA,mBAAmB,EAAEd,UAAU,CAACO,OAAX,CAAmBQ,IADO;AAE/CC,EAAAA,KAAK,EAAEhB,UAAU,CAACO,OAAX,CAAmBG,MAFqB;AAG/CO,EAAAA,SAAS,EAAEjB,UAAU,CAACO,OAAX,CAAmBG,MAHiB;AAI/CQ,EAAAA,SAAS,EAAElB,UAAU,CAACO,OAAX,CAAmBG,MAJiB;AAK/CS,EAAAA,UAAU,EAAEnB,UAAU,CAACO,OAAX,CAAmBG,MALgB;AAM/CU,EAAAA,IAAI,EAAEpB,UAAU,CAACO,OAAX,CAAmBQ,IANsB;AAO/CM,EAAAA,SAAS,EAAErB,UAAU,CAACO,OAAX,CAAmBG,MAPiB;AAQ/CY,EAAAA,WAAW,EAAEtB,UAAU,CAACO,OAAX,CAAmBgB,MARe;AAS/CC,EAAAA,QAAQ,EAAExB,UAAU,CAACO,OAAX,CAAmBG,MATkB;AAU/Ce,EAAAA,OAAO,EAAEzB,UAAU,CAACO,OAAX,CAAmBG,MAVmB;AAW/CgB,EAAAA,QAAQ,EAAE1B,UAAU,CAACO,OAAX,CAAmBG,MAXkB;AAY/CiB,EAAAA,OAAO,EAAE3B,UAAU,CAACO,OAAX,CAAmBgB,MAZmB;AAa/CK,EAAAA,QAAQ,EAAE5B,UAAU,CAACO,OAAX,CAAmBsB,IAbkB;AAc/CC,EAAAA,MAAM,EAAE9B,UAAU,CAACO,OAAX,CAAmBQ,IAdoB;AAe/CgB,EAAAA,MAAM,EAAE/B,UAAU,CAACO,OAAX,CAAmBgB;AAfoB,CAAzB,CAAxB;AAiBA;AACA;AACA;AACA;;;AAGArD,OAAO,CAAC4B,eAAR,GAA0BA,eAA1B;;AAEA,MAAMD,mBAAmB,GAAGG,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnDwB,EAAAA,iBAAiB,EAAEhC,UAAU,CAACO,OAAX,CAAmBG,MADa;AAEnDuB,EAAAA,qBAAqB,EAAEjC,UAAU,CAACO,OAAX,CAAmBG,MAFS;AAGnDD,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHqB;AAInDuB,EAAAA,IAAI,EAAElC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAJmB;AAKnDwB,EAAAA,gBAAgB,EAAEnC,UAAU,CAACO,OAAX,CAAmBG,MALc;AAMnD0B,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAN0B;AAOnD2B,EAAAA,KAAK,EAAErC,UAAU,CAACO,OAAX,CAAmBgB;AAPyB,CAAzB,CAA5B;;AAUArD,OAAO,CAAC2B,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMD,kBAAkB,GAAGI,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAClD8B,EAAAA,UAAU,EAAEtC,UAAU,CAACO,OAAX,CAAmBG;AADmB,CAAzB,CAA3B;AAGA;;;AAGAxC,OAAO,CAAC0B,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,kBAAkB,GAAGK,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAClD+B,EAAAA,cAAc,EAAEvC,UAAU,CAACO,OAAX,CAAmBG,MADe;AAElD8B,EAAAA,aAAa,EAAExC,UAAU,CAACO,OAAX,CAAmBG,MAFgB;AAGlD+B,EAAAA,SAAS,EAAEzC,UAAU,CAACO,OAAX,CAAmBG,MAHoB;AAIlDgC,EAAAA,MAAM,EAAE1C,UAAU,CAACO,OAAX,CAAmBG,MAJuB;AAKlDiC,EAAAA,UAAU,EAAE3C,UAAU,CAACO,OAAX,CAAmBG,MALmB;AAMlDkC,EAAAA,OAAO,EAAE5C,UAAU,CAACO,OAAX,CAAmBgB,MANsB;AAOlDsB,EAAAA,YAAY,EAAE7C,UAAU,CAACO,OAAX,CAAmBgB,MAPiB;AAQlDuB,EAAAA,MAAM,EAAE9C,UAAU,CAACO,OAAX,CAAmBG,MARuB;AASlDqC,EAAAA,SAAS,EAAE/C,UAAU,CAACO,OAAX,CAAmBG,MAToB;AAUlDsC,EAAAA,MAAM,EAAEhD,UAAU,CAACO,OAAX,CAAmBG,MAVuB;AAWlDuC,EAAAA,OAAO,EAAEjD,UAAU,CAACO,OAAX,CAAmBG,MAXsB;AAYlDwC,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAZ0B;AAalD4B,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAb0B;AAclD6B,EAAAA,OAAO,EAAEpD,UAAU,CAACO,OAAX,CAAmBgB;AAdsB,CAAzB,CAA3B;;AAiBArD,OAAO,CAACyB,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,kCAAkC,GAAGM,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC7F8C,EAAAA,eAAe,EAAEtD,UAAU,CAACO,OAAX,CAAmBG,MADyD;AAE7FW,EAAAA,SAAS,EAAErB,UAAU,CAACO,OAAX,CAAmBG,MAF+D;AAG7F6C,EAAAA,OAAO,EAAEvD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAH0D;AAI7F6C,EAAAA,OAAO,EAAExD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAJ0D;AAK7F8C,EAAAA,MAAM,EAAEzD,UAAU,CAACO,OAAX,CAAmBgB,MALkE;AAM7FmC,EAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAN6D,CAAzB,EAOnEA,UAPwC,CAA3C;AAQA;AACA;AACA;AACA;AACA;;;AAGAzC,OAAO,CAACwB,kCAAR,GAA6CA,kCAA7C;;AAEA,MAAMD,UAAU,GAAGO,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC1CmD,EAAAA,SAAS,EAAE3D,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BtD,WAAW,CAACY,UAAvC,CAD+B;AAE1CiD,EAAAA,QAAQ,EAAE5D,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACjCqD,IAAAA,UAAU,EAAE7D,UAAU,CAACO,OAAX,CAAmBG,MADE;AAEjCoD,IAAAA,UAAU,EAAE9D,UAAU,CAACO,OAAX,CAAmBG,MAFE;AAGjCqD,IAAAA,cAAc,EAAE/D,UAAU,CAACO,OAAX,CAAmBG;AAHF,GAAzB,CAFgC;AAO1C;AACAsD,EAAAA,GAAG,EAAEhE,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5ByD,IAAAA,QAAQ,EAAEjE,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5D;AACN;AACA;AACA;AACMmD,MAAAA,SAAS,EAAE3D,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAArD,CALiD;AAM5DyB,MAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAN4B;;AAQ5D;AACN;AACA;AACA;AACMuD,MAAAA,UAAU,EAAExE,kCAZgD;;AAc5D;AACN;AACA;AACA;AACA;AACMyE,MAAAA,kBAAkB,EAAEnE,UAAU,CAACO,OAAX,CAAmBgB,MAnBqB;;AAqB5D;AACN;AACA;AACA;AACMV,MAAAA,KAAK,EAAEb,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAArD,CAzBqD;;AA2B5D;AACN;AACA;AACA;AACA;AACA;AACM+C,MAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAjC4B,KAAzB,CAA3B;AADkB,GAAzB,CARqC;AA6C1CyD,EAAAA,gBAAgB,EAAEpE,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BxD,mBAA3B;AA7CwB,CAAzB,CAAnB;;AAgDA3B,OAAO,CAACuB,UAAR,GAAqBA,UAArB;;AAEA,MAAM4E,gBAAgB,GAAGrE,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAChD8D,EAAAA,QAAQ,EAAEtE,UAAU,CAACO,OAAX,CAAmBG,MADmB;AAEhDD,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG;AAFyB,CAAzB,CAAzB;;AAKA,MAAMlB,mBAAmB,GAAGQ,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnD+D,EAAAA,MAAM,EAAEvE,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADiB;AAEnD6D,EAAAA,MAAM,EAAExE,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAFiB,CAAzB,CAA5B;;AAKAzC,OAAO,CAACsB,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMiF,aAAa,GAAGzE,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACxEkE,EAAAA,KAAK,EAAE1E,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADuC;AAExEgE,EAAAA,MAAM,EAAE3E,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAFsC,CAAzB,EAG9CA,UAHmB,CAAtB;;AAKA,MAAMiE,SAAS,GAAG5E,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACzCqE,EAAAA,eAAe,EAAE7E,UAAU,CAACO,OAAX,CAAmBG,MADK;AAEzCoE,EAAAA,oBAAoB,EAAE9E,UAAU,CAACO,OAAX,CAAmBG,MAFA;AAGzCqE,EAAAA,QAAQ,EAAE/E,UAAU,CAACO,OAAX,CAAmBG,MAHY;AAIzCsE,EAAAA,kBAAkB,EAAEhF,UAAU,CAACO,OAAX,CAAmBgB;AAJE,CAAzB,CAAlB;AAMA;AACA;AACA;AACA;AACA;;;AAGA,MAAMhC,SAAS,GAAGS,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACpEyE,EAAAA,iBAAiB,EAAEjF,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADuB;AAEpEuE,EAAAA,MAAM,EAAElF,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BuB,SAA3B,CAF4D;AAGpEO,EAAAA,IAAI,EAAEnF,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAHsC;AAIpEyE,EAAAA,SAAS,EAAEpF,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAJiC;AAKpE0E,EAAAA,QAAQ,EAAErF,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UALgC;AAMpE2E,EAAAA,SAAS,EAAEb,aAAa,CAAC9D,UAN2C;AAOpEuC,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAPqC;AAQpEwC,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UARqC;AASpE4E,EAAAA,iBAAiB,EAAEvF,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UATuB;AAUpE6E,EAAAA,MAAM,EAAExF,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAVoC;AAWpE8E,EAAAA,UAAU,EAAEzF,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAX8B,CAAzB,CAA3B,CAAlB;;AAcAzC,OAAO,CAACqB,SAAR,GAAoBA,SAApB;;AAEA,MAAMD,SAAS,GAAGU,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACzCkF,EAAAA,OAAO,EAAE1F,UAAU,CAACO,OAAX,CAAmBgB,MADa;AAEzCoE,EAAAA,SAAS,EAAE3F,UAAU,CAACO,OAAX,CAAmBgB,MAFW;AAGzC2B,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHU;AAIzCwC,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAJU;AAKzCyB,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UALS;AAMzCiF,EAAAA,QAAQ,EAAE5F,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAArD,CAN+B;AAOzCkF,EAAAA,QAAQ,EAAE7F,UAAU,CAACO,OAAX,CAAmBG,MAPY;AAQzCoC,EAAAA,MAAM,EAAE9C,UAAU,CAACO,OAAX,CAAmBG,MARc;AASzCoF,EAAAA,SAAS,EAAE9F,UAAU,CAACO,OAAX,CAAmBgB,MATW;AAUzCsB,EAAAA,YAAY,EAAE7C,UAAU,CAACO,OAAX,CAAmBgB,MAVQ;AAWzCwE,EAAAA,UAAU,EAAE/F,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAXG;AAYzCqF,EAAAA,MAAM,EAAEhG,UAAU,CAACO,OAAX,CAAmBG;AAZc,CAAzB,CAAlB;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAxC,OAAO,CAACoB,SAAR,GAAoBA,SAApB;;AAEA,MAAMD,OAAO,GAAGW,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACvC8D,EAAAA,QAAQ,EAAEtE,UAAU,CAACO,OAAX,CAAmBG,MADU;AAEvCuF,EAAAA,UAAU,EAAEjG,UAAU,CAACO,OAAX,CAAmBG,MAFQ;AAGvCwF,EAAAA,oBAAoB,EAAElG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHT;AAIvCwF,EAAAA,SAAS,EAAEnG,UAAU,CAACO,OAAX,CAAmBG,MAJS;AAKvCwE,EAAAA,MAAM,EAAElF,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BuB,SAA3B,CAL+B;AAMvCwB,EAAAA,YAAY,EAAEpG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAND;AAOvC0F,EAAAA,cAAc,EAAErG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAPH;AAQvC0E,EAAAA,QAAQ,EAAErF,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UARG;AASvC2F,EAAAA,QAAQ,EAAEtG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UATG;AAUvC4F,EAAAA,OAAO,EAAEvG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAVI;AAWvC6F,EAAAA,IAAI,EAAElH,SAAS,CAACqB,UAXuB;AAYvC8F,EAAAA,SAAS,EAAEzG,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAZI;AAavC+F,EAAAA,QAAQ,EAAE1G,UAAU,CAACO,OAAX,CAAmBG,MAbU;AAcvCiG,EAAAA,wBAAwB,EAAE3G,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAdX;AAevCiG,EAAAA,iBAAiB,EAAE5G,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B/D,SAA3B,EAAsCqB,UAflB;AAgBvCkG,EAAAA,iBAAiB,EAAE7G,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B7D,mBAA3B,CAhBoB;AAiBvCsH,EAAAA,WAAW,EAAEtH,mBAAmB,CAACmB,UAjBM;AAkBvCoG,EAAAA,IAAI,EAAE/G,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAlBO;AAmBvCqG,EAAAA,OAAO,EAAEhH,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAnBM;AAoBvCsG,EAAAA,QAAQ,EAAEjH,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UApBK;AAqBvCuG,EAAAA,UAAU,EAAElH,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UArBG;AAsBvCwG,EAAAA,SAAS,EAAEnH,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAtBI;AAuBvCyG,EAAAA,aAAa,EAAEpH,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAvBA;AAwBvC0G,EAAAA,KAAK,EAAErH,UAAU,CAACO,OAAX,CAAmBG,MAxBa;AAyBvC4G,EAAAA,OAAO,EAAEtH,UAAU,CAACO,OAAX,CAAmBG,MAzBW;AA0BvC+B,EAAAA,SAAS,EAAEzC,UAAU,CAACO,OAAX,CAAmBgB,MA1BS;AA2BvCgG,EAAAA,WAAW,EAAEvH,UAAU,CAACO,OAAX,CAAmBG,MA3BO;AA4BvC8G,EAAAA,SAAS,EAAExH,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UA5BE;AA6BvC8G,EAAAA,KAAK,EAAElI,SAAS,CAACoB,UA7BsB;AA8BvC+G,EAAAA,OAAO,EAAE1H,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAChCmH,IAAAA,OAAO,EAAE3H,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADH;AAEhCiH,IAAAA,QAAQ,EAAE5H,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFJ;AAGhCkH,IAAAA,WAAW,EAAE7H,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHP;AAIhCmH,IAAAA,gBAAgB,EAAE9H,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAJZ;AAKhCoH,IAAAA,OAAO,EAAE/H,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UALH;AAMhCqH,IAAAA,OAAO,EAAEhI,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UANH;AAOhCsH,IAAAA,SAAS,EAAEjI,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAPL;AAQhCuH,IAAAA,cAAc,EAAElI,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AARV,GAAzB,CA9B8B;AAwCvCwH,EAAAA,EAAE,EAAE7I,SAAS,CAACqB,UAxCyB;AAyCvCyH,EAAAA,UAAU,EAAEpI,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAzCG;AA0CvC0H,EAAAA,WAAW,EAAErI,UAAU,CAACO,OAAX,CAAmBG,MA1CO;AA2CvCsC,EAAAA,MAAM,EAAEhD,UAAU,CAACO,OAAX,CAAmBG;AA3CY,CAAzB,CAAhB;;AA8CAxC,OAAO,CAACmB,OAAR,GAAkBA,OAAlB;;AAEA,MAAMiJ,SAAS,GAAGtI,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACzC+H,EAAAA,KAAK,EAAEvI,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADQ;AAEzCiH,EAAAA,QAAQ,EAAE5H,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACjCgI,IAAAA,qBAAqB,EAAExI,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADhB;AAEjC8H,IAAAA,YAAY,EAAEzI,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFP;AAGjC+H,IAAAA,MAAM,EAAE1I,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHD;AAIjCiH,IAAAA,QAAQ,EAAE5H,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAJH,GAAzB,EAKPA;AAPsC,CAAzB,CAAlB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMvB,QAAQ,GAAGY,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACxCmI,EAAAA,OAAO,EAAE3I,UAAU,CAACO,OAAX,CAAmBqI,QAAnB,CAA4B5I,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACvFqI,IAAAA,MAAM,EAAE7I,UAAU,CAACO,OAAX,CAAmBuI,SAAnB,CAA6B,CAAC9I,UAAU,CAACO,OAAX,CAAmBG,MAApB,EAA4B2D,gBAA5B,CAA7B,EAA4E1D,UADG;AAEvFoI,IAAAA,KAAK,EAAET,SAAS,CAAC3H,UAFsE;AAGvFqI,IAAAA,MAAM,EAAEhJ,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBuI,SAAnB,CAA6B,CAAC9I,UAAU,CAACO,OAAX,CAAmBG,MAApB,EAA4B2D,gBAA5B,CAA7B,CAA3B,EAAwG1D;AAHzB,GAAzB,CAA3B,EAIjCA,UAJK,CAD+B;AAMxCsI,EAAAA,IAAI,EAAEjJ,UAAU,CAACO,OAAX,CAAmBqI,QAAnB,CAA4BN,SAA5B;AANkC,CAAzB,CAAjB;AAQA;AACA;AACA;AACA;AACA;;;AAGApK,OAAO,CAACkB,QAAR,GAAmBA,QAAnB;;AAEA,MAAMD,aAAa,GAAGa,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC7C8F,EAAAA,QAAQ,EAAEtG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADS;AAE7CuI,EAAAA,eAAe,EAAElJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAFE;AAG7CwI,EAAAA,aAAa,EAAEnJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHI;AAI7C4F,EAAAA,OAAO,EAAEvG,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAJU;AAK7CsI,EAAAA,IAAI,EAAE7J,QALuC;AAM7CgK,EAAAA,IAAI,EAAEpJ,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BhE,OAA3B,EAAoCsB,UANG;AAO7C6G,EAAAA,SAAS,EAAExH,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAPQ;AAQ7C0I,EAAAA,SAAS,EAAErJ,UAAU,CAACO,OAAX,CAAmBQ,IARe;AAS7CuI,EAAAA,SAAS,EAAEtJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UATQ;AAU7C4I,EAAAA,WAAW,EAAEvJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAVM;AAW7C6I,EAAAA,WAAW,EAAExJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAXM;AAY7C8I,EAAAA,YAAY,EAAEzJ,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAZK;AAa7C+I,EAAAA,iBAAiB,EAAE1J,UAAU,CAACO,OAAX,CAAmBQ,IAAnB,CAAwBJ,UAbE;AAc7CgJ,EAAAA,QAAQ,EAAE3J,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAdS,CAAzB,CAAtB;AAgBA;AACA;AACA;;;AAGAzC,OAAO,CAACiB,aAAR,GAAwBA,aAAxB;;AAEA,MAAMD,YAAY,GAAGc,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5C0C,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UADa;AAE5CwC,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAFa;AAG5CyB,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHY;;AAK5C;AACF;AACA;AACA;AACE+C,EAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG;AATmB,CAAzB,CAArB;AAWA;AACA;AACA;;;AAGAxC,OAAO,CAACgB,YAAR,GAAuBA,YAAvB;;AAEA,MAAMD,eAAe,GAAGe,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC/C;AACF;AACA;AACEoJ,EAAAA,MAAM,EAAE5J,UAAU,CAACO,OAAX,CAAmBG,MAJoB;;AAM/C;AACF;AACA;AACA;AACEmJ,EAAAA,MAAM,EAAE7J,UAAU,CAACO,OAAX,CAAmBgB;AAVoB,CAAzB,CAAxB;AAYA;AACA;AACA;AACA;;;AAGArD,OAAO,CAACe,eAAR,GAA0BA,eAA1B;;AAEA,MAAMD,0BAA0B,GAAGgB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC1D;AACF;AACA;AACEsJ,EAAAA,IAAI,EAAE9J,UAAU,CAACO,OAAX,CAAmBG,MAJiC;;AAM1D;AACF;AACA;AACEqJ,EAAAA,IAAI,EAAE/J,UAAU,CAACO,OAAX,CAAmBgB,MATiC;AAU1D2B,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAVkC;AAW1D4B,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAXkC;AAY1Da,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAZiC;AAa1DsI,EAAAA,MAAM,EAAEhJ,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC1DwJ,IAAAA,QAAQ,EAAEhK,UAAU,CAACO,OAAX,CAAmBG,MAD6B;AAE1DuJ,IAAAA,SAAS,EAAEjK,UAAU,CAACO,OAAX,CAAmBG;AAF4B,GAAzB,CAA3B;AAbkD,CAAzB,CAAnC;;AAmBAxC,OAAO,CAACc,0BAAR,GAAqCA,0BAArC;;AAEA,MAAMD,iBAAiB,GAAGiB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACjDC,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADmB;AAEjDyB,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFiB;AAGjDuC,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHkB;AAIjDwC,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAJkB,CAAzB,CAA1B;;AAOAzC,OAAO,CAACa,iBAAR,GAA4BA,iBAA5B;;AAEA,MAAMmL,mBAAmB,GAAGlK,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnD2J,EAAAA,QAAQ,EAAEnK,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADe;AAEnD+C,EAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAFmB,CAAzB,CAA5B;;AAKA,MAAM7B,kBAAkB,GAAGkB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAClD4J,EAAAA,QAAQ,EAAEpK,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5D6J,IAAAA,UAAU,EAAErK,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADsB;AAE5D2J,IAAAA,YAAY,EAAEtK,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFoB;AAG5D4J,IAAAA,QAAQ,EAAEvK,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5DgK,MAAAA,GAAG,EAAExK,UAAU,CAACO,OAAX,CAAmBQ,IADoC;AAE5DyF,MAAAA,IAAI,EAAE0D,mBAFsD;AAG5DO,MAAAA,QAAQ,EAAEzK,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5DkK,QAAAA,UAAU,EAAE1K,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADsB;AAE5DgK,QAAAA,eAAe,EAAE3K,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAFiB;AAG5DiK,QAAAA,aAAa,EAAE5K,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAHmB,OAAzB,CAA3B,CAHkD;AAQ5DkK,MAAAA,WAAW,EAAE7K,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBgB,MAA9C,CAR+C;AAS5D4G,MAAAA,EAAE,EAAE+B,mBATwD;AAU5DxG,MAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAV4B,KAAzB,CAA3B,EAWNA;AAdwD,GAAzB,CAA3B,EAeNA,UAhB8C;AAiBlD8J,EAAAA,QAAQ,EAAEzK,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC5DkK,IAAAA,UAAU,EAAE1K,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADsB;AAE5DmK,IAAAA,YAAY,EAAE9K,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFoB;AAG5DoK,IAAAA,QAAQ,EAAE/K,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHwB;AAI5DqK,IAAAA,KAAK,EAAEhL,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACzDyK,MAAAA,QAAQ,EAAEjL,UAAU,CAACO,OAAX,CAAmBG,MAD4B;AAEzDwK,MAAAA,OAAO,EAAElL,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAFsB,KAAzB,CAA3B,EAGHA;AAPwD,GAAzB,CAA3B,EAQNA,UAzB8C;AA0BlDwK,EAAAA,MAAM,EAAEnL,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC1D2J,IAAAA,QAAQ,EAAEnK,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADsB;AAE1DyK,IAAAA,SAAS,EAAEpL,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAFqB;AAG1D0K,IAAAA,SAAS,EAAErL,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHqB;AAI1D2K,IAAAA,UAAU,EAAEtL,UAAU,CAACO,OAAX,CAAmBG;AAJ2B,GAAzB,CAA3B,EAKJC,UA/B8C;AAgClDqI,EAAAA,MAAM,EAAEhJ,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC1D+K,IAAAA,SAAS,EAAEvL,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADqB;AAE1DoK,IAAAA,QAAQ,EAAE/K,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFsB;AAG1D6K,IAAAA,gBAAgB,EAAExL,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAHc;AAI1D8K,IAAAA,eAAe,EAAEzL,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAJe;AAK1D+K,IAAAA,UAAU,EAAE1L,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UALoB;AAM1DgL,IAAAA,WAAW,EAAE3L,UAAU,CAACO,OAAX,CAAmBG;AAN0B,GAAzB,CAA3B,EAOJC,UAvC8C;AAwClDqK,EAAAA,KAAK,EAAEhL,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACzD0K,IAAAA,OAAO,EAAElL,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADsB;AAEzDiL,IAAAA,SAAS,EAAE5L,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFoB;AAGzDkL,IAAAA,QAAQ,EAAE7L,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAHqB;AAIzDmL,IAAAA,QAAQ,EAAE9L,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAJqB,GAAzB,CAA3B,EAKHA,UA7C8C;AA8ClDkK,EAAAA,WAAW,EAAE7K,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC/DuL,IAAAA,OAAO,EAAE/L,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAD4B;AAE/DsK,IAAAA,QAAQ,EAAEzL;AAFqD,GAAzB,CAA3B,EAGTmB;AAjD8C,CAAzB,CAA3B;AAmDA;AACA;AACA;AACA;;;AAGAzC,OAAO,CAACY,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,WAAW,GAAGmB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC3CwL,EAAAA,cAAc,EAAEhM,UAAU,CAACO,OAAX,CAAmBgB,MADQ;AAE3Cd,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAFa;AAG3CsL,EAAAA,cAAc,EAAEjM,UAAU,CAACO,OAAX,CAAmBQ,IAHQ;AAI3CmL,EAAAA,aAAa,EAAElM,UAAU,CAACO,OAAX,CAAmBQ,IAJS;AAK3CoL,EAAAA,iBAAiB,EAAEnM,UAAU,CAACO,OAAX,CAAmBQ,IALK;AAM3CqB,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MANkB;AAO3CkF,EAAAA,QAAQ,EAAE5F,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAArD,EAAiEA,UAPhC;AAQ3CyL,EAAAA,eAAe,EAAEpM,UAAU,CAACO,OAAX,CAAmBgB,MARO;AAS3C8K,EAAAA,CAAC,EAAErM,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UATc;AAU3C2L,EAAAA,CAAC,EAAEtM,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ;AAVc,CAAzB,CAApB;AAYA;AACA;AACA;AACA;AACA;;;AAGAzC,OAAO,CAACW,WAAR,GAAsBA,WAAtB;;AAEA,SAAST,0BAAT,CAAoCmO,SAApC,EAA+C;AAC7C,WAASC,SAAT,CAAmB7L,UAAnB,EAA+B8L,KAA/B,EAAsCC,QAAtC,EAAgDC,aAAhD,EAA+DC,QAA/D,EAAyE;AACvED,IAAAA,aAAa,GAAGA,aAAa,IAAI,WAAjC;;AAEA,QAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvB,EAA6B;AAC3B,UAAI/L,UAAJ,EAAgB;AACd,cAAMkM,YAAY,GAAG1M,MAAM,CAAC2M,0BAAP,CAAkCF,QAAlC,CAArB;AACA,eAAO,IAAIG,KAAJ,CAAW,aAAYF,YAAa,IAAGH,QAAS,2BAA0BC,aAAc,IAAxF,CAAP;AACD;;AAED,aAAO,IAAP;AACD;;AAED,WAAOJ,SAAS,CAACE,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,CAAhB;AACD;;AAED,QAAMI,gBAAgB,GAAGR,SAAS,CAACS,IAAV,CAAe,IAAf,EAAqB,KAArB,CAAzB;AACAD,EAAAA,gBAAgB,CAACrM,UAAjB,GAA8B6L,SAAS,CAACS,IAAV,CAAe,IAAf,EAAqB,IAArB,CAA9B;AACA,SAAOD,gBAAP;AACD;;AAED,MAAMpO,UAAU,GAAGR,0BAA0B,CAAC,CAACqO,KAAD,EAAQC,QAAR,KAAqB;AACjE;AACA,MAAI,CAAC,CAAC,GAAGtM,IAAI,CAAC8M,aAAT,EAAwBT,KAAK,CAACC,QAAD,CAA7B,CAAL,EAA+C;AAC7C,WAAO,IAAIK,KAAJ,CAAW,GAAEL,QAAS,iCAAtB,CAAP;AACD;;AAED,SAAO,IAAP;AACD,CAP4C,CAA7C;AAQAxO,OAAO,CAACU,UAAR,GAAqBA,UAArB;;AAEA,MAAMD,cAAc,GAAGqB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC9CC,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UADgB;AAE9CwM,EAAAA,QAAQ,EAAEnN,UAAU,CAACO,OAAX,CAAmBQ,IAFiB;AAG9CqM,EAAAA,SAAS,EAAEpN,UAAU,CAACO,OAAX,CAAmBQ,IAHgB;AAI9CsM,EAAAA,IAAI,EAAErN,UAAU,CAACO,OAAX,CAAmB+M,IAAnB,CAAwB3M,UAJgB;AAK9C4M,EAAAA,KAAK,EAAEvN,UAAU,CAACO,OAAX,CAAmBG;AALoB,CAAzB,CAAvB;;AAQAxC,OAAO,CAACS,cAAR,GAAyBA,cAAzB;;AAEA,MAAMD,uBAAuB,GAAGsB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACvDgN,EAAAA,OAAO,EAAE7O,cAD8C;AAEvD8O,EAAAA,SAAS,EAAEzN,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B1E,cAA3B,CAF4C;AAGvD+O,EAAAA,QAAQ,EAAE1N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B1E,cAA3B;AAH6C,CAAzB,CAAhC;;AAMAT,OAAO,CAACQ,uBAAR,GAAkCA,uBAAlC;;AAEA,MAAMD,kBAAkB,GAAGuB,UAAU,CAACO,OAAX,CAAmBuI,SAAnB,CAA6B,CAAC9I,UAAU,CAACO,OAAX,CAAmBG,MAApB,EAA4BV,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAC3GuG,EAAAA,IAAI,EAAE/G,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAD2E;AAE3GC,EAAAA,KAAK,EAAEZ,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAF0E;AAG3GgH,EAAAA,OAAO,EAAE3H,UAAU,CAACO,OAAX,CAAmBG;AAH+E,CAAzB,CAA5B,CAA7B,CAA3B;;AAMAxC,OAAO,CAACO,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,mBAAmB,GAAGwB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnDmN,EAAAA,YAAY,EAAE3N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B5E,kBAA3B,CADqC;AAEnDmP,EAAAA,WAAW,EAAE5N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B5E,kBAA3B,CAFsC;AAGnDoP,EAAAA,cAAc,EAAE7N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B5E,kBAA3B,CAHmC;AAInDqP,EAAAA,YAAY,EAAE9N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B5E,kBAA3B,CAJqC;AAKnDsP,EAAAA,kBAAkB,EAAE/N,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2B5E,kBAA3B;AAL+B,CAAzB,CAA5B;;AAQAP,OAAO,CAACM,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMD,qBAAqB,GAAGyB,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACrD;AACF;AACA;AACEC,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAJuB;;AAMrD;AACF;AACA;AACEC,EAAAA,KAAK,EAAEZ,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UAToB;;AAWrD;AACF;AACA;AACA;AACEE,EAAAA,KAAK,EAAEb,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAfoB,CAAzB,CAA9B;AAiBA;AACA;AACA;AACA;AACA;;;AAGAzC,OAAO,CAACK,qBAAR,GAAgCA,qBAAhC;;AAEA,MAAMD,mBAAmB,GAAG0B,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnDyK,EAAAA,QAAQ,EAAEjL,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACjCwN,IAAAA,WAAW,EAAEhO,UAAU,CAACO,OAAX,CAAmB8C,OAAnB,CAA2BrD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAArD,EAAiEA,UAD7C;AAEjC+C,IAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AAFC,GAAzB,EAGPA,UAJgD;AAKnDsN,EAAAA,UAAU,EAAEjO,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AACnCI,IAAAA,KAAK,EAAEZ,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AADE,GAAzB,EAETA;AAPgD,CAAzB,CAA5B;;AAUAzC,OAAO,CAACI,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMD,gBAAgB,GAAG2B,UAAU,CAACO,OAAX,CAAmBC,KAAnB,CAAyB;AAChDC,EAAAA,EAAE,EAAET,UAAU,CAACO,OAAX,CAAmBG,MADyB;;AAGhD;AACF;AACA;AACEwN,EAAAA,IAAI,EAAElO,UAAU,CAACO,OAAX,CAAmBG,MANuB;AAOhDwC,EAAAA,GAAG,EAAElD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UAPiB;AAQhDwC,EAAAA,GAAG,EAAEnD,UAAU,CAACO,OAAX,CAAmBgB,MAAnB,CAA0BZ,UARiB;AAShDyB,EAAAA,IAAI,EAAEpC,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC,UATgB;;AAWhD;AACF;AACA;AACA;AACEwN,EAAAA,SAAS,EAAEnO,UAAU,CAACO,OAAX,CAAmBgB,MAfkB;;AAiBhD;AACF;AACA;AACEmC,EAAAA,IAAI,EAAE1D,UAAU,CAACO,OAAX,CAAmBG,MAAnB,CAA0BC;AApBgB,CAAzB,CAAzB;;AAuBAzC,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChainableTypeChecker = createChainableTypeChecker;\nexports.userLocationType = exports.geocodedFeatureType = exports.configuredCompanyType = exports.configuredModesType = exports.configuredModeType = exports.modeSelectorOptionsType = exports.modeOptionType = exports.latlngType = exports.stationType = exports.transitiveDataType = exports.stopLayerStopType = exports.transitIndexStopWithRoutes = exports.timeOptionsType = exports.locationType = exports.itineraryType = exports.fareType = exports.legType = exports.placeType = exports.stepsType = exports.encodedPolylineType = exports.configType = exports.vehicleRentalMapOverlaySymbolsType = exports.transitVehicleType = exports.languageConfigType = exports.transitOperatorType = exports.leafletPathType = exports.companyType = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = require(\"react\");\n\nvar _map = require(\"./map\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst companyType = _propTypes.default.shape({\n  id: _propTypes.default.string.isRequired,\n  label: _propTypes.default.string.isRequired,\n\n  /* a comma-separated string listing the modes that this company has */\n  modes: _propTypes.default.string.isRequired\n});\n/**\n * Leaflet path properties to use to style a CircleMarker, Marker or Polyline.\n *\n * See https://leafletjs.com/reference-1.6.0.html#path\n */\n\n\nexports.companyType = companyType;\n\nconst leafletPathType = _propTypes.default.shape({\n  bubblingMouseEvents: _propTypes.default.bool,\n  color: _propTypes.default.string,\n  className: _propTypes.default.string,\n  dashArray: _propTypes.default.string,\n  dashOffset: _propTypes.default.string,\n  fill: _propTypes.default.bool,\n  fillColor: _propTypes.default.string,\n  fillOpacity: _propTypes.default.number,\n  fillRule: _propTypes.default.string,\n  lineCap: _propTypes.default.string,\n  lineJoin: _propTypes.default.string,\n  opacity: _propTypes.default.number,\n  renderer: _propTypes.default.func,\n  stroke: _propTypes.default.bool,\n  weight: _propTypes.default.number\n});\n/**\n * Describes some options to help display data about a transit agency that is\n * configured in an opentripplanner instance.\n */\n\n\nexports.leafletPathType = leafletPathType;\n\nconst transitOperatorType = _propTypes.default.shape({\n  defaultRouteColor: _propTypes.default.string,\n  defaultRouteTextColor: _propTypes.default.string,\n  id: _propTypes.default.string.isRequired,\n  logo: _propTypes.default.string.isRequired,\n  longNameSplitter: _propTypes.default.string,\n  name: _propTypes.default.string,\n  order: _propTypes.default.number\n});\n\nexports.transitOperatorType = transitOperatorType;\n\nconst languageConfigType = _propTypes.default.shape({\n  stopViewer: _propTypes.default.string\n});\n/** describes the objects from the real-time vehicle service */\n\n\nexports.languageConfigType = languageConfigType;\n\nconst transitVehicleType = _propTypes.default.shape({\n  routeShortName: _propTypes.default.string,\n  routeLongName: _propTypes.default.string,\n  routeType: _propTypes.default.string,\n  status: _propTypes.default.string,\n  reportDate: _propTypes.default.string,\n  seconds: _propTypes.default.number,\n  stopSequence: _propTypes.default.number,\n  stopId: _propTypes.default.string,\n  vehicleId: _propTypes.default.string,\n  tripId: _propTypes.default.string,\n  blockId: _propTypes.default.string,\n  lat: _propTypes.default.number,\n  lon: _propTypes.default.number,\n  heading: _propTypes.default.number\n});\n\nexports.transitVehicleType = transitVehicleType;\n\nconst vehicleRentalMapOverlaySymbolsType = _propTypes.default.arrayOf(_propTypes.default.shape({\n  dockStrokeColor: _propTypes.default.string,\n  fillColor: _propTypes.default.string,\n  maxZoom: _propTypes.default.number.isRequired,\n  minZoom: _propTypes.default.number.isRequired,\n  pixels: _propTypes.default.number,\n  type: _propTypes.default.string.isRequired\n}).isRequired);\n/**\n * Represents the expected configuration of the webapp.\n *\n * Note: this is an incomplete type mapping.\n */\n\n\nexports.vehicleRentalMapOverlaySymbolsType = vehicleRentalMapOverlaySymbolsType;\n\nconst configType = _propTypes.default.shape({\n  companies: _propTypes.default.arrayOf(companyType.isRequired),\n  dateTime: _propTypes.default.shape({\n    timeFormat: _propTypes.default.string,\n    dateFormat: _propTypes.default.string,\n    longDateFormat: _propTypes.default.string\n  }),\n  // TODO: add full typing\n  map: _propTypes.default.shape({\n    overlays: _propTypes.default.arrayOf(_propTypes.default.shape({\n      /**\n       * The applicable companies this overlay covers. Only applicable in\n       * certain vehicle rental overlays.\n       */\n      companies: _propTypes.default.arrayOf(_propTypes.default.string.isRequired),\n      name: _propTypes.default.string.isRequired,\n\n      /**\n       * The applicable map symbols. Only applicable in vehicle rental\n       * overlays.\n       */\n      mapSymbols: vehicleRentalMapOverlaySymbolsType,\n\n      /**\n       * Only used during park and ride queries. This will filter out P&Rs\n       * that are futher than the specified number of meters from a transit\n       * stop.\n       */\n      maxTransitDistance: _propTypes.default.number,\n\n      /**\n       * The applicable modes this overlay covers. Only applicable in certain\n       * vehicle rental overlays.\n       */\n      modes: _propTypes.default.arrayOf(_propTypes.default.string.isRequired),\n\n      /**\n       * The type of overlay. Currently valid values include:\n       *\n       * \"bike-rental\", \"car-rental\", \"micromobility-rental\", \"park-and-ride\",\n       * \"stops\", \"tile\"\n       */\n      type: _propTypes.default.string.isRequired\n    }))\n  }),\n  transitOperators: _propTypes.default.arrayOf(transitOperatorType)\n});\n\nexports.configType = configType;\n\nconst feedScopedIdType = _propTypes.default.shape({\n  agencyId: _propTypes.default.string,\n  id: _propTypes.default.string\n});\n\nconst encodedPolylineType = _propTypes.default.shape({\n  length: _propTypes.default.number.isRequired,\n  points: _propTypes.default.string.isRequired\n});\n\nexports.encodedPolylineType = encodedPolylineType;\n\nconst elevationData = _propTypes.default.arrayOf(_propTypes.default.shape({\n  first: _propTypes.default.number.isRequired,\n  second: _propTypes.default.number.isRequired\n}).isRequired);\n\nconst alertType = _propTypes.default.shape({\n  alertHeaderText: _propTypes.default.string,\n  alertDescriptionText: _propTypes.default.string,\n  alertUrl: _propTypes.default.string,\n  effectiveStartDate: _propTypes.default.number\n});\n/**\n * Represents steps in a leg in an itinerary of an OTP plan response. These are\n * only for non-transit modes.\n * See documentation here: http://otp-docs.ibi-transit.com/api/json_WalkStep.html\n */\n\n\nconst stepsType = _propTypes.default.arrayOf(_propTypes.default.shape({\n  absoluteDirection: _propTypes.default.string.isRequired,\n  alerts: _propTypes.default.arrayOf(alertType),\n  area: _propTypes.default.bool.isRequired,\n  bogusName: _propTypes.default.bool.isRequired,\n  distance: _propTypes.default.number.isRequired,\n  elevation: elevationData.isRequired,\n  lat: _propTypes.default.number.isRequired,\n  lon: _propTypes.default.number.isRequired,\n  relativeDirection: _propTypes.default.string.isRequired,\n  stayOn: _propTypes.default.bool.isRequired,\n  streetName: _propTypes.default.string.isRequired\n}));\n\nexports.stepsType = stepsType;\n\nconst placeType = _propTypes.default.shape({\n  arrival: _propTypes.default.number,\n  departure: _propTypes.default.number,\n  lat: _propTypes.default.number.isRequired,\n  lon: _propTypes.default.number.isRequired,\n  name: _propTypes.default.string.isRequired,\n  networks: _propTypes.default.arrayOf(_propTypes.default.string.isRequired),\n  stopCode: _propTypes.default.string,\n  stopId: _propTypes.default.string,\n  stopIndex: _propTypes.default.number,\n  stopSequence: _propTypes.default.number,\n  vertexType: _propTypes.default.string.isRequired,\n  zoneId: _propTypes.default.string\n});\n/**\n * Represents a leg in an itinerary of an OTP plan response. Each leg represents\n * a portion of the overall itinerary that is done until either reaching the\n * destination or transitioning to another mode of travel. See OTP webservice\n * documentation here:\n * http://otp-docs.ibi-transit.com/api/json_Leg.html\n */\n\n\nexports.placeType = placeType;\n\nconst legType = _propTypes.default.shape({\n  agencyId: _propTypes.default.string,\n  agencyName: _propTypes.default.string,\n  agencyTimeZoneOffset: _propTypes.default.number.isRequired,\n  agencyUrl: _propTypes.default.string,\n  alerts: _propTypes.default.arrayOf(alertType),\n  arrivalDelay: _propTypes.default.number.isRequired,\n  departureDelay: _propTypes.default.number.isRequired,\n  distance: _propTypes.default.number.isRequired,\n  duration: _propTypes.default.number.isRequired,\n  endTime: _propTypes.default.number.isRequired,\n  from: placeType.isRequired,\n  hailedCar: _propTypes.default.bool.isRequired,\n  headsign: _propTypes.default.string,\n  interlineWithPreviousLeg: _propTypes.default.bool.isRequired,\n  intermediateStops: _propTypes.default.arrayOf(placeType).isRequired,\n  interStopGeometry: _propTypes.default.arrayOf(encodedPolylineType),\n  legGeometry: encodedPolylineType.isRequired,\n  mode: _propTypes.default.string.isRequired,\n  pathway: _propTypes.default.bool.isRequired,\n  realTime: _propTypes.default.bool.isRequired,\n  rentedBike: _propTypes.default.bool.isRequired,\n  rentedCar: _propTypes.default.bool.isRequired,\n  rentedVehicle: _propTypes.default.bool.isRequired,\n  route: _propTypes.default.string,\n  routeId: _propTypes.default.string,\n  routeType: _propTypes.default.number,\n  serviceDate: _propTypes.default.string,\n  startTime: _propTypes.default.number.isRequired,\n  steps: stepsType.isRequired,\n  tncData: _propTypes.default.shape({\n    company: _propTypes.default.string.isRequired,\n    currency: _propTypes.default.string.isRequired,\n    displayName: _propTypes.default.string.isRequired,\n    estimatedArrival: _propTypes.default.number.isRequired,\n    maxCost: _propTypes.default.number.isRequired,\n    minCost: _propTypes.default.number.isRequired,\n    productId: _propTypes.default.string.isRequired,\n    travelDuration: _propTypes.default.number.isRequired\n  }),\n  to: placeType.isRequired,\n  transitLeg: _propTypes.default.bool.isRequired,\n  tripBlockId: _propTypes.default.string,\n  tripId: _propTypes.default.string\n});\n\nexports.legType = legType;\n\nconst moneyType = _propTypes.default.shape({\n  cents: _propTypes.default.number.isRequired,\n  currency: _propTypes.default.shape({\n    defaultFractionDigits: _propTypes.default.number.isRequired,\n    currencyCode: _propTypes.default.string.isRequired,\n    symbol: _propTypes.default.string.isRequired,\n    currency: _propTypes.default.string.isRequired\n  }).isRequired\n});\n/**\n * Represents the fare component of an itinerary of an OTP plan response. See\n * detailed documentation in OTP webservice documentation here:\n * http://otp-docs.ibi-transit.com/api/json_Fare.html\n *\n * NOTE: so far the fare includes ONLY a fare encountered on public transit and\n * not any bike rental or TNC rental fees.\n */\n\n\nconst fareType = _propTypes.default.shape({\n  details: _propTypes.default.objectOf(_propTypes.default.arrayOf(_propTypes.default.shape({\n    fareId: _propTypes.default.oneOfType([_propTypes.default.string, feedScopedIdType]).isRequired,\n    price: moneyType.isRequired,\n    routes: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, feedScopedIdType])).isRequired\n  })).isRequired),\n  fare: _propTypes.default.objectOf(moneyType)\n});\n/**\n * Represents an itinerary of an OTP plan response. See detailed documentation\n * in OTP webservice documentation here:\n * http://otp-docs.ibi-transit.com/api/json_Itinerary.html\n */\n\n\nexports.fareType = fareType;\n\nconst itineraryType = _propTypes.default.shape({\n  duration: _propTypes.default.number.isRequired,\n  elevationGained: _propTypes.default.number.isRequired,\n  elevationLost: _propTypes.default.number.isRequired,\n  endTime: _propTypes.default.number.isRequired,\n  fare: fareType,\n  legs: _propTypes.default.arrayOf(legType).isRequired,\n  startTime: _propTypes.default.number.isRequired,\n  tooSloped: _propTypes.default.bool,\n  transfers: _propTypes.default.number.isRequired,\n  transitTime: _propTypes.default.number.isRequired,\n  waitingTime: _propTypes.default.number.isRequired,\n  walkDistance: _propTypes.default.number.isRequired,\n  walkLimitExceeded: _propTypes.default.bool.isRequired,\n  walkTime: _propTypes.default.number.isRequired\n});\n/**\n * Used to model a location that is used in planning a trip.\n */\n\n\nexports.itineraryType = itineraryType;\n\nconst locationType = _propTypes.default.shape({\n  lat: _propTypes.default.number.isRequired,\n  lon: _propTypes.default.number.isRequired,\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * This is only used location that a user has saved. Can be either:\n   * \"home\" or \"work\"\n   */\n  type: _propTypes.default.string\n});\n/**\n * Used to help display the time of day within the context of a particular itinerary.\n */\n\n\nexports.locationType = locationType;\n\nconst timeOptionsType = _propTypes.default.shape({\n  /**\n   * A format string template to be used to display a date using moment.js\n   */\n  format: _propTypes.default.string,\n\n  /*\n   * The timezone offset in milliseconds if any should be added. This is\n   * typically calculated using the itinerary.js#getTimeZoneOffset function.\n   */\n  offset: _propTypes.default.number\n});\n/**\n * This models data about a stop and it's associated routes that is obtained\n * from a transit index API.\n */\n\n\nexports.timeOptionsType = timeOptionsType;\n\nconst transitIndexStopWithRoutes = _propTypes.default.shape({\n  /**\n   * The stop code if the stop has one\n   */\n  code: _propTypes.default.string,\n\n  /**\n   * The distance from the user to the stop in meters\n   */\n  dist: _propTypes.default.number,\n  lat: _propTypes.default.number,\n  lon: _propTypes.default.number,\n  name: _propTypes.default.string,\n  routes: _propTypes.default.arrayOf(_propTypes.default.shape({\n    longName: _propTypes.default.string,\n    shortName: _propTypes.default.string\n  }))\n});\n\nexports.transitIndexStopWithRoutes = transitIndexStopWithRoutes;\n\nconst stopLayerStopType = _propTypes.default.shape({\n  id: _propTypes.default.string.isRequired,\n  name: _propTypes.default.string.isRequired,\n  lat: _propTypes.default.number.isRequired,\n  lon: _propTypes.default.number.isRequired\n});\n\nexports.stopLayerStopType = stopLayerStopType;\n\nconst transitivePlaceType = _propTypes.default.shape({\n  place_id: _propTypes.default.string.isRequired,\n  type: _propTypes.default.string.isRequired\n});\n\nconst transitiveDataType = _propTypes.default.shape({\n  journeys: _propTypes.default.arrayOf(_propTypes.default.shape({\n    journey_id: _propTypes.default.string.isRequired,\n    journey_name: _propTypes.default.string.isRequired,\n    segments: _propTypes.default.arrayOf(_propTypes.default.shape({\n      arc: _propTypes.default.bool,\n      from: transitivePlaceType,\n      patterns: _propTypes.default.arrayOf(_propTypes.default.shape({\n        pattern_id: _propTypes.default.string.isRequired,\n        from_stop_index: _propTypes.default.number.isRequired,\n        to_stop_index: _propTypes.default.number.isRequired\n      })),\n      streetEdges: _propTypes.default.arrayOf(_propTypes.default.number),\n      to: transitivePlaceType,\n      type: _propTypes.default.string.isRequired\n    })).isRequired\n  })).isRequired,\n  patterns: _propTypes.default.arrayOf(_propTypes.default.shape({\n    pattern_id: _propTypes.default.string.isRequired,\n    pattern_name: _propTypes.default.string.isRequired,\n    route_id: _propTypes.default.string.isRequired,\n    stops: _propTypes.default.arrayOf(_propTypes.default.shape({\n      geometry: _propTypes.default.string,\n      stop_id: _propTypes.default.string.isRequired\n    })).isRequired\n  })).isRequired,\n  places: _propTypes.default.arrayOf(_propTypes.default.shape({\n    place_id: _propTypes.default.string.isRequired,\n    place_lat: _propTypes.default.number.isRequired,\n    place_lon: _propTypes.default.number.isRequired,\n    place_name: _propTypes.default.string\n  })).isRequired,\n  routes: _propTypes.default.arrayOf(_propTypes.default.shape({\n    agency_id: _propTypes.default.string.isRequired,\n    route_id: _propTypes.default.string.isRequired,\n    route_short_name: _propTypes.default.string.isRequired,\n    route_long_name: _propTypes.default.string.isRequired,\n    route_type: _propTypes.default.number.isRequired,\n    route_color: _propTypes.default.string\n  })).isRequired,\n  stops: _propTypes.default.arrayOf(_propTypes.default.shape({\n    stop_id: _propTypes.default.string.isRequired,\n    stop_name: _propTypes.default.string.isRequired,\n    stop_lat: _propTypes.default.number.isRequired,\n    stop_lon: _propTypes.default.number.isRequired\n  })).isRequired,\n  streetEdges: _propTypes.default.arrayOf(_propTypes.default.shape({\n    edge_id: _propTypes.default.number.isRequired,\n    geometry: encodedPolylineType\n  })).isRequired\n});\n/**\n * This models data about a vehicle rental station as obtained from various\n * vehicle rental API endpoints from OTP.\n */\n\n\nexports.transitiveDataType = transitiveDataType;\n\nconst stationType = _propTypes.default.shape({\n  bikesAvailable: _propTypes.default.number,\n  id: _propTypes.default.string.isRequired,\n  isFloatingBike: _propTypes.default.bool,\n  isFloatingCar: _propTypes.default.bool,\n  isFloatingVehicle: _propTypes.default.bool,\n  name: _propTypes.default.string,\n  networks: _propTypes.default.arrayOf(_propTypes.default.string.isRequired).isRequired,\n  spacesAvailable: _propTypes.default.number,\n  x: _propTypes.default.number.isRequired,\n  y: _propTypes.default.number.isRequired\n});\n/**\n * Utility function to help create chained validators\n * per https://www.ian-thomas.net/custom-proptype-validation-with-react/\n * @param {*} validator The validator to use.\n */\n\n\nexports.stationType = stationType;\n\nfunction createChainableTypeChecker(validator) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || \"ANONYMOUS\";\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        const locationName = _react.ReactPropTypeLocationNames[location];\n        return new Error(`Required '${locationName}/${propName}' was not specified in '${componentName}'.`);\n      }\n\n      return null;\n    }\n\n    return validator(props, propName, componentName, location);\n  }\n\n  const chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nconst latlngType = createChainableTypeChecker((props, propName) => {\n  // Source: https://reactjs.org/docs/typechecking-with-proptypes.html#react.proptypes\n  if (!(0, _map.isValidLatLng)(props[propName])) {\n    return new Error(`${propName} needs to be a [lat, lng] array`);\n  }\n\n  return null;\n});\nexports.latlngType = latlngType;\n\nconst modeOptionType = _propTypes.default.shape({\n  id: _propTypes.default.string.isRequired,\n  selected: _propTypes.default.bool,\n  showTitle: _propTypes.default.bool,\n  text: _propTypes.default.node.isRequired,\n  title: _propTypes.default.string\n});\n\nexports.modeOptionType = modeOptionType;\n\nconst modeSelectorOptionsType = _propTypes.default.shape({\n  primary: modeOptionType,\n  secondary: _propTypes.default.arrayOf(modeOptionType),\n  tertiary: _propTypes.default.arrayOf(modeOptionType)\n});\n\nexports.modeSelectorOptionsType = modeSelectorOptionsType;\n\nconst configuredModeType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  mode: _propTypes.default.string.isRequired,\n  label: _propTypes.default.string.isRequired,\n  company: _propTypes.default.string\n})]);\n\nexports.configuredModeType = configuredModeType;\n\nconst configuredModesType = _propTypes.default.shape({\n  transitModes: _propTypes.default.arrayOf(configuredModeType),\n  accessModes: _propTypes.default.arrayOf(configuredModeType),\n  exclusiveModes: _propTypes.default.arrayOf(configuredModeType),\n  bicycleModes: _propTypes.default.arrayOf(configuredModeType),\n  micromobilityModes: _propTypes.default.arrayOf(configuredModeType)\n});\n\nexports.configuredModesType = configuredModesType;\n\nconst configuredCompanyType = _propTypes.default.shape({\n  /**\n   * The id of the company. This is typically in all-caps.\n   */\n  id: _propTypes.default.string.isRequired,\n\n  /**\n   * A human readable text value that can be displayed to users.\n   */\n  label: _propTypes.default.string.isRequired,\n\n  /**\n   * A comma-separated list of applicable modes of travel that the company\n   * offers.\n   */\n  modes: _propTypes.default.string.isRequired\n});\n/**\n * Depending on the geocoder that is used, more properties than just the `label`\n * property might be provided by the geocoder. For example, with the Pelias\n * geocoder, properties such as `id`, `layer`, `source` are also included.\n */\n\n\nexports.configuredCompanyType = configuredCompanyType;\n\nconst geocodedFeatureType = _propTypes.default.shape({\n  geometry: _propTypes.default.shape({\n    coordinates: _propTypes.default.arrayOf(_propTypes.default.number.isRequired).isRequired,\n    type: _propTypes.default.string.isRequired\n  }).isRequired,\n  properties: _propTypes.default.shape({\n    label: _propTypes.default.string.isRequired\n  }).isRequired\n});\n\nexports.geocodedFeatureType = geocodedFeatureType;\n\nconst userLocationType = _propTypes.default.shape({\n  id: _propTypes.default.string,\n\n  /**\n   * Can be either 'home', 'work', or null\n   */\n  icon: _propTypes.default.string,\n  lat: _propTypes.default.number.isRequired,\n  lon: _propTypes.default.number.isRequired,\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * This represents the last time that this location was selected in a\n   * search\n   */\n  timestamp: _propTypes.default.number,\n\n  /**\n   * One of: 'home', 'work', 'stop' or 'recent'\n   */\n  type: _propTypes.default.string.isRequired\n});\n\nexports.userLocationType = userLocationType;"]}