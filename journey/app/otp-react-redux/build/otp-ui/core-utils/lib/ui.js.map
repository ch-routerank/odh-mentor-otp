{"version":3,"sources":["ui.js"],"names":["Object","defineProperty","exports","value","isMobile","isIE","enableScrollForSelector","_bowser","_interopRequireDefault","require","obj","__esModule","default","test","navigator","userAgent","name","selector","overlay","document","querySelector","clientY","isOverlayTotallyScrolled","scrollHeight","scrollTop","clientHeight","disableRubberBand","event","clientYDelta","targetTouches","preventDefault","addEventListener","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,IAAR,GAAeA,IAAf;AACAH,OAAO,CAACI,uBAAR,GAAkCA,uBAAlC;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASN,QAAT,GAAoB;AAClB;AACA,SAAO,iEAAiES,IAAjE,CAAsEC,SAAS,CAACC,SAAhF,CAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASV,IAAT,GAAgB;AACd,SAAOE,OAAO,CAACK,OAAR,CAAgBI,IAAhB,KAAyB,mBAAhC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASV,uBAAT,CAAiCW,QAAjC,EAA2C;AACzC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CAAhB;AACA,MAAII,OAAO,GAAG,IAAd,CAFyC,CAErB;;AAEpB,WAASC,wBAAT,GAAoC;AAClC;AACA,WAAOJ,OAAO,CAACK,YAAR,GAAuBL,OAAO,CAACM,SAA/B,IAA4CN,OAAO,CAACO,YAA3D;AACD;;AAED,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,UAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBR,OAAvB,GAAiCA,OAAtD;;AAEA,QAAIH,OAAO,CAACM,SAAR,KAAsB,CAAtB,IAA2BI,YAAY,GAAG,CAA9C,EAAiD;AAC/C;AACAD,MAAAA,KAAK,CAACG,cAAN;AACD;;AAED,QAAIR,wBAAwB,MAAMM,YAAY,GAAG,CAAjD,EAAoD;AAClD;AACAD,MAAAA,KAAK,CAACG,cAAN;AACD;AACF;;AAEDZ,EAAAA,OAAO,CAACa,gBAAR,CAAyB,YAAzB,EAAuC,UAAUJ,KAAV,EAAiB;AACtD,QAAIA,KAAK,CAACE,aAAN,CAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAX,MAAAA,OAAO,GAAGM,KAAK,CAACE,aAAN,CAAoB,CAApB,EAAuBR,OAAjC;AACD;AACF,GALD,EAKG,KALH;AAMAH,EAAAA,OAAO,CAACa,gBAAR,CAAyB,WAAzB,EAAsC,UAAUJ,KAAV,EAAiB;AACrD,QAAIA,KAAK,CAACE,aAAN,CAAoBG,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAN,MAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACD;AACF,GALD,EAKG,KALH;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMobile = isMobile;\nexports.isIE = isIE;\nexports.enableScrollForSelector = enableScrollForSelector;\n\nvar _bowser = _interopRequireDefault(require(\"bowser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMobile() {\n  // TODO: consider using 3rd-party library?\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n/**\n * Returns true if the user is using a [redacted] browser\n */\n\n\nfunction isIE() {\n  return _bowser.default.name === \"Internet Explorer\";\n}\n/**\n * Enables scrolling for a specified selector, while disabling scrolling for all\n * other targets. This is adapted from https://stackoverflow.com/a/41601290/915811\n * and intended to fix issues with iOS elastic scrolling, e.g.,\n * https://github.com/conveyal/trimet-mod-otp/issues/92.\n */\n\n\nfunction enableScrollForSelector(selector) {\n  const overlay = document.querySelector(selector);\n  let clientY = null; // remember Y position on touch start\n\n  function isOverlayTotallyScrolled() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n    return overlay.scrollHeight - overlay.scrollTop <= overlay.clientHeight;\n  }\n\n  function disableRubberBand(event) {\n    const clientYDelta = event.targetTouches[0].clientY - clientY;\n\n    if (overlay.scrollTop === 0 && clientYDelta > 0) {\n      // element is at the top of its scroll\n      event.preventDefault();\n    }\n\n    if (isOverlayTotallyScrolled() && clientYDelta < 0) {\n      // element is at the top of its scroll\n      event.preventDefault();\n    }\n  }\n\n  overlay.addEventListener(\"touchstart\", function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      clientY = event.targetTouches[0].clientY;\n    }\n  }, false);\n  overlay.addEventListener(\"touchmove\", function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      disableRubberBand(event);\n    }\n  }, false);\n}"]}