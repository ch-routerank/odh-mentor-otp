{"version":3,"sources":["map.js"],"names":["latlngToString","latlng","lat","toFixed","lng","lon","coordsToString","coords","length","map","c","join","currentPositionToLocation","currentPosition","error","console","warn","latitude","longitude","name","category","stringToCoords","str","split","constructLocation","getDetailText","location","detailText","type","id","timestamp","fromNow","formatStoredPlaceName","withDetails","displayName","toSentenceCase","matchLatLon","location1","location2","itineraryToTransitive","itin","companies","tdata","journeys","streetEdges","places","patterns","routes","stops","streetEdgeId","patternId","journey","journey_id","journey_name","segments","push","place_id","place_lat","legs","from","place_lon","to","forEach","leg","idx","mode","fromPlaceId","bikeShareId","vertexType","toPlaceId","segment","hailedCar","arc","edge_id","geometry","legGeometry","place_name","hasInterStopGeometry","interStopGeometry","hasIntermediateStopGeometry","intermediateStops","ptnId","pattern","pattern_id","pattern_name","route_id","routeId","stopId","stop_id","stop_name","stop_lat","stop_lon","stop","i","points","agency_id","agencyId","route_short_name","routeShortName","route_long_name","routeLongName","route_type","routeType","route_color","routeColor","from_stop_index","to_stop_index","Object","values","isBikeshareStation","place","lastIndexOf","isEScooterStation","isCarWalkTransition","isValidLat","Number","isFinite","isValidLng","isValidLatLng","arr","Array","isArray"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nimport { getPlaceName, isTransit, toSentenceCase } from \"./itinerary\";\n\nexport function latlngToString(latlng) {\n  return (\n    latlng &&\n    `${latlng.lat.toFixed(5)}, ${(latlng.lng || latlng.lon).toFixed(5)}`\n  );\n}\n\nexport function coordsToString(coords) {\n  return coords.length && coords.map(c => (+c).toFixed(5)).join(\", \");\n}\n\nexport function currentPositionToLocation(currentPosition) {\n  if (currentPosition.error || !currentPosition.coords) {\n    console.warn(\n      \"Cannot construct location from current position due to geolocation error or missing coordinates.\"\n    );\n    return null;\n  }\n  return {\n    lat: currentPosition.coords.latitude,\n    lon: currentPosition.coords.longitude,\n    name: \"(Posizione Corrente)\",\n    category: \"CURRENT_LOCATION\"\n  };\n}\n\nexport function stringToCoords(str) {\n  return (str && str.split(\",\").map(c => +c)) || [];\n}\n\nexport function constructLocation(latlng) {\n  return {\n    name: latlngToString(latlng),\n    lat: latlng.lat,\n    lon: latlng.lng\n  };\n}\n\nexport function getDetailText(location) {\n  let detailText;\n  if (location.type === \"home\" || location.type === \"work\") {\n    detailText = location.name;\n  }\n  if (location.type === \"stop\") {\n    detailText = location.id;\n  } else if (location.type === \"recent\" && location.timestamp) {\n    detailText = moment(location.timestamp).fromNow();\n  }\n  return detailText;\n}\n\nexport function formatStoredPlaceName(location, withDetails = true) {\n    var displayName = location.type === \"home\" || location.type === \"work\" ? (0, toSentenceCase)(location.type) : location.name;\n    displayName = location.type === \"home\" ? \"$_home_$\" : (location.type === \"work\" ? \"$_work_$\": location.name);\n  if (withDetails) {\n    const detailText = getDetailText(location);\n    if (detailText) displayName += ` (${detailText})`;\n  }\n  return displayName;\n}\n\nexport function matchLatLon(location1, location2) {\n  if (!location1 || !location2) return location1 === location2;\n  return location1.lat === location2.lat && location1.lon === location2.lon;\n}\n\nexport function itineraryToTransitive(itin, companies) {\n  const tdata = {\n    journeys: [],\n    streetEdges: [],\n    places: [],\n    patterns: [],\n    routes: [],\n    stops: []\n  };\n  const routes = {};\n  const stops = {};\n  let streetEdgeId = 0;\n  let patternId = 0;\n\n  const journey = {\n    journey_id: \"itin\",\n    journey_name: \"Iterarary-derived Journey\",\n    segments: []\n  };\n\n  // add 'from' and 'to' places to the tdata places array\n  tdata.places.push({\n    place_id: \"from\",\n    place_lat: itin.legs[0].from.lat,\n    place_lon: itin.legs[0].from.lon\n  });\n  tdata.places.push({\n    place_id: \"to\",\n    place_lat: itin.legs[itin.legs.length - 1].to.lat,\n    place_lon: itin.legs[itin.legs.length - 1].to.lon\n  });\n\n  itin.legs.forEach((leg, idx) => {\n    if (\n      leg.mode === \"WALK\" ||\n      leg.mode === \"BICYCLE\" ||\n      leg.mode === \"CAR\" ||\n      leg.mode === \"MICROMOBILITY\"\n    ) {\n      let fromPlaceId;\n      if (leg.from.bikeShareId) {\n        fromPlaceId = `bicycle_rent_station_${leg.from.bikeShareId}`;\n      } else if (leg.from.vertexType === \"VEHICLERENTAL\") {\n        fromPlaceId = `escooter_rent_station_${leg.from.name}`;\n      } else if (\n        leg.mode === \"CAR\" &&\n        idx > 0 &&\n        itin.legs[idx - 1].mode === \"WALK\"\n      ) {\n        // create a special place ID for car legs preceeded by walking legs\n        fromPlaceId = `itin_car_${streetEdgeId}_from`;\n      } else {\n        fromPlaceId = `itin_street_${streetEdgeId}_from`;\n      }\n\n      let toPlaceId;\n      if (leg.to.bikeShareId) {\n        toPlaceId = `bicycle_rent_station_${leg.to.bikeShareId}`;\n      } else if (leg.to.vertexType === \"VEHICLERENTAL\") {\n        toPlaceId = `escooter_rent_station_${leg.to.name}`;\n      } else if (\n        leg.mode === \"CAR\" &&\n        idx < itin.legs.length - 1 &&\n        itin.legs[idx + 1].mode === \"WALK\"\n      ) {\n        // create a special place ID for car legs followed by walking legs\n        toPlaceId = `itin_car_${streetEdgeId}_to`;\n      } else {\n        toPlaceId = `itin_street_${streetEdgeId}_to`;\n      }\n\n      const segment = {\n        type: leg.mode,\n        streetEdges: [streetEdgeId],\n        from: { type: \"PLACE\", place_id: fromPlaceId },\n        to: { type: \"PLACE\", place_id: toPlaceId }\n      };\n      // For TNC segments, draw using an arc\n      if (leg.mode === \"CAR\" && leg.hailedCar) segment.arc = true;\n      journey.segments.push(segment);\n\n      tdata.streetEdges.push({\n        edge_id: streetEdgeId,\n        geometry: leg.legGeometry\n      });\n      tdata.places.push({\n        place_id: fromPlaceId,\n        // Do not label the from place in addition to the to place. Otherwise,\n        // in some cases (bike rental station) the label for a single place will\n        // appear twice on the rendered transitive view.\n        // See https://github.com/conveyal/trimet-mod-otp/issues/152\n        // place_name: leg.from.name,\n        place_lat: leg.from.lat,\n        place_lon: leg.from.lon\n      });\n      tdata.places.push({\n        place_id: toPlaceId,\n        place_name: getPlaceName(leg.to, companies),\n        place_lat: leg.to.lat,\n        place_lon: leg.to.lon\n      });\n      streetEdgeId++;\n    }\n    if (isTransit(leg.mode)) {\n      // determine if we have valid inter-stop geometry\n      const hasInterStopGeometry = !!leg.interStopGeometry;\n      const hasIntermediateStopGeometry =\n        hasInterStopGeometry &&\n        leg.intermediateStops &&\n        leg.interStopGeometry.length === leg.intermediateStops.length + 1;\n\n      // create leg-specific pattern\n      const ptnId = `ptn_${patternId}`;\n      const pattern = {\n        pattern_id: ptnId,\n        pattern_name: `Pattern ${patternId}`,\n        route_id: leg.routeId,\n        stops: []\n      };\n\n      // add 'from' stop to stops dictionary and pattern object\n      stops[leg.from.stopId] = {\n        stop_id: leg.from.stopId,\n        stop_name: leg.from.name,\n        stop_lat: leg.from.lat,\n        stop_lon: leg.from.lon\n      };\n      pattern.stops.push({ stop_id: leg.from.stopId });\n\n      // add intermediate stops to stops dictionary and pattern object\n      if (leg.intermediateStops) {\n        leg.intermediateStops.forEach((stop, i) => {\n          stops[stop.stopId] = {\n            stop_id: stop.stopId,\n            stop_name: stop.name,\n            stop_lat: stop.lat,\n            stop_lon: stop.lon\n          };\n          pattern.stops.push({\n            stop_id: stop.stopId,\n            geometry:\n              hasIntermediateStopGeometry && leg.interStopGeometry[i].points\n          });\n        });\n      }\n\n      // add 'to' stop to stops dictionary and pattern object\n      stops[leg.to.stopId] = {\n        stop_id: leg.to.stopId,\n        stop_name: leg.to.name,\n        stop_lat: leg.to.lat,\n        stop_lon: leg.to.lon\n      };\n      pattern.stops.push({\n        stop_id: leg.to.stopId,\n        geometry:\n          hasInterStopGeometry &&\n          (hasIntermediateStopGeometry\n            ? leg.interStopGeometry[leg.interStopGeometry.length - 1].points\n            : leg.legGeometry.points)\n      });\n\n      // add route to the route dictionary\n      routes[leg.routeId] = {\n        agency_id: leg.agencyId,\n        route_id: leg.routeId,\n        route_short_name: leg.routeShortName || \"\",\n        route_long_name: leg.routeLongName || \"\",\n        route_type: leg.routeType,\n        route_color: leg.routeColor\n      };\n\n      // add the pattern to the tdata patterns array\n      tdata.patterns.push(pattern);\n\n      // add the pattern refrerence to the journey object\n      journey.segments.push({\n        type: \"TRANSIT\",\n        patterns: [\n          {\n            pattern_id: ptnId,\n            from_stop_index: 0,\n            to_stop_index: leg.intermediateStops\n              ? leg.intermediateStops.length + 2 - 1\n              : 1\n          }\n        ]\n      });\n\n      patternId++;\n    }\n  });\n\n  // add the routes and stops to the tdata arrays\n  tdata.routes.push(...Object.values(routes));\n  tdata.stops.push(...Object.values(stops));\n\n  // add the journey to the tdata journeys array\n  tdata.journeys.push(journey);\n\n  // console.log('derived tdata', tdata);\n  return tdata;\n}\n\nexport function isBikeshareStation(place) {\n  return place.place_id.lastIndexOf(\"bicycle_rent_station\") !== -1;\n}\n\nexport function isEScooterStation(place) {\n  return place.place_id.lastIndexOf(\"escooter_rent_station\") !== -1;\n}\n\nexport function isCarWalkTransition(place) {\n  return place.place_id.lastIndexOf(\"itin_car_\") !== -1;\n}\n\nexport function isValidLat(lat) {\n  return Number.isFinite(lat) && lat >= -90 && lat <= 90;\n}\n\nexport function isValidLng(lng) {\n  return Number.isFinite(lng) && lng >= -180 && lng <= 180;\n}\n\nexport function isValidLatLng(arr) {\n  return (\n    Array.isArray(arr) &&\n    arr.length === 2 &&\n    isValidLat(arr[0]) &&\n    isValidLng(arr[1])\n  );\n}\n"]}