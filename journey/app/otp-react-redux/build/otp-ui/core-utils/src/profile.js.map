{"version":3,"sources":["profile.js"],"names":["filterProfileOptions","response","optStrs","filteredIndices","filteredProfile","otp","profile","filter","option","i","optStr","access","map","a","mode","join","transit","routes","route","id","indexOf","push","filteredJourneys","journeys","journey","locationString","str","defaultStr","split","accessToLeg","origin","destination","duration","time","transitLeg","from","name","to","optionToItinerary","query","itin","legs","walkTime","waitingTime","length","status","walkOnEdges","bikeEdges","walkOffEdges","onStationName","walkOnTime","offStationName","walkOffTime","streetEdges","forEach","edge","bikeRentalOffStation","distance","bikeRentalOnStation","fromName","toName","rideStats","avg","averageWait","waitStats","egress","summary","modes","profileOptionsToItineraries","options"],"mappings":"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","sourcesContent":["export function filterProfileOptions(response) {\n  // Filter out similar options. TODO: handle on server?\n  const optStrs = [];\n  const filteredIndices = [];\n\n  const filteredProfile = response.otp.profile.filter((option, i) => {\n    let optStr = option.access.map(a => a.mode).join(\"/\");\n    if (option.transit) {\n      optStr += ` $_to_$ ${option.transit\n        .map(transit => {\n          return transit.routes.map(route => route.id).join(\"/\");\n        })\n        .join(\",\")}`;\n    }\n    if (optStrs.indexOf(optStr) !== -1) return false;\n    optStrs.push(optStr);\n    filteredIndices.push(i);\n    return true;\n  });\n\n  const filteredJourneys = response.otp.journeys.filter(\n    (journey, i) => filteredIndices.indexOf(i) !== -1\n  );\n\n  response.otp.profile = filteredProfile;\n  response.otp.journeys = filteredJourneys;\n  return response;\n}\n\nfunction locationString(str, defaultStr) {\n  return str ? str.split(\",\")[0] : defaultStr;\n}\n\nfunction accessToLeg(access, origin, destination) {\n  return {\n    mode: access.mode,\n    duration: access.time,\n    transitLeg: false,\n    from: {\n      name: locationString(origin, \"Origin\")\n    },\n    to: {\n      name: locationString(destination, \"Destination\")\n    }\n  };\n}\n\n// helper functions for profileOptionsToItineraries:\n\nfunction optionToItinerary(option, query) {\n  const itin = {\n    duration: option.time,\n    legs: [],\n    walkTime: 0,\n    waitingTime: 0\n  };\n\n  // access leg\n  if (option.access && option.access.length > 0) {\n    if (option.access[0].mode === \"BICYCLE_RENT\") {\n      let status = \"WALK_ON\";\n      const walkOnEdges = [];\n      const bikeEdges = [];\n      const walkOffEdges = [];\n      let onStationName;\n      let walkOnTime = 0;\n      let offStationName;\n      let walkOffTime = 0;\n      option.access[0].streetEdges.forEach(edge => {\n        // check if we're returning the bike\n        if (edge.bikeRentalOffStation) {\n          status = \"WALK_OFF\";\n          offStationName = edge.bikeRentalOffStation.name;\n        }\n\n        if (status === \"WALK_ON\") {\n          walkOnEdges.push(edge);\n          walkOnTime += edge.distance;\n        } else if (status === \"BIKE\") {\n          bikeEdges.push(edge);\n        } else if (status === \"WALK_OFF\") {\n          walkOffEdges.push(edge);\n          walkOffTime += edge.distance;\n        }\n\n        // check if we're picking up the bike\n        if (edge.bikeRentalOnStation) {\n          status = \"BIKE\";\n          onStationName = edge.bikeRentalOnStation.name;\n        }\n      });\n\n      itin.walkTime += walkOnTime + walkOffTime;\n\n      // create the 'on' walk leg\n      itin.legs.push({\n        mode: \"WALK\",\n        duration: walkOnTime,\n        transitLeg: false,\n        from: {\n          name: locationString(query && query.from.name, \"Destination\")\n        },\n        to: {\n          name: onStationName\n        }\n      });\n\n      // create the bike leg\n      itin.legs.push({\n        mode: \"BICYCLE_RENT\",\n        duration: option.time - walkOnTime - walkOffTime,\n        transitLeg: false,\n        from: {\n          name: onStationName\n        },\n        to: {\n          name: offStationName\n        }\n      });\n\n      // create the 'off' walk leg\n      itin.legs.push({\n        mode: \"WALK\",\n        duration: walkOffTime,\n        transitLeg: false,\n        from: {\n          name: offStationName\n        },\n        to: {\n          name: locationString(query && query.to.name, \"Destination\")\n        }\n      });\n    } else {\n      itin.legs.push(\n        accessToLeg(\n          option.access[0],\n          query && query.from.name,\n          option.transit ? null : query && query.to.name\n        )\n      );\n      if (option.access[0].mode === \"WALK\")\n        itin.walkTime += option.access[0].time;\n    }\n  }\n\n  // transit legs\n  if (option.transit) {\n    option.transit.forEach(transit => {\n      itin.legs.push({\n        transitLeg: true,\n        mode: transit.mode,\n        from: {\n          name: transit.fromName\n        },\n        to: {\n          name: transit.toName\n        },\n        routes: transit.routes,\n        duration: transit.rideStats.avg,\n        averageWait: transit.waitStats.avg\n      });\n      itin.waitingTime += transit.waitStats.avg;\n    });\n  }\n\n  // egress leg\n  if (option.egress && option.egress.length > 0) {\n    // find the origin name, for transit trips\n    const origin = option.transit\n      ? option.transit[option.transit.length - 1].toName\n      : null;\n\n    itin.legs.push(\n      accessToLeg(option.egress[0], origin, query && query.to.name)\n    );\n    if (option.egress[0].mode === \"WALK\")\n      itin.walkTime += option.egress[0].time;\n  }\n\n  // construct summary\n  if (option.transit) {\n    itin.summary = \"Transit\";\n  } else if (option.modes.length === 1 && option.modes[0] === \"bicycle\")\n    itin.summary = \"Bicycle\";\n  else if (option.modes.length === 1 && option.modes[0] === \"walk\")\n    itin.summary = \"Walk\";\n  else if (option.modes.indexOf(\"bicycle_rent\") !== -1)\n    itin.summary = \"Bikeshare\";\n\n  return itin;\n}\n\n/** profileOptionsToItineraries * */\n\nexport function profileOptionsToItineraries(options, query) {\n  return options.map(option => optionToItinerary(option, query));\n}\n"]}