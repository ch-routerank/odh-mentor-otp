{"version":3,"sources":["endpoint.js"],"names":["UserLocationIcon","type","propTypes","PropTypes","string","isRequired","Endpoint","Component","location","propsLocation","rememberPlace","props","id","icon","forgetPlace","clearLocation","setLocation","otherType","e","target","getLatLng","locationType","reverseGeocode","render","locations","MapMarkerIcon","showUserSettings","position","lat","lon","match","find","l","isWork","isHome","iconHtml","ReactDOMServer","renderToStaticMarkup","html","className","onDragEnd","name","forgetHome","rememberAsHome","forgetWork","rememberAsWork","swapLocation","func","arrayOf","elementType","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import { divIcon } from \"leaflet\";\nimport {\n  constructLocation,\n  matchLatLon\n} from \"@opentripplanner/core-utils/lib/map\";\nimport { locationType } from \"@opentripplanner/core-utils/lib/types\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Marker, Popup } from \"react-leaflet\";\nimport ReactDOMServer from \"react-dom/server\";\nimport {\n  Briefcase,\n  Home,\n  MapMarkerAlt,\n  Sync,\n  Times\n} from \"styled-icons/fa-solid\";\n\nimport * as Styled from \"./styled\";\n\n/**\n * These icons are used to render common icons for user locations. These will\n * only show up in applications that allow saving user locations.\n */\nfunction UserLocationIcon({ type }) {\n  switch (type) {\n    case \"briefcase\":\n      return <Briefcase size={12} />;\n    case \"home\":\n      return <Home size={12} />;\n    case \"map-marker\":\n      return <MapMarkerAlt size={12} />;\n    case \"refresh\":\n      return <Sync size={12} />;\n    case \"times\":\n      return <Times size={12} />;\n    default:\n      return null;\n  }\n}\n\nUserLocationIcon.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default class Endpoint extends Component {\n  rememberAsHome = () => {\n    const { location: propsLocation, rememberPlace } = this.props;\n    const location = { ...propsLocation };\n    location.id = \"home\";\n    location.icon = \"home\";\n    location.type = \"home\";\n    rememberPlace({ type: \"home\", location });\n  };\n\n  rememberAsWork = () => {\n    const { location: propsLocation, rememberPlace } = this.props;\n    const location = { ...propsLocation };\n    location.id = \"work\";\n    location.icon = \"briefcase\";\n    location.type = \"work\";\n    rememberPlace({ type: \"work\", location });\n  };\n\n  forgetHome = () => {\n    const { forgetPlace } = this.props;\n    forgetPlace(\"home\");\n  };\n\n  forgetWork = () => {\n    const { forgetPlace } = this.props;\n    forgetPlace(\"work\");\n  };\n\n  clearLocation = () => {\n    const { clearLocation, type } = this.props;\n    clearLocation({ type });\n  };\n\n  swapLocation = () => {\n    const { location, setLocation, type } = this.props;\n    this.clearLocation();\n    const otherType = type === \"from\" ? \"$_destination_$\" : \"$_origin_$\";\n    setLocation({ type: otherType, location });\n  };\n\n  onDragEnd = e => {\n    const { setLocation, type } = this.props;\n    const location = constructLocation(e.target.getLatLng());\n    setLocation({ locationType: type, location, reverseGeocode: true });\n  };\n\n  render() {\n    const {\n      location,\n      locations,\n      MapMarkerIcon,\n      showUserSettings,\n      type\n    } = this.props;\n    const position =\n      location && location.lat && location.lon\n        ? [location.lat, location.lon]\n        : null;\n    if (!position) return null;\n    const match = locations.find(l => matchLatLon(l, location));\n    const isWork = match && match.type === \"work\";\n    const isHome = match && match.type === \"home\";\n    const iconHtml = ReactDOMServer.renderToStaticMarkup(\n      <MapMarkerIcon location={location} type={type} />\n    );\n    const otherType = type === \"from\" ? \"$_destination_$\" : \"$_origin_$\";\n    const icon = isWork ? \"briefcase\" : isHome ? \"home\" : \"map-marker\";\n    return (\n      <Marker\n        draggable\n        icon={divIcon({ html: iconHtml, className: \"\" })}\n        position={position}\n        onDragEnd={this.onDragEnd}\n      >\n        {showUserSettings && (\n          <Popup>\n            <div>\n              <strong>\n                <UserLocationIcon type={icon} /> {location.name}\n              </strong>\n              <div>\n                <Styled.Button\n                  disabled={isWork}\n                  onClick={isHome ? this.forgetHome : this.rememberAsHome}\n                >\n                  {isHome ? (\n                    <span>\n                      <UserLocationIcon type=\"times\" /> $_forget_home_$\n                    </span>\n                  ) : (\n                    <span>\n                      <UserLocationIcon type=\"home\" /> $_save_as_home_$\n                    </span>\n                  )}\n                </Styled.Button>\n              </div>\n              <div>\n                <Styled.Button\n                  disabled={isHome}\n                  onClick={isWork ? this.forgetWork : this.rememberAsWork}\n                >\n                  {isWork ? (\n                    <span>\n                      <UserLocationIcon type=\"times\" /> $_forget_work_$\n                    </span>\n                  ) : (\n                    <span>\n                      <UserLocationIcon type=\"briefcase\" /> $_save_as_work_$\n                    </span>\n                  )}\n                </Styled.Button>\n              </div>\n              <div>\n                <Styled.Button onClick={this.clearLocation}>\n                  <UserLocationIcon type=\"times\" /> $_remove_as_$ {type} location\n                </Styled.Button>\n              </div>\n              <div>\n                <Styled.Button onClick={this.swapLocation}>\n                  <UserLocationIcon type=\"refresh\" /> Cambia in {otherType}{\" \"}\n                  location\n                </Styled.Button>\n              </div>\n            </div>\n          </Popup>\n        )}\n      </Marker>\n    );\n  }\n}\n\n// See documenation in main index file for documenation on these props.\nEndpoint.propTypes = {\n  clearLocation: PropTypes.func.isRequired,\n  forgetPlace: PropTypes.func.isRequired,\n  location: locationType,\n  locations: PropTypes.arrayOf(locationType).isRequired,\n  MapMarkerIcon: PropTypes.elementType.isRequired,\n  rememberPlace: PropTypes.func.isRequired,\n  setLocation: PropTypes.func.isRequired,\n  showUserSettings: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nEndpoint.defaultProps = {\n  location: undefined\n};\n"]}