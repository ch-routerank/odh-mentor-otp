{"version":3,"sources":["index.js"],"names":["DefaultMapMarkerIcon","location","type","inner","name","propTypes","locationType","isRequired","PropTypes","string","EndpointsOverlay","clearLocation","forgetPlace","fromLocation","intermediatePlaces","locations","MapMarkerIcon","rememberPlace","setLocation","showUserSettings","toLocation","map","place","index","func","arrayOf","elementType","bool","noop","defaultProps","undefined"],"mappings":"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","sourcesContent":["import { locationType } from \"@opentripplanner/core-utils/lib/types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Endpoint from \"./endpoint\";\nimport {\n  StackedCircle,\n  StackedIconContainer,\n  StackedLocationIcon,\n  StackedToIcon,\n  ToIcon\n} from \"./styled\";\n\nfunction DefaultMapMarkerIcon({ location, type }) {\n  let inner;\n  switch (type) {\n    case \"to\":\n      inner = (\n        <>\n          <StackedToIcon size={24} type={type} />\n          <ToIcon size={20} type={type} />\n        </>\n      );\n      break;\n    default:\n      // Default to the location icon on top of a white background.\n      inner = (\n        <>\n          <StackedCircle size={24} />\n          <StackedLocationIcon size={24} type={type} />\n        </>\n      );\n      break;\n  }\n  return (\n    <StackedIconContainer title={location.name}>{inner}</StackedIconContainer>\n  );\n}\n\nDefaultMapMarkerIcon.propTypes = {\n  location: locationType.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nfunction EndpointsOverlay({\n  clearLocation,\n  forgetPlace,\n  fromLocation,\n  intermediatePlaces,\n  locations,\n  MapMarkerIcon,\n  rememberPlace,\n  setLocation,\n  showUserSettings,\n  toLocation\n}) {\n  return (\n    <div>\n      <Endpoint\n        clearLocation={clearLocation}\n        forgetPlace={forgetPlace}\n        location={fromLocation}\n        locations={locations}\n        MapMarkerIcon={MapMarkerIcon}\n        rememberPlace={rememberPlace}\n        setLocation={setLocation}\n        showUserSettings={showUserSettings}\n        type=\"from\"\n      />\n      {intermediatePlaces.map((place, index) => {\n        return (\n          <Endpoint\n            key={index}\n            clearLocation={clearLocation}\n            forgetPlace={forgetPlace}\n            location={place}\n            locations={locations}\n            MapMarkerIcon={MapMarkerIcon}\n            rememberPlace={rememberPlace}\n            setLocation={setLocation}\n            showUserSettings={showUserSettings}\n            type={place.type}\n          />\n        );\n      })}\n      <Endpoint\n        clearLocation={clearLocation}\n        forgetPlace={forgetPlace}\n        location={toLocation}\n        locations={locations}\n        MapMarkerIcon={MapMarkerIcon}\n        rememberPlace={rememberPlace}\n        setLocation={setLocation}\n        showUserSettings={showUserSettings}\n        type=\"to\"\n      />\n    </div>\n  );\n}\n\nEndpointsOverlay.propTypes = {\n  /**\n   * Dispatched when a user clicks on the clear location button in the user\n   * settings. Not needed unless user settings is activated. Dispatched with an\n   * argument in the form of:\n   *\n   * { type: \"from/to\" }\n   */\n  clearLocation: PropTypes.func,\n  /**\n   * Dispatched when a user clicks on the forget location button in the user\n   * settings. Not needed unless user settings is activated. Dispatched with a\n   * string argument representing the type of saved location.\n   */\n  forgetPlace: PropTypes.func,\n  /**\n   * The from location.\n   */\n  fromLocation: locationType,\n  /**\n   * Intermediate places along a journey.\n   */\n  intermediatePlaces: PropTypes.arrayOf(locationType),\n  /**\n   * An array of location that the user has saved. Not needed unless user\n   * settings is activated.\n   */\n  locations: PropTypes.arrayOf(locationType),\n  /**\n   * An optional custom component that can be used to create custom html that\n   * is used in a leaflet divIcon to render the map marker icon for each\n   * endpoint.\n   *\n   * See https://leafletjs.com/reference-1.6.0.html#divicon\n   *\n   * This component is passed 2 props:\n   * - location: either the from or to location depending on the endpoint\n   * - type: either \"from\" or \"to\"\n   */\n  MapMarkerIcon: PropTypes.elementType,\n  /**\n   * Dispatched when a user clicks on the remember place button in the user\n   * settings. Not needed unless user settings is activated. Dispatched with an\n   * argument in the form of:\n   *\n   * { location: {...location}, type: \"home/work\" }\n   */\n  rememberPlace: PropTypes.func,\n  /**\n   * Dispatched when a location is dragged somewhere else on the map. Dispatched\n   * with an argument in the form of:\n   *\n   * { location: {...location}, reverseGeocode: true, type: \"from/to\" }\n   */\n  setLocation: PropTypes.func.isRequired,\n  /**\n   * Whether or not to show the user settings popup when an endpoint is clicked.\n   */\n  showUserSettings: PropTypes.bool,\n  /**\n   * To to location\n   */\n  toLocation: locationType\n};\n\nconst noop = () => {};\n\nEndpointsOverlay.defaultProps = {\n  clearLocation: noop,\n  forgetPlace: noop,\n  fromLocation: undefined,\n  intermediatePlaces: [],\n  rememberPlace: noop,\n  locations: [],\n  MapMarkerIcon: DefaultMapMarkerIcon,\n  showUserSettings: false,\n  toLocation: undefined\n};\n\nexport default EndpointsOverlay;\n"]}