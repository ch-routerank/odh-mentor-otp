{"version":3,"sources":["time-column-content.js"],"names":["Object","defineProperty","exports","value","default","TimeColumnContent","_time","require","_types","_propTypes","_interopRequireDefault","obj","__esModule","isDestination","leg","timeOptions","time","endTime","startTime","formatTime","propTypes","bool","isRequired","legType","timeOptionsType","defaultProps"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,sCAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uCAAD,CAApB;;AAEA,IAAIE,UAAU,GAAGC,sBAAsB,CAACH,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;;;AACA,SAASN,iBAAT,CAA2B;AACzBQ,EAAAA,aADyB;AAEzBC,EAAAA,GAFyB;AAGzBC,EAAAA;AAHyB,CAA3B,EAIG;AACD,QAAMC,IAAI,GAAGH,aAAa,GAAGC,GAAG,CAACG,OAAP,GAAiBH,GAAG,CAACI,SAA/C;AACA,SAAOF,IAAI,IAAI,CAAC,GAAGV,KAAK,CAACa,UAAV,EAAsBH,IAAtB,EAA4BD,WAA5B,CAAf;AACD;;AAEDV,iBAAiB,CAACe,SAAlB,GAA8B;AAC5B;AACAP,EAAAA,aAAa,EAAEJ,UAAU,CAACL,OAAX,CAAmBiB,IAAnB,CAAwBC,UAFX;;AAI5B;AACAR,EAAAA,GAAG,EAAEN,MAAM,CAACe,OAAP,CAAeD,UALQ;;AAO5B;AACAP,EAAAA,WAAW,EAAEP,MAAM,CAACgB;AARQ,CAA9B;AAUAnB,iBAAiB,CAACoB,YAAlB,GAAiC;AAC/BV,EAAAA,WAAW,EAAE;AADkB,CAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = TimeColumnContent;\n\nvar _time = require(\"@opentripplanner/core-utils/lib/time\");\n\nvar _types = require(\"@opentripplanner/core-utils/lib/types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This is the default component for displaying the time with the specified format\n * of the given leg in the time column of the ItineraryBody -> PlaceRow component.\n */\nfunction TimeColumnContent({\n  isDestination,\n  leg,\n  timeOptions\n}) {\n  const time = isDestination ? leg.endTime : leg.startTime;\n  return time && (0, _time.formatTime)(time, timeOptions);\n}\n\nTimeColumnContent.propTypes = {\n  /** Whether this place row represents the destination */\n  isDestination: _propTypes.default.bool.isRequired,\n\n  /** Contains details about leg object that is being displayed */\n  leg: _types.legType.isRequired,\n\n  /** Contains the preferred format string for time display and a timezone offset */\n  timeOptions: _types.timeOptionsType\n};\nTimeColumnContent.defaultProps = {\n  timeOptions: null\n};"]}