{"version":3,"sources":["ItineraryBody.story.js"],"names":["config","require","bikeOnlyItinerary","bikeRentalItinerary","bikeRentalTransitBikeRentalItinerary","bikeTransitBikeItinerary","eScooterRentalItinerary","eScooterRentalTransiteScooterRentalItinerary","fareComponentsItinerary","parkAndRideItinerary","tncTransitTncItinerary","walkInterlinedTransitItinerary","walkOnlyItinerary","walkTransitWalkItinerary","walkTransitWalkTransitWalkItinerary","ItineraryBodyDefaultsWrapper","Component","constructor","leg","setState","diagramVisible","state","render","itinerary","LegIcon","LineColumnContent","PlaceName","RouteDescription","showAgencyInfo","showLegIcon","showMapButtonColumn","showRouteFares","showViewTripButton","styledItinerary","TimeColumnContent","toRouteAbbreviation","TransitLegSubheader","TransitLegSummary","props","ItineraryBodyComponent","StyledItineraryBody","OtpRRStyledItineraryBody","ItineraryBody","DefaultLineColumnContent","DefaultPlaceName","DefaultRouteDescription","setLegDiagram","DefaultTransitLegSummary","propTypes","itineraryType","isRequired","PropTypes","elementType","bool","string","func","defaultProps","TriMetLegIcon","undefined","r","toString","substr","OtpRRItineraryBodyWrapper","ClassicLegIcon","OtpRRLineColumnContent","OtpRRPlaceName","OtpRRRouteDescription","WrappedOtpRRTransitLegSubheader","module","addDecorator","withA11y","withInfo","add","CustomTransitLegSummary","CustomPlaceName","customToRouteAbbreviation","CustomTimeColumnContent"],"mappings":"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","sourcesContent":["import { itineraryType } from \"@opentripplanner/core-utils/lib/types\";\nimport ClassicLegIcon from \"@opentripplanner/icons/lib/classic-leg-icon\";\nimport TriMetLegIcon from \"@opentripplanner/icons/lib/trimet-leg-icon\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { withA11y } from \"@storybook/addon-a11y\";\nimport { withInfo } from \"@storybook/addon-info\";\nimport { action } from \"@storybook/addon-actions\";\n\nimport ItineraryBody from \".\";\nimport DefaultLineColumnContent from \"./defaults/line-column-content\";\nimport DefaultPlaceName from \"./defaults/place-name\";\nimport DefaultRouteDescription from \"./defaults/route-description\";\nimport DefaultTransitLegSummary from \"./defaults/transit-leg-summary\";\nimport {\n  CustomPlaceName,\n  customToRouteAbbreviation,\n  CustomTimeColumnContent,\n  CustomTransitLegSummary,\n  StyledItineraryBody,\n  WrappedOtpRRTransitLegSubheader\n} from \"./demos\";\nimport OtpRRStyledItineraryBody from \"./otp-react-redux/itinerary-body\";\nimport OtpRRLineColumnContent from \"./otp-react-redux/line-column-content\";\nimport OtpRRPlaceName from \"./otp-react-redux/place-name\";\nimport OtpRRRouteDescription from \"./otp-react-redux/route-description\";\n\nconst config = require(\"./__mocks__/config.json\");\n\n// import mock itinaries. These are all trip plan outputs from OTP.\nconst bikeOnlyItinerary = require(\"./__mocks__/itineraries/bike-only.json\");\nconst bikeRentalItinerary = require(\"./__mocks__/itineraries/bike-rental.json\");\nconst bikeRentalTransitBikeRentalItinerary = require(\"./__mocks__/itineraries/bike-rental-transit-bike-rental.json\");\nconst bikeTransitBikeItinerary = require(\"./__mocks__/itineraries/bike-transit-bike.json\");\nconst eScooterRentalItinerary = require(\"./__mocks__/itineraries/e-scooter-rental.json\");\nconst eScooterRentalTransiteScooterRentalItinerary = require(\"./__mocks__/itineraries/e-scooter-transit-e-scooter.json\");\nconst fareComponentsItinerary = require(\"./__mocks__/itineraries/fare-components.json\");\nconst parkAndRideItinerary = require(\"./__mocks__/itineraries/park-and-ride.json\");\nconst tncTransitTncItinerary = require(\"./__mocks__/itineraries/tnc-transit-tnc.json\");\nconst walkInterlinedTransitItinerary = require(\"./__mocks__/itineraries/walk-interlined-transit-walk.json\");\nconst walkOnlyItinerary = require(\"./__mocks__/itineraries/walk-only.json\");\nconst walkTransitWalkItinerary = require(\"./__mocks__/itineraries/walk-transit-walk.json\");\nconst walkTransitWalkTransitWalkItinerary = require(\"./__mocks__/itineraries/walk-transit-walk-transit-walk.json\");\n\nclass ItineraryBodyDefaultsWrapper extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  setLegDiagram = leg => {\n    this.setState({ diagramVisible: leg });\n  };\n\n  render() {\n    const {\n      itinerary,\n      LegIcon,\n      LineColumnContent,\n      PlaceName,\n      RouteDescription,\n      showAgencyInfo,\n      showLegIcon,\n      showMapButtonColumn,\n      showRouteFares,\n      showViewTripButton,\n      styledItinerary,\n      TimeColumnContent,\n      toRouteAbbreviation,\n      TransitLegSubheader,\n      TransitLegSummary\n    } = this.props;\n    const { diagramVisible } = this.state;\n    let ItineraryBodyComponent;\n    switch (styledItinerary) {\n      case \"pink-legs\":\n        ItineraryBodyComponent = StyledItineraryBody;\n        break;\n      case \"otp-rr\":\n        ItineraryBodyComponent = OtpRRStyledItineraryBody;\n        break;\n      default:\n        ItineraryBodyComponent = ItineraryBody;\n    }\n    return (\n      <ItineraryBodyComponent\n        config={config}\n        diagramVisible={diagramVisible}\n        frameLeg={action(\"frameLeg\")}\n        itinerary={itinerary}\n        LegIcon={LegIcon}\n        LineColumnContent={LineColumnContent || DefaultLineColumnContent}\n        PlaceName={PlaceName || DefaultPlaceName}\n        RouteDescription={RouteDescription || DefaultRouteDescription}\n        routingType=\"ITINERARY\"\n        setActiveLeg={action(\"setActiveLeg\")}\n        setLegDiagram={this.setLegDiagram}\n        setViewedTrip={action(\"setViewedTrip\")}\n        showAgencyInfo={showAgencyInfo}\n        showElevationProfile\n        showLegIcon={showLegIcon}\n        showMapButtonColumn={showMapButtonColumn}\n        showRouteFares={showRouteFares}\n        showViewTripButton={showViewTripButton}\n        TimeColumnContent={TimeColumnContent}\n        toRouteAbbreviation={toRouteAbbreviation}\n        TransitLegSubheader={TransitLegSubheader}\n        TransitLegSummary={TransitLegSummary || DefaultTransitLegSummary}\n      />\n    );\n  }\n}\n\nItineraryBodyDefaultsWrapper.propTypes = {\n  itinerary: itineraryType.isRequired,\n  LegIcon: PropTypes.elementType,\n  LineColumnContent: PropTypes.elementType,\n  PlaceName: PropTypes.elementType,\n  RouteDescription: PropTypes.elementType,\n  showAgencyInfo: PropTypes.bool,\n  showLegIcon: PropTypes.bool,\n  showMapButtonColumn: PropTypes.bool,\n  showRouteFares: PropTypes.bool,\n  showViewTripButton: PropTypes.bool,\n  styledItinerary: PropTypes.string,\n  TimeColumnContent: PropTypes.elementType,\n  toRouteAbbreviation: PropTypes.func,\n  TransitLegSubheader: PropTypes.elementType,\n  TransitLegSummary: PropTypes.elementType\n};\n\nItineraryBodyDefaultsWrapper.defaultProps = {\n  LegIcon: TriMetLegIcon,\n  LineColumnContent: undefined,\n  PlaceName: undefined,\n  RouteDescription: undefined,\n  showAgencyInfo: false,\n  showLegIcon: false,\n  showMapButtonColumn: true,\n  showRouteFares: false,\n  showViewTripButton: false,\n  styledItinerary: null,\n  TimeColumnContent: undefined,\n  toRouteAbbreviation: r => r.toString().substr(0, 2),\n  TransitLegSubheader: undefined,\n  TransitLegSummary: undefined\n};\n\nfunction OtpRRItineraryBodyWrapper({\n  itinerary,\n  showRouteFares,\n  TimeColumnContent\n}) {\n  return (\n    <ItineraryBodyDefaultsWrapper\n      itinerary={itinerary}\n      LegIcon={ClassicLegIcon}\n      LineColumnContent={OtpRRLineColumnContent}\n      PlaceName={OtpRRPlaceName}\n      RouteDescription={OtpRRRouteDescription}\n      showAgencyInfo\n      showLegIcon\n      showMapButtonColumn={false}\n      showRouteFares={showRouteFares}\n      showViewTripButton\n      styledItinerary=\"otp-rr\"\n      TimeColumnContent={TimeColumnContent}\n      TransitLegSubheader={WrappedOtpRRTransitLegSubheader}\n    />\n  );\n}\n\nOtpRRItineraryBodyWrapper.propTypes = {\n  itinerary: itineraryType.isRequired,\n  showRouteFares: PropTypes.bool,\n  TimeColumnContent: PropTypes.elementType\n};\nOtpRRItineraryBodyWrapper.defaultProps = {\n  showRouteFares: undefined,\n  TimeColumnContent: undefined\n};\n\nstoriesOf(\"ItineraryBody\", module)\n  .addDecorator(withA11y)\n  .addDecorator(withInfo)\n  .add(\"ItineraryBody with walk-only itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={walkOnlyItinerary} />\n  ))\n  .add(\"ItineraryBody with bike-only itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={bikeOnlyItinerary} />\n  ))\n  .add(\"ItineraryBody with walk-transit-walk itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={walkTransitWalkItinerary} />\n  ))\n  .add(\"Styled ItineraryBody with walk-transit-walk itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper\n      itinerary={walkTransitWalkItinerary}\n      styledItinerary=\"pink-legs\"\n    />\n  ))\n  .add(\n    \"ItineraryBody with walk-transit-walk itinerary with agency information\",\n    () => (\n      <ItineraryBodyDefaultsWrapper\n        itinerary={walkTransitWalkItinerary}\n        showAgencyInfo\n      />\n    )\n  )\n  .add(\n    \"ItineraryBody with walk-transit-walk itinerary with custom transit leg summary component\",\n    () => (\n      <ItineraryBodyDefaultsWrapper\n        itinerary={walkTransitWalkItinerary}\n        TransitLegSummary={CustomTransitLegSummary}\n      />\n    )\n  )\n  .add(\n    \"ItineraryBody with walk-transit-walk itinerary with custom place name component\",\n    () => (\n      <ItineraryBodyDefaultsWrapper\n        itinerary={walkTransitWalkItinerary}\n        PlaceName={CustomPlaceName}\n      />\n    )\n  )\n  .add(\n    \"ItineraryBody with walk-transit-walk itinerary with custom view trip button activated and custom route abbreviation\",\n    () => (\n      <ItineraryBodyDefaultsWrapper\n        itinerary={walkTransitWalkItinerary}\n        showViewTripButton\n        toRouteAbbreviation={customToRouteAbbreviation}\n      />\n    )\n  )\n  .add(\"ItineraryBody with bike-transit-bike itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={bikeTransitBikeItinerary} />\n  ))\n  .add(\"ItineraryBody with walk-interlined-transit itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={walkInterlinedTransitItinerary} />\n  ))\n  .add(\"ItineraryBody with walk-transit-transfer itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper\n      itinerary={walkTransitWalkTransitWalkItinerary}\n    />\n  ))\n  .add(\"ItineraryBody with bike-rental itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={bikeRentalItinerary} />\n  ))\n  .add(\"ItineraryBody with E-scooter-rental itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={eScooterRentalItinerary} />\n  ))\n  .add(\"ItineraryBody with park and ride itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={parkAndRideItinerary} />\n  ))\n  .add(\"ItineraryBody with bike rental + transit itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper\n      itinerary={bikeRentalTransitBikeRentalItinerary}\n    />\n  ))\n  .add(\"ItineraryBody with E-scooter rental + transit itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper\n      itinerary={eScooterRentalTransiteScooterRentalItinerary}\n    />\n  ))\n  .add(\"ItineraryBody with TNC + transit itinerary\", () => (\n    <ItineraryBodyDefaultsWrapper itinerary={tncTransitTncItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with walk-only itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={walkOnlyItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with bike-only itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={bikeOnlyItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with walk-transit-walk itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={walkTransitWalkItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with bike-transit-bike itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={bikeTransitBikeItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with walk-interlined-transit itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={walkInterlinedTransitItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with walk-transit-transfer itinerary\", () => (\n    <OtpRRItineraryBodyWrapper\n      itinerary={walkTransitWalkTransitWalkItinerary}\n    />\n  ))\n  .add(\"otp-rr ItineraryBody with bike-rental itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={bikeRentalItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with E-scooter-rental itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={eScooterRentalItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with park and ride itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={parkAndRideItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with bike rental + transit itinerary\", () => (\n    <OtpRRItineraryBodyWrapper\n      itinerary={bikeRentalTransitBikeRentalItinerary}\n    />\n  ))\n  .add(\"otp-rr ItineraryBody with E-scooter rental + transit itinerary\", () => (\n    <OtpRRItineraryBodyWrapper\n      itinerary={eScooterRentalTransiteScooterRentalItinerary}\n    />\n  ))\n  .add(\"otp-rr ItineraryBody with TNC + transit itinerary\", () => (\n    <OtpRRItineraryBodyWrapper itinerary={tncTransitTncItinerary} />\n  ))\n  .add(\"otp-rr ItineraryBody with Individual Leg Fare Components\", () => (\n    <OtpRRItineraryBodyWrapper\n      itinerary={fareComponentsItinerary}\n      showRouteFares\n    />\n  ))\n  .add(\"otp-rr ItineraryBody and custom TimeColumnContent\", () => (\n    <OtpRRItineraryBodyWrapper\n      itinerary={tncTransitTncItinerary}\n      TimeColumnContent={CustomTimeColumnContent}\n    />\n  ));\n"]}