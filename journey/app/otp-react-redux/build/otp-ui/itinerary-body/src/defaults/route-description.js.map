{"version":3,"sources":["route-description.js"],"names":["RouteDescription","leg","headsign","routeLongName","routeShortName","propTypes","legType","isRequired"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEe,SAASA,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAmC;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,MAA8CH,GAApD;AACA,sBACE,6BAAC,MAAD,CAAQ,wBAAR,QACGG,cAAc,iBACb,uDACE,6BAAC,MAAD,CAAQ,4BAAR,QACGA,cADH,CADF,CAFJ,eAQE,6BAAC,MAAD,CAAQ,2BAAR,QACGD,aADH,EAEGD,QAAQ,iBACP,wDACE,6BAAC,MAAD,CAAQ,4BAAR,QACG,UADH,CADF,EAIGA,QAJH,CAHJ,CARF,CADF;AAsBD;;AAEDF,gBAAgB,CAACK,SAAjB,GAA6B;AAC3BJ,EAAAA,GAAG,EAAEK,eAAQC;AADc,CAA7B","sourcesContent":["import { legType } from \"@opentripplanner/core-utils/lib/types\";\nimport React from \"react\";\n\nimport * as Styled from \"../styled\";\n\nexport default function RouteDescription({ leg }) {\n  const { headsign, routeLongName, routeShortName } = leg;\n  return (\n    <Styled.LegDescriptionForTransit>\n      {routeShortName && (\n        <div>\n          <Styled.LegDescriptionRouteShortName>\n            {routeShortName}\n          </Styled.LegDescriptionRouteShortName>\n        </div>\n      )}\n      <Styled.LegDescriptionRouteLongName>\n        {routeLongName}\n        {headsign && (\n          <span>\n            <Styled.LegDescriptionHeadsignPrefix>\n              {\" $_to_$ \"}\n            </Styled.LegDescriptionHeadsignPrefix>\n            {headsign}\n          </span>\n        )}\n      </Styled.LegDescriptionRouteLongName>\n    </Styled.LegDescriptionForTransit>\n  );\n}\n\nRouteDescription.propTypes = {\n  leg: legType.isRequired\n};\n"]}