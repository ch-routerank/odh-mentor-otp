{"version":3,"sources":["place-name.js"],"names":["PlaceName","config","interline","place","name","companies","propTypes","configType","isRequired","PropTypes","bool","placeType","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAAnB,EAAiD;AAC9D,sBACE,4DACGD,SAAS,gBACR,8FACmB,wCAAIC,KAAK,CAACC,IAAV,CADnB,CADQ,gBAKR,4DAAG,6BAAaD,KAAb,EAAoBF,MAAM,CAACI,SAA3B,CAAH,CANJ,CADF;AAWD;;AAEDL,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,MAAM,EAAEM,kBAAWC,UADC;AAEpBN,EAAAA,SAAS,EAAEO,mBAAUC,IAFD;AAGpBP,EAAAA,KAAK,EAAEQ,iBAAUH;AAHG,CAAtB;AAMAR,SAAS,CAACY,YAAV,GAAyB;AACvBV,EAAAA,SAAS,EAAE;AADY,CAAzB","sourcesContent":["import { configType, placeType } from \"../../../core-utils/src/types\";\nimport { getPlaceName } from \"../../../core-utils/src/itinerary\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default function PlaceName({ config, interline, place }) {\n  return (\n    <>\n      {interline ? (\n        <>\n          Stay on Board at <b>{place.name}</b>\n        </>\n      ) : (\n        <>{getPlaceName(place, config.companies)}</>\n      )}\n    </>\n  );\n}\n\nPlaceName.propTypes = {\n  config: configType.isRequired,\n  interline: PropTypes.bool,\n  place: placeType.isRequired\n};\n\nPlaceName.defaultProps = {\n  interline: false\n};\n"]}