{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","_map","require","_types","_geocoder","_interopRequireDefault","_locationIcon","_propTypes","_react","_interopRequireWildcard","_reactDom","_faSolid","_throttleDebounce","_options","Styled","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","optionKey","DefaultLocationIcon","locationType","createElement","size","type","propTypes","string","isRequired","LocationField","Component","constructor","props","debounce","text","console","warn","geocoderConfig","autocomplete","then","result","setState","geocodedFeatures","features","catch","err","error","hideExistingValue","location","name","currentPosition","getCurrentPosition","onLocationSelected","currentPositionToLocation","resultType","menuVisible","window","alert","host","message","clearLocation","findDOMNode","inputRef","focus","onTextInputClick","state","e","target","relatedTarget","document","activeElement","getAttribute","getValueFromLocation","evt","geocodeAutocomplete","findNearbyStops","nearbyStops","length","coords","lat","latitude","lon","longitude","max","maxNearbyStops","activeIndex","preventDefault","menuItemCount","locationSelected","locationSelectedLookup","geocodeSearch","componentDidUpdate","prevProps","getFormControlClassname","setLocation","search","render","addLocationSearch","autoFocus","className","currentPositionIcon","currentPositionUnavailableIcon","GeocodedOptionIconComponent","inputPlaceholder","LocationIconComponent","sessionOptionIcon","showClearButton","showUserSettings","static","isStatic","stopOptionIcon","stopsIndex","suppressNearby","userLocationsAndRecentPlaces","UserLocationIconComponent","maxGeocoderResults","parseInt","maxResults","slice","sessionSearches","menuItems","itemIndex","concat","map","feature","getLocationFromGeocodedFeature","geocodedLocation","option","Option","icon","title","properties","label","onClick","isActive","push","MenuItem","header","stopId","stop","stopLocation","id","TransitStopOption","sessionLocation","userLocation","formatStoredPlaceName","optionIcon","optionTitle","positionUnavailable","useCurrentLocation","geolocationAlert","currentLocationOption","disabled","defaultPlaceholder","placeholder","fetching","textControl","Input","ref","onChange","onTextInputChange","onKeyDown","clearButton","InputGroupAddon","Button","onClearButtonClick","Times","FormGroup","InputGroup","StaticMenuItemList","centeredText","onBlur","onBlurFormGroup","Dropdown","open","onToggle","onDropdownToggle","func","bool","shape","number","node","elementType","baseUrl","boundary","rect","minLon","maxLon","minLat","maxLat","arrayOf","objectOf","transitIndexStopWithRoutes","userLocationType","defaultProps","LocationArrow","Ban","GeocodedOptionIcon","Search","Bus","UserLocationIcon","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = require(\"@opentripplanner/core-utils/lib/map\");\n\nvar _types = require(\"@opentripplanner/core-utils/lib/types\");\n\nvar _geocoder = _interopRequireDefault(require(\"../otp-ui/geocoder/src\"));\n\nvar _locationIcon = _interopRequireDefault(require(\"@opentripplanner/location-icon\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _faSolid = require(\"styled-icons/fa-solid\");\n\nvar _throttleDebounce = require(\"throttle-debounce\");\n\nvar _options = require(\"./options\");\n\nvar Styled = _interopRequireWildcard(require(\"./styled\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// FIXME have a better key generator for options\nlet optionKey = 0;\n\nfunction DefaultLocationIcon({\n  locationType\n}) {\n  return /*#__PURE__*/_react.default.createElement(_locationIcon.default, {\n    size: 13,\n    type: locationType\n  });\n}\n\nDefaultLocationIcon.propTypes = {\n  locationType: _propTypes.default.string.isRequired\n};\n\nclass LocationField extends _react.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"geocodeAutocomplete\", (0, _throttleDebounce.debounce)(800, text => {\n      if (!text) {\n        console.warn(\"No text entry provided for geocode autocomplete search.\");\n        return;\n      }\n\n      const {\n        geocoderConfig\n      } = this.props;\n      (0, _geocoder.default)(geocoderConfig).autocomplete({\n        text\n      }).then(result => {\n        this.setState({\n          geocodedFeatures: result.features\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }));\n\n    _defineProperty(this, \"getValueFromLocation\", () => {\n      const {\n        hideExistingValue,\n        location\n      } = this.props;\n      return location && !hideExistingValue ? location.name : \"\";\n    });\n\n    _defineProperty(this, \"useCurrentLocation\", () => {\n      const {\n        currentPosition,\n        getCurrentPosition,\n        onLocationSelected,\n        locationType\n      } = this.props;\n      const location = (0, _map.currentPositionToLocation)(currentPosition);\n\n      if (location) {\n        // If geolocation is successful (i.e., user has granted app geolocation\n        // permission and coords exist), set location.\n        onLocationSelected({\n          locationType,\n          location,\n          resultType: \"CURRENT_LOCATION\"\n        });\n      } else {\n        // Call geolocation.getCurrentPosition and set as from/to locationType\n        getCurrentPosition(locationType);\n      }\n\n      this.setState({\n        menuVisible: false\n      });\n    });\n\n    _defineProperty(this, \"geolocationAlert\", () => {\n      const {\n        currentPosition\n      } = this.props;\n      window.alert(`Geolocation either has been disabled for ${window.location.host} or is not available in your browser.\\n\\nReason: ${currentPosition.error.message || \"Unknown reason\"}`);\n    });\n\n    _defineProperty(this, \"onClearButtonClick\", () => {\n      const {\n        clearLocation,\n        locationType\n      } = this.props;\n      clearLocation({\n        locationType\n      });\n      this.setState({\n        value: \"\",\n        geocodedFeatures: []\n      });\n      /* eslint-disable-next-line */\n\n      _reactDom.default.findDOMNode(this.inputRef).focus();\n\n      this.onTextInputClick();\n    });\n\n    _defineProperty(this, \"onDropdownToggle\", () => {\n      const {\n        menuVisible\n      } = this.state;\n      this.setState({\n        menuVisible: !menuVisible\n      });\n    });\n\n    _defineProperty(this, \"onBlurFormGroup\", e => {\n      // IE does not use relatedTarget, so this check handles cross-browser support.\n      // see https://stackoverflow.com/a/49325196/915811\n      const target = e.relatedTarget !== null ? e.relatedTarget : document.activeElement;\n\n      if (!target || target.getAttribute(\"role\") !== \"menuitem\") {\n        this.setState({\n          geocodedFeatures: [],\n          menuVisible: false,\n          value: this.getValueFromLocation()\n        });\n      }\n    });\n\n    _defineProperty(this, \"onTextInputChange\", evt => {\n      this.setState({\n        value: evt.target.value,\n        menuVisible: true\n      });\n      this.geocodeAutocomplete(evt.target.value);\n    });\n\n    _defineProperty(this, \"onTextInputClick\", () => {\n      const {\n        currentPosition,\n        findNearbyStops,\n        geocoderConfig,\n        nearbyStops,\n        onTextInputClick\n      } = this.props;\n      if (typeof onTextInputClick === \"function\") onTextInputClick();\n      this.setState({\n        menuVisible: true\n      });\n\n      if (nearbyStops.length === 0 && currentPosition && currentPosition.coords) {\n        findNearbyStops({\n          lat: currentPosition.coords.latitude,\n          lon: currentPosition.coords.longitude,\n          max: geocoderConfig.maxNearbyStops || 4\n        });\n      }\n    });\n\n    _defineProperty(this, \"onKeyDown\", evt => {\n      const {\n        activeIndex,\n        menuVisible\n      } = this.state;\n\n      switch (evt.key) {\n        // 'Down' arrow key pressed: move selected menu item down by one position\n        case \"ArrowDown\":\n          // Suppress default 'ArrowDown' behavior which moves cursor to end\n          evt.preventDefault();\n\n          if (!menuVisible) {\n            // If the menu is not visible, simulate a text input click to show it.\n            this.onTextInputClick();\n          } else if (activeIndex === this.menuItemCount - 1) {\n            this.setState({\n              activeIndex: null\n            });\n          } else {\n            this.setState({\n              activeIndex: activeIndex === null ? 0 : activeIndex + 1\n            });\n          }\n\n          break;\n        // 'Up' arrow key pressed: move selection up by one position\n\n        case \"ArrowUp\":\n          // Suppress default 'ArrowUp' behavior which moves cursor to beginning\n          evt.preventDefault();\n\n          if (activeIndex === 0) {\n            this.setState({\n              activeIndex: null\n            });\n          } else {\n            this.setState({\n              activeIndex: activeIndex === null ? this.menuItemCount - 1 : activeIndex - 1\n            });\n          }\n\n          break;\n        // 'Enter' keypress serves two purposes:\n        //  - If pressed when typing in search string, switch from 'autocomplete'\n        //    to 'search' geocoding\n        //  - If pressed when dropdown results menu is active, apply the location\n        //    associated with current selected menu item\n\n        case \"Enter\":\n          if (typeof activeIndex === \"number\") {\n            // Menu is active\n            // Retrieve location selection handler from lookup object and invoke\n            const locationSelected = this.locationSelectedLookup[activeIndex];\n            if (locationSelected) locationSelected(); // Clear selection & hide the menu\n\n            this.setState({\n              menuVisible: false,\n              activeIndex: null\n            });\n          } else {\n            // Menu not active; get geocode 'search' results\n            this.geocodeSearch(evt.target.value); // Ensure menu is visible.\n\n            this.setState({\n              menuVisible: true\n            });\n          } // Suppress default 'Enter' behavior which causes page to reload\n\n\n          evt.preventDefault();\n          break;\n\n        case \"Escape\":\n        case \"Tab\":\n          // Clear selection & hide the menu\n          this.setState({\n            menuVisible: false,\n            activeIndex: null\n          });\n          break;\n        // Any other key pressed: clear active selection\n\n        default:\n          this.setState({\n            activeIndex: null\n          });\n          break;\n      }\n    });\n\n    this.state = {\n      value: this.getValueFromLocation(),\n      menuVisible: false,\n      geocodedFeatures: [],\n      activeIndex: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If location is updated externally, replace value and geocoded features\n    // in internal state.\n    // TODO: This might be considered an anti-pattern. There may be a more\n    // effective way to handle this.\n    const {\n      location\n    } = this.props;\n\n    if (location !== prevProps.location) {\n      /* FIXME only disabled this because it'd take longer to refactor */\n\n      /* eslint-disable-next-line */\n      this.setState({\n        value: location !== null ? location.name : \"\",\n        geocodedFeatures: []\n      });\n    }\n  }\n\n  getFormControlClassname() {\n    const {\n      locationType\n    } = this.props;\n    return `${locationType}-form-control`;\n  }\n  /**\n   * Gets the initial value to place in the input field.\n   */\n\n\n  setLocation(location, resultType) {\n    const {\n      onLocationSelected,\n      locationType\n    } = this.props;\n    onLocationSelected({\n      locationType,\n      location,\n      resultType\n    });\n    this.setState({\n      menuVisible: false\n    });\n  }\n\n  geocodeSearch(text) {\n    const {\n      geocoderConfig\n    } = this.props;\n\n    if (!text) {\n      console.warn(\"No text entry provided for geocode search.\");\n      return;\n    }\n\n    (0, _geocoder.default)(geocoderConfig).search({\n      text\n    }).then(result => {\n      if (result.features && result.features.length > 0) {\n        // Only replace geocode items if results were found\n        this.setState({\n          geocodedFeatures: result.features\n        });\n      } else {\n        console.warn(\"No results found for geocode search. Not replacing results.\");\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    const {\n      addLocationSearch,\n      autoFocus,\n      className,\n      currentPosition,\n      currentPositionIcon,\n      currentPositionUnavailableIcon,\n      GeocodedOptionIconComponent,\n      geocoderConfig,\n      inputPlaceholder,\n      location,\n      LocationIconComponent,\n      locationType,\n      sessionOptionIcon,\n      showClearButton,\n      showUserSettings,\n      static: isStatic,\n      stopOptionIcon,\n      stopsIndex,\n      suppressNearby,\n      userLocationsAndRecentPlaces,\n      UserLocationIconComponent,\n      nearbyStops\n    } = this.props;\n    const {\n      menuVisible,\n      value\n    } = this.state;\n    const {\n      activeIndex\n    } = this.state;\n    let {\n      geocodedFeatures\n    } = this.state;\n\n    const maxGeocoderResults = parseInt(geocoderConfig.maxResults) || 30;\n\n    //console.log('GEOCODER ff',geocoderConfig)\n\n    if (geocodedFeatures.length > maxGeocoderResults)\n      geocodedFeatures = geocodedFeatures.slice(0, maxGeocoderResults);\n    let {\n      sessionSearches\n    } = this.props;\n    if (sessionSearches.length > maxGeocoderResults)\n      sessionSearches = sessionSearches.slice(0, maxGeocoderResults);\n    // Assemble menu contents, to be displayed either as dropdown or static panel.\n    // Menu items are created in four phases: (1) the current location, (2) any\n    // geocoder search results; (3) nearby transit stops; and (4) saved searches\n\n    let menuItems = []; // array of menu items for display (may include non-selectable items e.g. dividers/headings)\n\n    let itemIndex = 0; // the index of the current location-associated menu item (excluding non-selectable items)\n\n    this.locationSelectedLookup = {}; // maps itemIndex to a location selection handler (for use by the onKeyDown method)\n\n    /* 1) Process geocode search result option(s) */\n\n    if (geocodedFeatures.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      // menuItems.push(<MenuItem header key='sr-header'>Search Results</MenuItem>)\n      // Iterate through the geocoder results\n      menuItems = menuItems.concat(geocodedFeatures.map(feature => {\n        // Create the selection handler\n        const locationSelected = () => {\n          (0, _geocoder.default)(geocoderConfig).getLocationFromGeocodedFeature(feature).then(geocodedLocation => {\n            // Set the current location\n            this.setLocation(geocodedLocation, \"GEOCODE\"); // Add to the location search history. This is intended to\n            // populate the sessionSearches array.\n\n            addLocationSearch({\n              location: geocodedLocation\n            });\n          });\n        }; // Add to the selection handler lookup (for use in onKeyDown)\n\n\n        this.locationSelectedLookup[itemIndex] = locationSelected; // Create and return the option menu item\n\n        const option = /*#__PURE__*/_react.default.createElement(_options.Option, {\n          icon: /*#__PURE__*/_react.default.createElement(GeocodedOptionIconComponent, {\n            feature: feature\n          }),\n          key: optionKey++,\n          title: feature.properties.label,\n          onClick: locationSelected,\n          isActive: itemIndex === activeIndex\n        });\n\n        itemIndex++;\n        return option;\n      }));\n    }\n    /* 2) Process nearby transit stop options */\n\n\n    if (nearbyStops.length > 0 && !suppressNearby) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push( /*#__PURE__*/_react.default.createElement(Styled.MenuItem, {\n        header: true,\n        key: \"ns-header\"\n      }, \"Nearby Stops\")); // Iterate through the found nearby stops\n\n      menuItems = menuItems.concat(nearbyStops.map(stopId => {\n        // Constuct the location\n        const stop = stopsIndex[stopId];\n        const stopLocation = {\n          id: stopId,\n          lat: stop.lat,\n          lon: stop.lon,\n          name: stop.name\n        }; // Create the location selected handler\n\n        const locationSelected = () => {\n          this.setLocation(stopLocation, \"STOP\");\n        }; // Add to the selection handler lookup (for use in onKeyDown)\n\n\n        this.locationSelectedLookup[itemIndex] = locationSelected; // Create and return the option menu item\n\n        const option = /*#__PURE__*/_react.default.createElement(_options.TransitStopOption, {\n          isActive: itemIndex === activeIndex,\n          key: optionKey++,\n          onClick: locationSelected,\n          stop: stop,\n          stopOptionIcon: stopOptionIcon\n        });\n\n        itemIndex++;\n        return option;\n      }));\n    }\n    /* 3) Process recent search history options */\n\n\n    if (sessionSearches.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push( /*#__PURE__*/_react.default.createElement(Styled.MenuItem, {\n        header: true,\n        key: \"ss-header\"\n      }, \"Recently Searched\")); // Iterate through any saved locations\n\n      menuItems = menuItems.concat(sessionSearches.map(sessionLocation => {\n        // Create the location-selected handler\n        const locationSelected = () => {\n          this.setLocation(sessionLocation, \"SESSION\");\n        }; // Add to the selection handler lookup (for use in onKeyDown)\n\n\n        this.locationSelectedLookup[itemIndex] = locationSelected; // Create and return the option menu item\n\n        const option = /*#__PURE__*/_react.default.createElement(_options.Option, {\n          icon: sessionOptionIcon,\n          key: optionKey++,\n          title: sessionLocation.name,\n          onClick: locationSelected,\n          isActive: itemIndex === activeIndex\n        });\n\n        itemIndex++;\n        return option;\n      }));\n    }\n    /* 3b) Process stored user locations */\n\n\n    if (userLocationsAndRecentPlaces.length > 0 && showUserSettings) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push( /*#__PURE__*/_react.default.createElement(Styled.MenuItem, {\n        header: true,\n        key: \"mp-header\"\n      }, \"My Places\")); // Iterate through any saved locations\n\n      menuItems = menuItems.concat(userLocationsAndRecentPlaces.map(userLocation => {\n        // Create the location-selected handler\n        const locationSelected = () => {\n          this.setLocation(userLocation, \"SAVED\");\n        }; // Add to the selection handler lookup (for use in onKeyDown)\n\n\n        this.locationSelectedLookup[itemIndex] = locationSelected; // Create and return the option menu item\n\n        const option = /*#__PURE__*/_react.default.createElement(_options.Option, {\n          icon: /*#__PURE__*/_react.default.createElement(UserLocationIconComponent, {\n            userLocation: userLocation\n          }),\n          key: optionKey++,\n          title: (0, _map.formatStoredPlaceName)(userLocation),\n          onClick: locationSelected,\n          isActive: itemIndex === activeIndex\n        });\n\n        itemIndex++;\n        return option;\n      }));\n    }\n    /* 4) Process the current location */\n\n\n    let locationSelected;\n    let optionIcon;\n    let optionTitle;\n    let positionUnavailable;\n\n    if (currentPosition && !currentPosition.error) {\n      // current position detected successfully\n      locationSelected = this.useCurrentLocation;\n      optionIcon = currentPositionIcon;\n      optionTitle = \"$_use_current_position_$\";\n      positionUnavailable = false;\n    } else {\n      // error detecting current position\n      locationSelected = this.geolocationAlert;\n      optionIcon = currentPositionUnavailableIcon;\n      optionTitle = \"Current location not available\";\n      positionUnavailable = true;\n    } // Add to the selection handler lookup (for use in onKeyDown)\n\n\n    this.locationSelectedLookup[itemIndex] = locationSelected;\n\n    if (!suppressNearby) {\n      // Create and add the option item to the menu items array\n      const currentLocationOption = /*#__PURE__*/_react.default.createElement(_options.Option, {\n        icon: optionIcon,\n        key: optionKey++,\n        title: optionTitle,\n        onClick: locationSelected,\n        isActive: itemIndex === activeIndex,\n        disabled: positionUnavailable\n      });\n\n      menuItems.push(currentLocationOption);\n      itemIndex++;\n    } // Store the number of location-associated items for reference in the onKeyDown method\n\n\n    this.menuItemCount = itemIndex;\n    /** the text input element * */\n    // Use this text for aria-label below.\n\n    const defaultPlaceholder = inputPlaceholder || locationType;\n    const placeholder = currentPosition && currentPosition.fetching ? \"Fetching location...\" : defaultPlaceholder;\n\n    const textControl = /*#__PURE__*/_react.default.createElement(Styled.Input, {\n      ref: ref => {\n        this.inputRef = ref;\n      },\n      \"aria-label\": defaultPlaceholder,\n      autoFocus: autoFocus,\n      className: this.getFormControlClassname(),\n      value: value,\n      placeholder: placeholder,\n      onChange: this.onTextInputChange,\n      onClick: this.onTextInputClick,\n      onKeyDown: this.onKeyDown\n    }); // Only include the clear ('X') button add-on if a location is selected\n    // or if the input field has text.\n\n\n    const clearButton = showClearButton && location ? /*#__PURE__*/_react.default.createElement(Styled.InputGroupAddon, null, /*#__PURE__*/_react.default.createElement(Styled.Button, {\n      \"aria-label\": \"Clear location\",\n      onClick: this.onClearButtonClick\n    }, /*#__PURE__*/_react.default.createElement(_faSolid.Times, {\n      size: 13\n    }))) : null;\n\n    if (isStatic) {\n      // 'static' mode (menu is displayed alongside input, e.g., for mobile view)\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: className\n      }, /*#__PURE__*/_react.default.createElement(Styled.FormGroup, null, /*#__PURE__*/_react.default.createElement(Styled.InputGroup, null, /*#__PURE__*/_react.default.createElement(Styled.InputGroupAddon, null, /*#__PURE__*/_react.default.createElement(LocationIconComponent, {\n        locationType: locationType\n      })), textControl, clearButton)), /*#__PURE__*/_react.default.createElement(Styled.StaticMenuItemList, null, menuItems.length > 0 ? // Show typing prompt to avoid empty screen\n      menuItems : /*#__PURE__*/_react.default.createElement(Styled.MenuItem, {\n        header: true,\n        centeredText: true\n      }, \"Begin typing to search for locations\")));\n    } // default display mode with dropdown menu\n\n\n    return /*#__PURE__*/_react.default.createElement(Styled.FormGroup, {\n      onBlur: this.onBlurFormGroup,\n      className: className\n    }, /*#__PURE__*/_react.default.createElement(Styled.InputGroup, null, /*#__PURE__*/_react.default.createElement(Styled.Dropdown, {\n      locationType: locationType,\n      open: menuVisible,\n      onToggle: this.onDropdownToggle,\n      title: /*#__PURE__*/_react.default.createElement(LocationIconComponent, {\n        locationType: locationType\n      })\n    }, menuItems), textControl, clearButton));\n  }\n\n}\n\nLocationField.propTypes = {\n  /**\n   * Dispatched upon selecting a geocoded result\n   * Provides an argument in the format:\n   *\n   * ```js\n   * { location: geocodedLocation }\n   * ```\n   */\n  addLocationSearch: _propTypes.default.func,\n\n  /**\n   * Determines whether the input field of this component should auto-focus on first display.\n   */\n  autoFocus: _propTypes.default.bool,\n\n  /**\n   * Used for additional styling with styled components for example.\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Dispatched whenever the clear location button is clicked.\n   * Provides an argument in the format:\n   *\n   * ```js\n   * { locationType: string }\n   * ```\n   */\n  clearLocation: _propTypes.default.func,\n\n  /**\n   * The current position of the user if it is available.\n   */\n  currentPosition: _propTypes.default.shape({\n    coords: _propTypes.default.shape({\n      latitude: _propTypes.default.number,\n      longitude: _propTypes.default.number\n    }),\n    error: _propTypes.default.string,\n    fetching: _propTypes.default.bool\n  }),\n\n  /**\n   * A slot for the icon to display for the current position\n   */\n  currentPositionIcon: _propTypes.default.node,\n\n  /**\n   * A slot for the icon to display for when the current position is unavailable\n   */\n  currentPositionUnavailableIcon: _propTypes.default.node,\n\n  /**\n   * Invoked whenever the currentPosition is set, but the nearbyStops are not.\n   * Sends the following argument:\n   *\n   * ```js\n   * {\n   *   lat: currentPosition.coords.latitude,\n   *   lon: currentPosition.coords.longitude,\n   *   max: geocoderConfig.maxNearbyStops || 4\n   * }\n   * ```\n   */\n  findNearbyStops: _propTypes.default.func,\n\n  /**\n   * A slot for a compnent that can be used to display a custom icon for a\n   * geocoded option. This component is passed a single property called\n   * `feature` which will be in the geocodedFeatureType shape.\n   */\n  GeocodedOptionIconComponent: _propTypes.default.elementType,\n\n  /**\n   * A configuration object describing what geocoder should be used.\n   */\n  geocoderConfig: _propTypes.default.shape({\n    baseUrl: _propTypes.default.string,\n    boundary: _propTypes.default.shape({\n      // TriMet-specific default\n      rect: _propTypes.default.shape({\n        minLon: _propTypes.default.number,\n        maxLon: _propTypes.default.number,\n        minLat: _propTypes.default.number,\n        maxLat: _propTypes.default.number\n      })\n    }),\n    maxResults: _propTypes.default.number,\n    maxNearbyStops: _propTypes.default.number,\n    type: _propTypes.default.string.isRequired\n  }).isRequired,\n\n  /**\n   * This is dispatched when the current position is null. This indicates that\n   * the user has requested to use the current position, but that the current\n   * position is not currently available. This method sends back the\n   * locationType value supplied to the component.\n   */\n  getCurrentPosition: _propTypes.default.func.isRequired,\n\n  /**\n   * Whether the provided location (if one is provided) should not be shown upon\n   * initial render.\n   */\n  hideExistingValue: _propTypes.default.bool,\n\n  /**\n   * Placeholder text to show in the input element. If the current position is\n   * set to have a true fetching property, then the text \"Fetching location...\"\n   * will display. If this value isn't provided, the locationType will be shown.\n   */\n  inputPlaceholder: _propTypes.default.string,\n\n  /**\n   * The location that this component is currently set with.\n   */\n  location: _propTypes.default.shape({\n    lat: _propTypes.default.number,\n    lon: _propTypes.default.number,\n    name: _propTypes.default.string\n  }),\n\n  /**\n   * A custom component for rendering the icon displayed to the left of the text\n   * input. This component is passed a single prop of `locationType`.\n   */\n  LocationIconComponent: _propTypes.default.elementType,\n\n  /**\n   * Either `from` or `to`\n   */\n  locationType: _propTypes.default.string.isRequired,\n\n  /**\n   * A list of stopIds of the stops that should be shown as being nearby. These\n   * must be referencable in the stopsIndex prop.\n   */\n  nearbyStops: _propTypes.default.arrayOf(_propTypes.default.string),\n\n  /**\n   * Invoked whenever the text input is clicked or when the clear button is\n   * clicked.\n   */\n  onTextInputClick: _propTypes.default.func,\n\n  /**\n   * A function to handle when a location is selected. This is always dispatched\n   * with an object of the following form:\n   *\n   * ```js\n   * {\n   *  locationType: string,\n   *  location: object,\n   *  resultType: string\n   * }\n   * '''\n   *\n   * The locationType string will be either \"from\" or \"to\" as was set by the\n   * locationType prop for the instance of this component.\n   *\n   * The location object will be an object in the form below:\n   * ```js\n   * {\n   *  id: string, // only populated for stops and user-saved locations\n   *  lat: number,\n   *  lon: number,\n   *  name: string\n   * }\n   *\n   * The resultType string indicates the type of location that was selected.\n   * It can be one of the following:\n   *\n   * \"CURRENT_LOCATION\": The user's current location.\n   * \"GEOCODE\": A location that was found via a geocode search result\n   * \"SAVED\": A location that was saved by the user.\n   * \"SESSION\": A geocoded search result that was recently selected by the user.\n   * \"STOP\": A transit stop\n   */\n  onLocationSelected: _propTypes.default.func.isRequired,\n\n  /**\n   * A slot for the icon to display for an option that was used during the\n   * current session.\n   */\n  sessionOptionIcon: _propTypes.default.node,\n\n  /**\n   * A list of recent searches to show to the user. These are typically only\n   * geocode results that a user has previously selected.\n   */\n  sessionSearches: _propTypes.default.arrayOf(_propTypes.default.shape({\n    lat: _propTypes.default.number.isRequired,\n    lon: _propTypes.default.number.isRequired,\n    name: _propTypes.default.string.isRequired\n  })),\n\n  /**\n   * Whether or not to show the clear button\n   */\n  showClearButton: _propTypes.default.bool,\n\n  /**\n   * Whether or not to show user settings dialog\n   */\n  showUserSettings: _propTypes.default.bool,\n\n  /**\n   * show autocomplete options as fixed/inline element rather than dropdown\n   */\n  static: _propTypes.default.bool,\n\n  /**\n   * An index of stops by StopId\n   */\n  stopsIndex: _propTypes.default.objectOf(_types.transitIndexStopWithRoutes),\n\n  /**\n   * A slot for the icon to display for a stop option\n   */\n  stopOptionIcon: _propTypes.default.node,\n\n  /**\n   * If true, do not show nearbyStops or current location as options\n   */\n  suppressNearby: _propTypes.default.bool,\n\n  /**\n   * An array of recent locations and places a user has searched for.\n   */\n  userLocationsAndRecentPlaces: _propTypes.default.arrayOf(_types.userLocationType),\n\n  /**\n   * A custom component for rendering the icon for options that are either saved\n   * user locations or recent places. The component will be sent a single prop\n   * of `userLocation` which is a userLocationType.\n   */\n  UserLocationIconComponent: _propTypes.default.elementType\n};\nLocationField.defaultProps = {\n  autoFocus: false,\n  addLocationSearch: () => {},\n  className: null,\n  clearLocation: () => {},\n  currentPosition: null,\n  currentPositionIcon: /*#__PURE__*/_react.default.createElement(_faSolid.LocationArrow, {\n    size: 13\n  }),\n  currentPositionUnavailableIcon: /*#__PURE__*/_react.default.createElement(_faSolid.Ban, {\n    size: 13\n  }),\n  findNearbyStops: () => {},\n  GeocodedOptionIconComponent: _options.GeocodedOptionIcon,\n  hideExistingValue: false,\n  inputPlaceholder: null,\n  location: null,\n  LocationIconComponent: DefaultLocationIcon,\n  nearbyStops: [],\n  onTextInputClick: null,\n  sessionOptionIcon: /*#__PURE__*/_react.default.createElement(_faSolid.Search, {\n    size: 13\n  }),\n  sessionSearches: [],\n  showClearButton: true,\n  showUserSettings: false,\n  static: false,\n  stopOptionIcon: /*#__PURE__*/_react.default.createElement(_faSolid.Bus, {\n    size: 13\n  }),\n  stopsIndex: null,\n  suppressNearby: false,\n  userLocationsAndRecentPlaces: [],\n  UserLocationIconComponent: _options.UserLocationIcon\n};\nvar _default = LocationField;\nexports.default = _default;"]}