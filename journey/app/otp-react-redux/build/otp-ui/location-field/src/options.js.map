{"version":3,"sources":["options.js"],"names":["GeocodedOptionIcon","Option","disabled","icon","isActive","onClick","title","propTypes","PropTypes","bool","node","func","isRequired","defaultProps","TransitStopOption","stop","stopOptionIcon","dist","name","code","routes","map","route","shortName","longName","transitIndexStopWithRoutes","UserLocationIcon","userLocation","userLocationType"],"mappings":"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","sourcesContent":["import {\n  transitIndexStopWithRoutes,\n  userLocationType\n} from \"../../core-utils/src/types\";\nimport { isIE } from \"../../core-utils/src/ui\";\nimport { humanizeDistanceStringImperial } from \"../../humanize-distance/src\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Briefcase, Home, MapMarker, MapPin } from \"styled-icons/fa-solid\";\n\nimport * as Styled from \"./styled\";\n\nexport function GeocodedOptionIcon() {\n  return <MapPin size={13} />;\n}\n\nexport function Option({ disabled, icon, isActive, onClick, title }) {\n  return (\n    <Styled.MenuItem onClick={onClick} active={isActive} disabled={disabled}>\n      {isIE() ? (\n        // In internet explorer 11, some really weird stuff is happening where it\n        // is not possible to click the text of the title, but if you click just\n        // above it, then it works. So, if using IE 11, just return the title text\n        // and avoid all the extra fancy stuff.\n        // See https://github.com/ibi-group/trimet-mod-otp/issues/237\n        title\n      ) : (\n        <Styled.OptionContainer>\n          <Styled.OptionIconContainer>{icon}</Styled.OptionIconContainer>\n          <Styled.OptionContent>{title}</Styled.OptionContent>\n        </Styled.OptionContainer>\n      )}\n    </Styled.MenuItem>\n  );\n}\n\nOption.propTypes = {\n  disabled: PropTypes.bool,\n  icon: PropTypes.node,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.node\n};\n\nOption.defaultProps = {\n  disabled: false,\n  icon: null,\n  isActive: false,\n  title: null\n};\n\nexport function TransitStopOption({ isActive, onClick, stop, stopOptionIcon }) {\n  return (\n    <Styled.MenuItem onClick={onClick} active={isActive}>\n      <Styled.StopIconAndDistanceContainer>\n        {stopOptionIcon}\n        <Styled.StopDistance>\n          {humanizeDistanceStringImperial(stop.dist, true)}\n        </Styled.StopDistance>\n      </Styled.StopIconAndDistanceContainer>\n      <Styled.StopContentContainer>\n        <Styled.StopName>\n          {stop.name} ({stop.code})\n        </Styled.StopName>\n        <Styled.StopRoutes>\n          {(stop.routes || []).map(route => {\n            const name = route.shortName || route.longName;\n            return (\n              <Styled.RouteName key={`route-${name}`}>{name}</Styled.RouteName>\n            );\n          })}\n        </Styled.StopRoutes>\n      </Styled.StopContentContainer>\n      <Styled.ClearBoth />\n    </Styled.MenuItem>\n  );\n}\n\nTransitStopOption.propTypes = {\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  stop: transitIndexStopWithRoutes.isRequired,\n  stopOptionIcon: PropTypes.node.isRequired\n};\n\nTransitStopOption.defaultProps = {\n  isActive: false\n};\n\nexport function UserLocationIcon({ userLocation }) {\n  if (userLocation.icon === \"work\") return <Briefcase size={13} />;\n  if (userLocation.icon === \"home\") return <Home size={13} />;\n  return <MapMarker size={13} />;\n}\n\nUserLocationIcon.propTypes = {\n  userLocation: userLocationType.isRequired\n};\n"]}