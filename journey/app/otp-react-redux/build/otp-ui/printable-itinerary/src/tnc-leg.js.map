{"version":3,"sources":["tnc-leg.js"],"names":["TNCLeg","leg","LegIcon","tncData","displayName","to","name","estimatedArrival","duration","propTypes","legType","isRequired","PropTypes","elementType"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEe,SAASA,MAAT,CAAgB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAhB,EAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAcF,GAApB;AACA,MAAI,CAACE,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE,6BAAC,MAAD,CAAQ,GAAR,qBACE,6BAAC,MAAD,CAAQ,QAAR,qBACE,6BAAC,OAAD;AAAS,IAAA,GAAG,EAAEF;AAAd,IADF,CADF,eAIE,6BAAC,MAAD,CAAQ,OAAR,qBACE,6BAAC,MAAD,CAAQ,SAAR,qBACE,iDAASE,OAAO,CAACC,WAAjB,CADF,uBACuC,wCAAIH,GAAG,CAACI,EAAJ,CAAOC,IAAX,CADvC,CADF,eAIE,6BAAC,MAAD,CAAQ,UAAR,qBACE,6BAAC,MAAD,CAAQ,SAAR,2CACkC,GADlC,eAEE,wCAAI,0BAAeH,OAAO,CAACI,gBAAvB,CAAJ,CAFF,CADF,eAKE,6BAAC,MAAD,CAAQ,SAAR,gDACyB,wCAAI,0BAAeN,GAAG,CAACO,QAAnB,CAAJ,CADzB,oCALF,CAJF,CAJF,CADF;AAsBD;;AAEDR,MAAM,CAACS,SAAP,GAAmB;AACjBR,EAAAA,GAAG,EAAES,eAAQC,UADI;AAEjBT,EAAAA,OAAO,EAAEU,mBAAUC,WAAV,CAAsBF;AAFd,CAAnB","sourcesContent":["import { legType } from \"@opentripplanner/core-utils/lib/types\";\nimport { formatDuration } from \"@opentripplanner/core-utils/lib/time\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport * as Styled from \"./styled\";\n\nexport default function TNCLeg({ leg, LegIcon }) {\n  const { tncData } = leg;\n  if (!tncData) return null;\n\n  return (\n    <Styled.Leg>\n      <Styled.ModeIcon>\n        <LegIcon leg={leg} />\n      </Styled.ModeIcon>\n      <Styled.LegBody>\n        <Styled.LegHeader>\n          <b>Take {tncData.displayName}</b> to <b>{leg.to.name}</b>\n        </Styled.LegHeader>\n        <Styled.LegDetails>\n          <Styled.LegDetail>\n            Estimated wait time for pickup:{\" \"}\n            <b>{formatDuration(tncData.estimatedArrival)}</b>\n          </Styled.LegDetail>\n          <Styled.LegDetail>\n            Estimated travel time: <b>{formatDuration(leg.duration)}</b> (does\n            not account for traffic)\n          </Styled.LegDetail>\n        </Styled.LegDetails>\n      </Styled.LegBody>\n    </Styled.Leg>\n  );\n}\n\nTNCLeg.propTypes = {\n  leg: legType.isRequired,\n  LegIcon: PropTypes.elementType.isRequired\n};\n"]}