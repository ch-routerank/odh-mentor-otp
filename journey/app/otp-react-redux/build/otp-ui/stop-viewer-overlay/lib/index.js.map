{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","_types","require","_propTypes","_interopRequireDefault","_react","_reactLeaflet","obj","__esModule","StopViewerOverlay","MapLayer","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","nextStop","props","stop","oldStopId","id","hasNewStopId","leaflet","map","setView","lat","lon","createLeafletElement","updateLeafletElement","render","StopMarker","createElement","FeatureGroup","stopLayerStopType","elementType","isRequired","defaultProps","_default","withLeaflet"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,uCAAD,CAApB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIG,MAAM,GAAGD,sBAAsB,CAACF,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAII,aAAa,GAAGJ,OAAO,CAAC,eAAD,CAA3B;;AAEA,SAASE,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;;;AACA,MAAME,iBAAN,SAAgCH,aAAa,CAACI,QAA9C,CAAuD;AACrDC,EAAAA,iBAAiB,GAAG,CAAE,CAD+B,CAC9B;;;AAGvBC,EAAAA,oBAAoB,GAAG,CAAE;AACzB;AACF;AACA;AACA;AACA;;;AAGEC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAA5B;AACA,UAAMC,SAAS,GAAGJ,SAAS,CAACG,IAAV,IAAkBH,SAAS,CAACG,IAAV,CAAeE,EAAnD;AACA,UAAMC,YAAY,GAAGL,QAAQ,IAAIA,QAAQ,CAACI,EAAT,KAAgBD,SAAjD;AACA,QAAIE,YAAJ,EAAkB,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuBC,OAAvB,CAA+B,CAACR,QAAQ,CAACS,GAAV,EAAeT,QAAQ,CAACU,GAAxB,CAA/B;AACnB;;AAEDC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJX,MAAAA,IADI;AAEJY,MAAAA;AAFI,QAGF,KAAKb,KAHT;AAIA,QAAI,CAACC,IAAL,EAAW,OAAO,aAAaZ,MAAM,CAACL,OAAP,CAAe8B,aAAf,CAA6BxB,aAAa,CAACyB,YAA3C,EAAyD,IAAzD,CAApB;AACX,WAAO,aAAa1B,MAAM,CAACL,OAAP,CAAe8B,aAAf,CAA6BxB,aAAa,CAACyB,YAA3C,EAAyD,IAAzD,EAA+D,aAAa1B,MAAM,CAACL,OAAP,CAAe8B,aAAf,CAA6BD,UAA7B,EAAyC;AACvIZ,MAAAA,IAAI,EAAEA;AADiI,KAAzC,CAA5E,CAApB;AAGD;;AAhCoD;;AAoCvDR,iBAAiB,CAACO,KAAlB,GAA0B;AACxB;AACF;AACA;AACEC,EAAAA,IAAI,EAAEhB,MAAM,CAAC+B,iBAJW;AAKxBH,EAAAA,UAAU,EAAE1B,UAAU,CAACH,OAAX,CAAmBiC,WAAnB,CAA+BC;AALnB,CAA1B;AAOAzB,iBAAiB,CAAC0B,YAAlB,GAAiC;AAC/BlB,EAAAA,IAAI,EAAE;AADyB,CAAjC;;AAIA,IAAImB,QAAQ,GAAG,CAAC,GAAG9B,aAAa,CAAC+B,WAAlB,EAA+B5B,iBAA/B,CAAf;;AAEAX,OAAO,CAACE,OAAR,GAAkBoC,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require(\"@opentripplanner/core-utils/lib/types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLeaflet = require(\"react-leaflet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This overlay is intended to highlight a specific stop on a map typically in\n * conjunction with some kind of stop viewer.\n */\nclass StopViewerOverlay extends _reactLeaflet.MapLayer {\n  componentDidMount() {} // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n\n\n  componentWillUnmount() {}\n  /**\n   * Only reset map view if a new stop is selected. This prevents resetting the\n   * bounds if, for example, the arrival times have changed for the same stop\n   * in the viewer.\n   */\n\n\n  componentDidUpdate(prevProps) {\n    const nextStop = this.props.stop;\n    const oldStopId = prevProps.stop && prevProps.stop.id;\n    const hasNewStopId = nextStop && nextStop.id !== oldStopId;\n    if (hasNewStopId) this.props.leaflet.map.setView([nextStop.lat, nextStop.lon]);\n  }\n\n  createLeafletElement() {}\n\n  updateLeafletElement() {}\n\n  render() {\n    const {\n      stop,\n      StopMarker\n    } = this.props;\n    if (!stop) return /*#__PURE__*/_react.default.createElement(_reactLeaflet.FeatureGroup, null);\n    return /*#__PURE__*/_react.default.createElement(_reactLeaflet.FeatureGroup, null, /*#__PURE__*/_react.default.createElement(StopMarker, {\n      stop: stop\n    }));\n  }\n\n}\n\nStopViewerOverlay.props = {\n  /**\n   * An object representing a transit stop\n   */\n  stop: _types.stopLayerStopType,\n  StopMarker: _propTypes.default.elementType.isRequired\n};\nStopViewerOverlay.defaultProps = {\n  stop: null\n};\n\nvar _default = (0, _reactLeaflet.withLeaflet)(StopViewerOverlay);\n\nexports.default = _default;"]}