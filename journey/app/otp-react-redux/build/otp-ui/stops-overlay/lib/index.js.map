{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","_coreUtils","_interopRequireDefault","require","_propTypes","_react","_reactLeaflet","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","StopsOverlay","MapLayer","constructor","args","leaflet","minZoom","refreshStops","props","map","getZoom","forceUpdate","bounds","getBounds","equals","lastBounds","setTimeout","minLat","getSouth","maxLat","getNorth","minLon","getWest","maxLon","getEast","componentDidMount","on","componentWillUnmount","off","getLeafletContext","createLeafletElement","updateLeafletElement","render","StopMarker","stops","length","createElement","FeatureGroup","createStopMarker","stop","id","propTypes","object","isRequired","number","func","elementType","arrayOf","types","stopLayerStopType","defaultProps","stopMarkerPath","undefined","stopMarkerRadius","_default","withLeaflet"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,6BAAD,CAAR,CAAvC;;AAEA,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIE,MAAM,GAAGH,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIG,aAAa,GAAGH,OAAO,CAAC,eAAD,CAA3B;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASE,eAAT,CAAyBF,GAAzB,EAA8BG,GAA9B,EAAmCX,KAAnC,EAA0C;AAAE,MAAIW,GAAG,IAAIH,GAAX,EAAgB;AAAEX,IAAAA,MAAM,CAACC,cAAP,CAAsBU,GAAtB,EAA2BG,GAA3B,EAAgC;AAAEX,MAAAA,KAAK,EAAEA,KAAT;AAAgBY,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEN,IAAAA,GAAG,CAACG,GAAD,CAAH,GAAWX,KAAX;AAAmB;;AAAC,SAAOQ,GAAP;AAAa;AAEjN;AACA;AACA;;;AACA,MAAMO,YAAN,SAA2BR,aAAa,CAACS,QAAzC,CAAkD;AAChDC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;;AAEAR,IAAAA,eAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,MAAM;AAC1C,YAAM;AACJS,QAAAA,OADI;AAEJC,QAAAA,OAFI;AAGJC,QAAAA;AAHI,UAIF,KAAKC,KAJT;;AAMA,UAAIH,OAAO,CAACI,GAAR,CAAYC,OAAZ,KAAwBJ,OAA5B,EAAqC;AACnC,aAAKK,WAAL;AACA;AACD;;AAED,YAAMC,MAAM,GAAGP,OAAO,CAACI,GAAR,CAAYI,SAAZ,EAAf;;AAEA,UAAI,CAACD,MAAM,CAACE,MAAP,CAAc,KAAKC,UAAnB,CAAL,EAAqC;AACnCC,QAAAA,UAAU,CAAC,MAAM;AACfT,UAAAA,YAAY,CAAC;AACXU,YAAAA,MAAM,EAAEL,MAAM,CAACM,QAAP,EADG;AAEXC,YAAAA,MAAM,EAAEP,MAAM,CAACQ,QAAP,EAFG;AAGXC,YAAAA,MAAM,EAAET,MAAM,CAACU,OAAP,EAHG;AAIXC,YAAAA,MAAM,EAAEX,MAAM,CAACY,OAAP;AAJG,WAAD,CAAZ;AAMA,eAAKT,UAAL,GAAkBH,MAAlB;AACD,SARS,EAQP,GARO,CAAV;AASD;AACF,KAzBc,CAAf;AA0BD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKjB,KAAL,CAAWH,OAAX,CAAmBI,GAAnB,CAAuBiB,EAAvB,CAA0B,SAA1B,EAAqC,KAAKnB,YAA1C;AACD,GAnC+C,CAmC9C;;;AAGFoB,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKnB,KAAL,CAAWH,OAAX,CAAmBI,GAAnB,CAAuBmB,GAAvB,CAA2B,SAA3B,EAAsC,KAAKrB,YAA3C;AACD;AACD;AACF;AACA;AACA;AACA;;;AAGEsB,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKrB,KAAL,CAAWH,OAAlB;AACD;;AAEDyB,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ3B,MAAAA,OADI;AAEJC,MAAAA,OAFI;AAGJ2B,MAAAA,UAHI;AAIJC,MAAAA;AAJI,QAKF,KAAK1B,KALT,CADO,CAMS;;AAEhB,QAAI,CAACH,OAAD,IAAY,CAACA,OAAO,CAACI,GAArB,IAA4BJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,KAAwBJ,OAApD,IAA+D,CAAC4B,KAAhE,IAAyEA,KAAK,CAACC,MAAN,KAAiB,CAA9F,EAAiG;AAC/F,aAAO,aAAa3C,MAAM,CAACL,OAAP,CAAeiD,aAAf,CAA6B3C,aAAa,CAAC4C,YAA3C,EAAyD,IAAzD,CAApB;AACD,KAVM,CAUL;;;AAGF,UAAMC,gBAAgB,GAAGC,IAAI,IAAI,aAAa/C,MAAM,CAACL,OAAP,CAAeiD,aAAf,CAA6BH,UAA7B,EAAyC;AACrFpC,MAAAA,GAAG,EAAE0C,IAAI,CAACC,EAD2E;AAErFD,MAAAA,IAAI,EAAEA;AAF+E,KAAzC,CAA9C,CAbO,CAgBH;;;AAGJ,QAAIL,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAO,aAAa3C,MAAM,CAACL,OAAP,CAAeiD,aAAf,CAA6B3C,aAAa,CAAC4C,YAA3C,EAAyD,IAAzD,EAA+DC,gBAAgB,CAACJ,KAAK,CAAC,CAAD,CAAN,CAA/E,CAApB;AACD,KArBM,CAqBL;;;AAGF,WAAO,aAAa1C,MAAM,CAACL,OAAP,CAAeiD,aAAf,CAA6B3C,aAAa,CAAC4C,YAA3C,EAAyD,IAAzD,EAA+DH,KAAK,CAACzB,GAAN,CAAU8B,IAAI,IAAID,gBAAgB,CAACC,IAAD,CAAlC,CAA/D,CAApB;AACD;;AAlF+C;;AAsFlDtC,YAAY,CAACwC,SAAb,GAAyB;AACvB;;AAEA;AACApC,EAAAA,OAAO,EAAEd,UAAU,CAACJ,OAAX,CAAmBuD,MAAnB,CAA0BC,UAJZ;;AAMvB;AACF;AACA;AACErC,EAAAA,OAAO,EAAEf,UAAU,CAACJ,OAAX,CAAmByD,MATL;;AAWvB;AACF;AACA;AACA;AACErC,EAAAA,YAAY,EAAEhB,UAAU,CAACJ,OAAX,CAAmB0D,IAAnB,CAAwBF,UAff;;AAiBvB;AACF;AACA;AACA;AACEV,EAAAA,UAAU,EAAE1C,UAAU,CAACJ,OAAX,CAAmB2D,WAAnB,CAA+BH,UArBpB;;AAuBvB;AACF;AACA;AACET,EAAAA,KAAK,EAAE3C,UAAU,CAACJ,OAAX,CAAmB4D,OAAnB,CAA2B3D,UAAU,CAACD,OAAX,CAAmB6D,KAAnB,CAAyBC,iBAApD,EAAuEN;AA1BvD,CAAzB;AA4BA1C,YAAY,CAACiD,YAAb,GAA4B;AAC1B5C,EAAAA,OAAO,EAAE,EADiB;AAE1B6C,EAAAA,cAAc,EAAEC,SAFU;AAG1BC,EAAAA,gBAAgB,EAAED;AAHQ,CAA5B;;AAMA,IAAIE,QAAQ,GAAG,CAAC,GAAG7D,aAAa,CAAC8D,WAAlB,EAA+BtD,YAA/B,CAAf;;AAEAhB,OAAO,CAACE,OAAR,GAAkBmE,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _coreUtils = _interopRequireDefault(require(\"@opentripplanner/core-utils\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLeaflet = require(\"react-leaflet\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * An overlay to view a collection of stops.\n */\nclass StopsOverlay extends _reactLeaflet.MapLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"refreshStops\", () => {\n      const {\n        leaflet,\n        minZoom,\n        refreshStops\n      } = this.props;\n\n      if (leaflet.map.getZoom() < minZoom) {\n        this.forceUpdate();\n        return;\n      }\n\n      const bounds = leaflet.map.getBounds();\n\n      if (!bounds.equals(this.lastBounds)) {\n        setTimeout(() => {\n          refreshStops({\n            minLat: bounds.getSouth(),\n            maxLat: bounds.getNorth(),\n            minLon: bounds.getWest(),\n            maxLon: bounds.getEast()\n          });\n          this.lastBounds = bounds;\n        }, 300);\n      }\n    });\n  }\n\n  componentDidMount() {\n    // set up pan/zoom listener\n    this.props.leaflet.map.on(\"moveend\", this.refreshStops);\n  } // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n\n\n  componentWillUnmount() {\n    // Remove the pan/zoom listener set up above.\n    this.props.leaflet.map.off(\"moveend\", this.refreshStops);\n  }\n  /**\n   * this method is used for backporting to React 15\n   * v16:  return this.props.leaflet;\n   * v15:  return this.context;\n   */\n\n\n  getLeafletContext() {\n    return this.props.leaflet;\n  }\n\n  createLeafletElement() {}\n\n  updateLeafletElement() {}\n\n  render() {\n    const {\n      leaflet,\n      minZoom,\n      StopMarker,\n      stops\n    } = this.props; // Don't render if below zoom threshold or no stops visible\n\n    if (!leaflet || !leaflet.map || leaflet.map.getZoom() < minZoom || !stops || stops.length === 0) {\n      return /*#__PURE__*/_react.default.createElement(_reactLeaflet.FeatureGroup, null);\n    } // Helper to create StopMarker from stop\n\n\n    const createStopMarker = stop => /*#__PURE__*/_react.default.createElement(StopMarker, {\n      key: stop.id,\n      stop: stop\n    }); // Singleton case; return FeatureGroup with single StopMarker\n\n\n    if (stops.length === 1) {\n      return /*#__PURE__*/_react.default.createElement(_reactLeaflet.FeatureGroup, null, createStopMarker(stops[0]));\n    } // Otherwise, return FeatureGroup with mapped array of StopMarkers\n\n\n    return /*#__PURE__*/_react.default.createElement(_reactLeaflet.FeatureGroup, null, stops.map(stop => createStopMarker(stop)));\n  }\n\n}\n\nStopsOverlay.propTypes = {\n  /** the leaflet reference as obtained from the withLeaflet wrapper */\n\n  /* eslint-disable-next-line react/forbid-prop-types */\n  leaflet: _propTypes.default.object.isRequired,\n\n  /**\n   * The zoom number at which this overlay will begin to show stop markers.\n   */\n  minZoom: _propTypes.default.number,\n\n  /**\n   * A callback for refreshing the stops in the event of a map bounds or zoom\n   * change event.\n   */\n  refreshStops: _propTypes.default.func.isRequired,\n\n  /**\n   * A react component that can be used to render a stop marker. The component\n   * will be sent a single prop of stop which will be a stopLayerStopType.\n   */\n  StopMarker: _propTypes.default.elementType.isRequired,\n\n  /**\n   * The list of stops to create stop markers for.\n   */\n  stops: _propTypes.default.arrayOf(_coreUtils.default.types.stopLayerStopType).isRequired\n};\nStopsOverlay.defaultProps = {\n  minZoom: 15,\n  stopMarkerPath: undefined,\n  stopMarkerRadius: undefined\n};\n\nvar _default = (0, _reactLeaflet.withLeaflet)(StopsOverlay);\n\nexports.default = _default;"]}