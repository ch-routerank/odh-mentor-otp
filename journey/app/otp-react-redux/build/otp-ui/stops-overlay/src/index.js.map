{"version":3,"sources":["index.js"],"names":["StopsOverlay","MapLayer","leaflet","minZoom","refreshStops","props","map","getZoom","forceUpdate","bounds","getBounds","equals","lastBounds","setTimeout","minLat","getSouth","maxLat","getNorth","minLon","getWest","maxLon","getEast","componentDidMount","on","componentWillUnmount","off","getLeafletContext","createLeafletElement","updateLeafletElement","render","StopMarker","stops","length","createStopMarker","stop","id","propTypes","PropTypes","object","isRequired","number","func","elementType","arrayOf","utils","types","stopLayerStopType","defaultProps","stopMarkerPath","undefined","stopMarkerRadius"],"mappings":"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","sourcesContent":["import utils from \"../../core-utils/src\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FeatureGroup, MapLayer, withLeaflet } from \"react-leaflet\";\n\n/**\n * An overlay to view a collection of stops.\n */\nclass StopsOverlay extends MapLayer {\n  componentDidMount() {\n    // set up pan/zoom listener\n    this.props.leaflet.map.on(\"moveend\", this.refreshStops);\n  }\n\n  // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n  componentWillUnmount() {\n    // Remove the pan/zoom listener set up above.\n    this.props.leaflet.map.off(\"moveend\", this.refreshStops);\n  }\n\n  /**\n   * this method is used for backporting to React 15\n   * v16:  return this.props.leaflet;\n   * v15:  return this.context;\n   */\n  getLeafletContext() {\n    return this.props.leaflet;\n  }\n\n  refreshStops = () => {\n    const { leaflet, minZoom, refreshStops } = this.props;\n    if (leaflet.map.getZoom() < minZoom) {\n      this.forceUpdate();\n      return;\n    }\n\n    const bounds = leaflet.map.getBounds();\n    if (!bounds.equals(this.lastBounds)) {\n      setTimeout(() => {\n        refreshStops({\n          minLat: bounds.getSouth(),\n          maxLat: bounds.getNorth(),\n          minLon: bounds.getWest(),\n          maxLon: bounds.getEast()\n        });\n        this.lastBounds = bounds;\n      }, 300);\n    }\n  };\n\n  createLeafletElement() {}\n\n  updateLeafletElement() {}\n\n  render() {\n    const { leaflet, minZoom, StopMarker, stops } = this.props;\n\n    // Don't render if below zoom threshold or no stops visible\n    if (\n      !leaflet ||\n      !leaflet.map ||\n      leaflet.map.getZoom() < minZoom ||\n      !stops ||\n      stops.length === 0\n    ) {\n      return <FeatureGroup />;\n    }\n\n    // Helper to create StopMarker from stop\n    const createStopMarker = stop => <StopMarker key={stop.id} stop={stop} />;\n\n    // Singleton case; return FeatureGroup with single StopMarker\n    if (stops.length === 1) {\n      return <FeatureGroup>{createStopMarker(stops[0])}</FeatureGroup>;\n    }\n\n    // Otherwise, return FeatureGroup with mapped array of StopMarkers\n    return (\n      <FeatureGroup>{stops.map(stop => createStopMarker(stop))}</FeatureGroup>\n    );\n  }\n}\n\nStopsOverlay.propTypes = {\n  /** the leaflet reference as obtained from the withLeaflet wrapper */\n  /* eslint-disable-next-line react/forbid-prop-types */\n  leaflet: PropTypes.object.isRequired,\n  /**\n   * The zoom number at which this overlay will begin to show stop markers.\n   */\n  minZoom: PropTypes.number,\n  /**\n   * A callback for refreshing the stops in the event of a map bounds or zoom\n   * change event.\n   */\n  refreshStops: PropTypes.func.isRequired,\n  /**\n   * A react component that can be used to render a stop marker. The component\n   * will be sent a single prop of stop which will be a stopLayerStopType.\n   */\n  StopMarker: PropTypes.elementType.isRequired,\n  /**\n   * The list of stops to create stop markers for.\n   */\n  stops: PropTypes.arrayOf(utils.types.stopLayerStopType).isRequired\n};\n\nStopsOverlay.defaultProps = {\n  minZoom: 15,\n  stopMarkerPath: undefined,\n  stopMarkerRadius: undefined\n};\n\nexport default withLeaflet(StopsOverlay);\n"]}