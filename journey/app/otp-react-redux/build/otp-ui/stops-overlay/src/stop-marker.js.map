{"version":3,"sources":["stop-marker.js"],"names":["StopMarker","Component","setViewedStop","stop","props","stopId","id","setLocation","locationType","lat","lon","name","location","render","languageConfig","leafletPath","radius","idArr","split","agency","pop","onClickView","stopViewer","onFromClick","onToClick","propTypes","languageConfigType","isRequired","leafletPathType","PropTypes","number","func","stopLayerStopType","defaultProps","color","fillColor","fillOpacity","weight"],"mappings":"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","sourcesContent":["import * as BaseMapStyled from \"@opentripplanner/base-map/lib/styled\";\nimport {\n  languageConfigType,\n  leafletPathType,\n  stopLayerStopType\n} from \"@opentripplanner/core-utils/lib/types\";\nimport FromToLocationPicker from \"@opentripplanner/from-to-location-picker\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { CircleMarker, Popup } from \"react-leaflet\";\n\nimport * as Styled from \"./styled\";\n\nexport default class StopMarker extends Component {\n  onClickView = () => {\n    const { setViewedStop, stop } = this.props;\n    setViewedStop({ stopId: stop.id });\n  };\n\n  onFromClick = () => {\n    this.setLocation(\"from\");\n  };\n\n  onToClick = () => {\n    this.setLocation(\"to\");\n  };\n\n  setLocation(locationType) {\n    const { setLocation, stop } = this.props;\n    const { lat, lon, name } = stop;\n    setLocation({ location: { lat, lon, name }, locationType });\n  }\n\n  render() {\n    const { languageConfig, leafletPath, radius, stop } = this.props;\n    const { id, name, lat, lon } = stop;\n    const idArr = id.split(\":\");\n    const agency = idArr[0];\n    const stopId = idArr.pop();\n\n    return (\n      <CircleMarker\n        /* eslint-disable-next-line react/jsx-props-no-spreading */\n        {...leafletPath}\n        center={[lat, lon]}\n        radius={radius}\n      >\n        <Popup>\n          <BaseMapStyled.MapOverlayPopup>\n            <BaseMapStyled.PopupTitle>{name}</BaseMapStyled.PopupTitle>\n            <BaseMapStyled.PopupRow>\n              {/* <b>Agency:</b> {agency} */}\n            </BaseMapStyled.PopupRow>\n            <BaseMapStyled.PopupRow>\n              <span>\n                <b>Stop ID:</b> {stopId}\n              </span>\n              <Styled.ViewStopButton onClick={this.onClickView}>\n                {languageConfig.stopViewer || \"Fermata\"}\n              </Styled.ViewStopButton>\n            </BaseMapStyled.PopupRow>\n\n            {/* The \"Set as [from/to]\" ButtonGroup */}\n            <BaseMapStyled.PopupRow>\n              <b>$_travel_$</b>\n              <FromToLocationPicker\n                onFromClick={this.onFromClick}\n                onToClick={this.onToClick}\n              />\n            </BaseMapStyled.PopupRow>\n          </BaseMapStyled.MapOverlayPopup>\n        </Popup>\n      </CircleMarker>\n    );\n  }\n}\n\nStopMarker.propTypes = {\n  languageConfig: languageConfigType.isRequired,\n  leafletPath: leafletPathType,\n  radius: PropTypes.number,\n  setLocation: PropTypes.func.isRequired,\n  setViewedStop: PropTypes.func.isRequired,\n  stop: stopLayerStopType.isRequired\n};\n\nStopMarker.defaultProps = {\n  leafletPath: {\n    color: \"#000\",\n    fillColor: \"#FFF\",\n    fillOpacity: 1,\n    weight: 1\n  },\n  radius: 5\n};\n"]}