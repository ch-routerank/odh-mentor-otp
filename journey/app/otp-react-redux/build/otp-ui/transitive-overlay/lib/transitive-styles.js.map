{"version":3,"sources":["transitive-styles.js"],"names":["Object","defineProperty","exports","value","default","_map","require","STYLES","places","display","place","isBikeshareStation","isEScooterStation","isCarWalkTransition","fill","stroke","r","stops_merged","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,qCAAD,CAAlB;;AAEA,MAAMC,MAAM,GAAG,EAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,MAAP,GAAgB;AACdC,EAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,KAAV,KAAoB,CAAC,GAAGL,IAAI,CAACM,kBAAT,EAA6BD,KAA7B,KAAuC,CAAC,GAAGL,IAAI,CAACO,iBAAT,EAA4BF,KAA5B,CAAvC,IAA6E,CAAC,GAAGL,IAAI,CAACQ,mBAAT,EAA8BH,KAA9B,CAA7E,GAAoH,IAApH,GAA2H,MAD1I;AAEdI,EAAAA,IAAI,EAAE,CAACL,OAAD,EAAUC,KAAV,KAAoB;AACxB,QAAI,CAAC,GAAGL,IAAI,CAACM,kBAAT,EAA6BD,KAA7B,CAAJ,EAAyC;AACvC,aAAO,MAAP;AACD;;AAED,QAAI,CAAC,GAAGL,IAAI,CAACQ,mBAAT,EAA8BH,KAA9B,CAAJ,EAA0C;AACxC,aAAO,MAAP;AACD;;AAED,QAAI,CAAC,GAAGL,IAAI,CAACO,iBAAT,EAA4BF,KAA5B,CAAJ,EAAwC;AACtC,aAAO,SAAP;AACD;;AAED,WAAO,IAAP;AACD,GAhBa;AAiBdK,EAAAA,MAAM,EAAE,MAjBM;AAkBd,kBAAgB,CAlBF;AAmBdC,EAAAA,CAAC,EAAE;AAnBW,CAAhB;AAqBA;AACA;AACA;AACA;;AAEAT,MAAM,CAACU,YAAP,GAAsB;AACpBD,EAAAA,CAAC,GAAG;AACF,WAAO,CAAP;AACD;;AAHmB,CAAtB;AAMA,IAAIE,QAAQ,GAAGX,MAAf;AACAL,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = require(\"@opentripplanner/core-utils/lib/map\");\n\nconst STYLES = {};\n/**\n * Transitive style overrides for places (basically any point that isn't a\n * transit stop)\n *\n * This style rule draws nothing except when a bikeshare station or e-scooter\n * station is encountered.\n *\n * The from/to locations are drawn outside of transitive and there are separate\n * renderers for transit stops.\n */\n\nSTYLES.places = {\n  display: (display, place) => (0, _map.isBikeshareStation)(place) || (0, _map.isEScooterStation)(place) || (0, _map.isCarWalkTransition)(place) ? true : \"none\",\n  fill: (display, place) => {\n    if ((0, _map.isBikeshareStation)(place)) {\n      return \"#f00\";\n    }\n\n    if ((0, _map.isCarWalkTransition)(place)) {\n      return \"#888\";\n    }\n\n    if ((0, _map.isEScooterStation)(place)) {\n      return \"#f5a729\";\n    }\n\n    return null;\n  },\n  stroke: \"#fff\",\n  \"stroke-width\": 2,\n  r: 7\n};\n/**\n * Transitive style overrides for transit stops. All this does is sets the\n * radius to 6 pixels.\n */\n\nSTYLES.stops_merged = {\n  r() {\n    return 6;\n  }\n\n};\nvar _default = STYLES;\nexports.default = _default;"]}