{"version":3,"sources":["date-time-preview.js"],"names":["coreUtils","time","OTP_API_DATE_FORMAT","OTP_API_TIME_FORMAT","getTimeFormat","getDateFormat","DateTimePreview","props","caret","date","editButtonText","departArrive","routingType","startTime","endTime","timeFormat","dateFormat","timeStr","formattedTime","moment","utc","format","summary","calendar","sameElse","split","button","onClick","clear","Component","PropTypes","string","compressed","bool","element","func","mapStateToProps","state","ownProps","otp","currentQuery","config","mapDispatchToProps"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nconst {\n  OTP_API_DATE_FORMAT,\n  OTP_API_TIME_FORMAT,\n  getTimeFormat,\n  getDateFormat\n} = coreUtils.time\n\nclass DateTimePreview extends Component {\n  static propTypes = {\n    caret: PropTypes.string,\n    compressed: PropTypes.bool,\n    date: PropTypes.string,\n    departArrive: PropTypes.string,\n    editButtonText: PropTypes.element,\n    time: PropTypes.string,\n    onClick: PropTypes.func,\n    routingType: PropTypes.string\n  }\n\n  static defaultProps = {\n    editButtonText: <i className='fa fa-pencil' />\n  }\n\n  render () {\n    const {\n      caret,\n      date,\n      editButtonText,\n      time,\n      departArrive,\n      routingType,\n      startTime,\n      endTime,\n      timeFormat,\n      dateFormat\n    } = this.props\n\n    let timeStr\n    const formattedTime = moment.utc(time, OTP_API_TIME_FORMAT).format(timeFormat)\n    if (routingType === 'ITINERARY') {\n      if (departArrive === 'NOW') timeStr = 'Adesso'\n      else if (departArrive === 'ARRIVE') timeStr = 'Arrivo ' + formattedTime\n      else if (departArrive === 'DEPART') timeStr = 'Partenza ' + formattedTime\n    } else if (routingType === 'PROFILE') {\n      timeStr = startTime + ' to ' + endTime\n    }\n\n    const summary = (\n      <div className='summary'>\n        <i className='fa fa-calendar' /> {\n          moment(date, OTP_API_DATE_FORMAT)\n            .calendar(null, { sameElse: dateFormat })\n            .split(' at')[0]}\n        <br />\n        <i className='fa fa-clock-o' /> {timeStr}\n      </div>\n    )\n\n    const button = (\n      <div className='button-container'>\n        <Button\n          aria-label='Edit departure or arrival time'\n          onClick={this.props.onClick}\n        >\n          {editButtonText}{caret && <span> <i className={`fa fa-caret-${caret}`} /></span>}\n        </Button>\n      </div>\n    )\n\n    return (\n      <div className='settings-preview' onClick={this.props.onClick}>\n        {summary}\n        {button}\n        <div style={{ clear: 'both' }} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time, routingType, startTime, endTime } = state.otp.currentQuery\n  const config = state.otp.config\n  return {\n    config,\n    routingType,\n    departArrive,\n    date,\n    time,\n    startTime,\n    endTime,\n    timeFormat: getTimeFormat(config),\n    dateFormat: getDateFormat(config)\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimePreview)\n"]}