{"version":3,"sources":["tabbed-form-panel.js"],"names":["TabbedFormPanel","props","mainPanelContent","setMainPanelContent","ModeIcon","_onEditDateTimeClick","_onEditSettingsClick","_onHideClick","Component","PropTypes","elementType","isRequired","mapStateToProps","state","ownProps","otp","ui","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,e;;;;;;;;;;;;;;;;2EAKmB,YAAM;AAAA,wBACuB,MAAKC,KAD5B;AAAA,UACnBC,gBADmB,eACnBA,gBADmB;AAAA,UACDC,mBADC,eACDA,mBADC;AAE3BA,MAAAA,mBAAmB,CAACD,gBAAgB,KAAK,eAArB,GAAuC,IAAvC,GAA8C,eAA/C,CAAnB;AACD,K;;2EAEsB,YAAM;AAAA,yBACuB,MAAKD,KAD5B;AAAA,UACnBC,gBADmB,gBACnBA,gBADmB;AAAA,UACDC,mBADC,gBACDA,mBADC;AAE3BA,MAAAA,mBAAmB,CAACD,gBAAgB,KAAK,eAArB,GAAuC,IAAvC,GAA8C,eAA/C,CAAnB;AACD,K;;mEAEc;AAAA,aAAM,MAAKD,KAAL,CAAWE,mBAAX,CAA+B,IAA/B,CAAN;AAAA,K;;;;;;;6BAEL;AAAA,yBAC+B,KAAKF,KADpC;AAAA,UACAG,QADA,gBACAA,QADA;AAAA,UACUF,gBADV,gBACUA,gBADV;AAGR,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,qBAAcA,gBAAgB,KAAK,eAArB,GAAuC,WAAvC,GAAqD,EAAnE;AAAd,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,wBAAD;AACE,QAAA,OAAO,EAAE,KAAKG;AADhB,QADF,CADF,CADF,eAQE;AAAK,QAAA,SAAS,sBAAeH,gBAAgB,KAAK,eAArB,GAAuC,WAAvC,GAAqD,EAApE;AAAd,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,wBAAD;AAAiB,QAAA,OAAO,EAAE,KAAKI;AAA/B,QADF,CADF,CARF,CADF,EAeG,CAACJ,gBAAgB,KAAK,eAArB,IAAwCA,gBAAgB,KAAK,eAA9D,kBACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACGA,gBAAgB,KAAK,eAArB,iBAAyC,6BAAC,sBAAD,OAD5C,EAEGA,gBAAgB,KAAK,eAArB,iBAAyC,6BAAC,uCAAD;AAAgC,QAAA,QAAQ,EAAEE;AAA1C,QAF5C,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,sBAAD;AAAQ,QAAA,SAAS,EAAC,qCAAlB;AAAwD,QAAA,OAAO,EAAE,KAAKG;AAAtE,sBACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,mBADF,CAHF,CAhBJ,CADF;AA6BD;;;;EAjD2BC,gB,GAoD9B;;;gBApDMR,e,eACe;AACjBI,EAAAA,QAAQ,EAAEK,mBAAUC,WAAV,CAAsBC;AADf,C;;AAqDrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLZ,IAAAA,gBAAgB,EAAEW,KAAK,CAACE,GAAN,CAAUC,EAAV,CAAad;AAD1B,GAAP;AAGD,CAJD;;AAMA,IAAMe,kBAAkB,GAAG;AACzBd,EAAAA,mBAAmB,EAAnBA;AADyB,CAA3B;;eAIe,yBAAQS,eAAR,EAAyBK,kBAAzB,EAA6CjB,eAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport DateTimePreview from './date-time-preview'\nimport SettingsPreview from './settings-preview'\nimport DateTimeModal from './date-time-modal'\nimport ConnectedSettingsSelectorPanel from './connected-settings-selector-panel'\n\nimport { setMainPanelContent } from '../../actions/ui'\n\nclass TabbedFormPanel extends Component {\n  static propTypes = {\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  _onEditDateTimeClick = () => {\n    const { mainPanelContent, setMainPanelContent } = this.props\n    setMainPanelContent(mainPanelContent === 'EDIT_DATETIME' ? null : 'EDIT_DATETIME')\n  }\n\n  _onEditSettingsClick = () => {\n    const { mainPanelContent, setMainPanelContent } = this.props\n    setMainPanelContent(mainPanelContent === 'EDIT_SETTINGS' ? null : 'EDIT_SETTINGS')\n  }\n\n  _onHideClick = () => this.props.setMainPanelContent(null)\n\n  render () {\n    const { ModeIcon, mainPanelContent } = this.props\n\n    return (\n      <div className='tabbed-form-panel'>\n        <div className='tab-row'>\n          <div className={`tab left ${mainPanelContent === 'EDIT_DATETIME' ? ' selected' : ''}`}>\n            <div className='tab-content'>\n              <DateTimePreview\n                onClick={this._onEditDateTimeClick}\n              />\n            </div>\n          </div>\n          <div className={`tab right ${mainPanelContent === 'EDIT_SETTINGS' ? ' selected' : ''}`}>\n            <div className='tab-content'>\n              <SettingsPreview onClick={this._onEditSettingsClick} />\n            </div>\n          </div>\n        </div>\n        {(mainPanelContent === 'EDIT_DATETIME' || mainPanelContent === 'EDIT_SETTINGS') && (\n          <div className='active-panel'>\n            {mainPanelContent === 'EDIT_DATETIME' && (<DateTimeModal />)}\n            {mainPanelContent === 'EDIT_SETTINGS' && (<ConnectedSettingsSelectorPanel ModeIcon={ModeIcon} />)}\n            <div className='hide-button-row'>\n              <Button className='hide-button clear-button-formatting' onClick={this._onHideClick}>\n                <i className='fa fa-caret-up' /> $_hide_settings_$\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    mainPanelContent: state.otp.ui.mainPanelContent\n  }\n}\n\nconst mapDispatchToProps = {\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabbedFormPanel)\n"]}