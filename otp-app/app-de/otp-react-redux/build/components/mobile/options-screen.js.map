{"version":3,"sources":["options-screen.js"],"names":["MobileOptionsScreen","props","setMobileScreen","MobileScreens","RESULTS_SUMMARY","ModeIcon","SEARCH_FORM","_planTripClicked","Component","PropTypes","elementType","isRequired","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,mB;;;;;;;;;;;;;;;;uEAKe,YAAM;AACvB,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,eAAzC;AACD,K;;;;;;;6BAES;AAAA,UACAC,QADA,GACa,KAAKJ,KADlB,CACAI,QADA;AAGR,0BACE,6BAAC,kBAAD,qBACE,6BAAC,sBAAD;AACE,QAAA,UAAU,EAAC,oBADb;AAEE,QAAA,cAAc,MAFhB;AAGE,QAAA,UAAU,EAAEF,kBAAcG;AAH5B,QADF,eAOE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,uCAAD;AAAgC,QAAA,QAAQ,EAAED;AAA1C,QADF,CAPF,eAWE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,uBAAD;AAAgB,QAAA,OAAO,EAAE,KAAKE;AAA9B,QADF,CAXF,CADF;AAiBD;;;;EA7B+BC,gB,GAgClC;;;gBAhCMR,mB,eACe;AACjBK,EAAAA,QAAQ,EAAEI,mBAAUC,WAAV,CAAsBC;AADf,C;;AAiCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AACzBb,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQU,eAAR,EAAyBG,kBAAzB,EAA6Cf,mBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\nimport ConnectedSettingsSelectorPanel from '../form/connected-settings-selector-panel'\nimport PlanTripButton from '../form/plan-trip-button'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileOptionsScreen extends Component {\n  static propTypes = {\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  _planTripClicked = () => {\n    this.props.setMobileScreen(MobileScreens.RESULTS_SUMMARY)\n  }\n\n  render () {\n    const { ModeIcon } = this.props\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText='$_set_search_$'\n          showBackButton\n          backScreen={MobileScreens.SEARCH_FORM}\n        />\n\n        <div className='options-main-content mobile-padding'>\n          <ConnectedSettingsSelectorPanel ModeIcon={ModeIcon} />\n        </div>\n\n        <div className='options-lower-tray mobile-padding'>\n          <PlanTripButton onClick={this._planTripClicked} />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileOptionsScreen)\n"]}