// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components > viewers > stop viewer should render countdown times after midnight with no date if it is the previous day 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopData={
        Object {
          "agencyName": "TriMet",
          "amenities": Array [
            "Crosswalk near stop",
            "Curb ramp near stop",
            "Pavement at back door",
            "Pavement at front door",
            "Schedule display",
            "Sidewalk at stop",
            "Traffic signal",
          ],
          "code": "9860",
          "desc": "Eastbound stop in Portland (Stop ID 9860)",
          "id": "TriMet:9860",
          "lat": 45.522919,
          "lon": -122.689717,
          "mode": "BUS",
          "name": "W Burnside & SW 18th",
          "routes": Array [
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:20",
              "longName": "Burnside/Stark",
              "mode": "BUS",
              "shortName": "20",
              "sortOrder": 2600,
              "sortOrderSet": true,
              "type": 3,
            },
          ],
          "rsn": "20",
          "stopTimes": Array [
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2041",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 89460,
                  "realtimeDeparture": 89460,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 89460,
                  "scheduledDeparture": 89460,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230375",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2043",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 93120,
                  "realtimeDeparture": 93120,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 93120,
                  "scheduledDeparture": 93120,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230376",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2049",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 96780,
                  "realtimeDeparture": 96780,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 96780,
                  "scheduledDeparture": 96780,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230377",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:01",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2067",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 13980,
                  "realtimeDeparture": 13980,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 13980,
                  "scheduledDeparture": 13980,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230305",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2034",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 17580,
                  "realtimeDeparture": 17580,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 17580,
                  "scheduledDeparture": 17580,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230306",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2069",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 19020,
                  "realtimeDeparture": 19020,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 19020,
                  "scheduledDeparture": 19020,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230307",
                },
              ],
            },
          ],
          "stopTimesLastUpdated": 1565248650040,
          "type": 3,
          "url": "http://trimet.org/#tracker/stop/9860",
        }
      }
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:9860",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              W Burnside & SW 18th
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
        <div
          className="stop-viewer-body"
        >
          <div>
            <div>
              <b>
                Stop ID
              </b>
              : 
              9860
              <button
                className="link-button pull-right"
                onClick={[Function]}
                style={
                  Object {
                    "fontSize": "small",
                  }
                }
              >
                <Icon
                  type="calendar"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="calendar"
                    type="calendar"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-calendar fa-fw"
                      type="calendar"
                    />
                  </FontAwesome>
                </Icon>
                 
                View 
                schedule
              </button>
            </div>
            <b>
              Viaggia:
            </b>
            <FromToLocationPicker
              fromText="Da qui"
              location={null}
              onFromClick={[Function]}
              onToClick={[Function]}
              setLocation={null}
              showIcons={true}
              toText="To here"
            >
              <styled__FromToPickerSpan>
                <span
                  className="styled__FromToPickerSpan-p56b41-1 ddYzcs"
                >
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="from"
                      >
                        <styled__FromIcon
                          className=""
                          size="0.9em"
                          title="From Location Icon"
                        >
                          <DotCircle
                            className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                            size="0.9em"
                            title="From Location Icon"
                          >
                            <Styled(Component)
                              className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 512 512"
                              size="0.9em"
                              title="From Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 512 512"
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    From Location Icon
                                  </title>
                                  <path
                                    d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </DotCircle>
                        </styled__FromIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          Da qui
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="to"
                      >
                        <styled__ToIcon
                          className=""
                          size="0.9em"
                          title="To Location Icon"
                        >
                          <MapMarkerAlt
                            className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                            size="0.9em"
                            title="To Location Icon"
                          >
                            <Styled(Component)
                              className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 384 512"
                              size="0.9em"
                              title="To Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 384 512"
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 384 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    To Location Icon
                                  </title>
                                  <path
                                    d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </MapMarkerAlt>
                        </styled__ToIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          To here
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                </span>
              </styled__FromToPickerSpan>
            </FromToLocationPicker>
          </div>
          <div
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:20-Gresham TC"
              pattern={
                Object {
                  "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                  "headsign": "Gresham TC",
                  "id": "TriMet:20:1:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:20",
                  "longName": "Burnside/Stark",
                  "mode": "BUS",
                  "shortName": "20",
                  "sortOrder": 2600,
                  "sortOrderSet": true,
                  "type": 3,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2041",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 89460,
                    "realtimeDeparture": 89460,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 89460,
                    "scheduledDeparture": 89460,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230375",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2043",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 93120,
                    "realtimeDeparture": 93120,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 93120,
                    "scheduledDeparture": 93120,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230376",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2049",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 96780,
                    "realtimeDeparture": 96780,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 96780,
                    "scheduledDeparture": 96780,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230377",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2067",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 13980,
                    "realtimeDeparture": 13980,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 13980,
                    "scheduledDeparture": 13980,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230305",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2034",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 17580,
                    "realtimeDeparture": 17580,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 17580,
                    "scheduledDeparture": 17580,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230306",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2069",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 19020,
                    "realtimeDeparture": 19020,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 19020,
                    "scheduledDeparture": 19020,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230307",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      20
                    </b>
                     To 
                    Gresham TC
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 14,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div>
                          52 min
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
          </div>
          <div
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <label
              style={
                Object {
                  "fontSize": "small",
                  "fontWeight": 300,
                }
              }
            >
              <input
                checked={true}
                name="autoUpdate"
                onChange={[Function]}
                type="checkbox"
              />
               
              Auto-aggiorna arrivi?
            </label>
            <button
              className="link-button pull-right"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "small",
                }
              }
            >
              <Icon
                className=""
                type="refresh"
              >
                <FontAwesome
                  className=""
                  fixedWidth={true}
                  name="refresh"
                  type="refresh"
                >
                  <span
                    aria-hidden={true}
                    className="fa fa-refresh fa-fw"
                    type="refresh"
                  />
                </FontAwesome>
              </Icon>
               
              00:17
            </button>
          </div>
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;

exports[`components > viewers > stop viewer should render countdown times for stop times departing 48+ hours from start of service 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopData={
        Object {
          "agencyName": "TriMet",
          "amenities": Array [
            "Crosswalk near stop",
            "Curb ramp near stop",
            "Pavement at back door",
            "Pavement at front door",
            "Schedule display",
            "Sidewalk at stop",
            "Traffic signal",
          ],
          "code": "9860",
          "desc": "Eastbound stop in Portland (Stop ID 9860)",
          "id": "TriMet:9860",
          "lat": 45.522919,
          "lon": -122.689717,
          "mode": "BUS",
          "name": "W Burnside & SW 18th",
          "routes": Array [
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:20",
              "longName": "Burnside/Stark",
              "mode": "BUS",
              "shortName": "20",
              "sortOrder": 2600,
              "sortOrderSet": true,
              "type": 3,
            },
          ],
          "rsn": "20",
          "stopTimes": Array [
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2041",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 175860,
                  "realtimeDeparture": 175860,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 175860,
                  "scheduledDeparture": 175860,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230375",
                },
              ],
            },
          ],
          "stopTimesLastUpdated": 1565248650040,
          "type": 3,
          "url": "http://trimet.org/#tracker/stop/9860",
        }
      }
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:9860",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              W Burnside & SW 18th
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
        <div
          className="stop-viewer-body"
        >
          <div>
            <div>
              <b>
                Stop ID
              </b>
              : 
              9860
              <button
                className="link-button pull-right"
                onClick={[Function]}
                style={
                  Object {
                    "fontSize": "small",
                  }
                }
              >
                <Icon
                  type="calendar"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="calendar"
                    type="calendar"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-calendar fa-fw"
                      type="calendar"
                    />
                  </FontAwesome>
                </Icon>
                 
                View 
                schedule
              </button>
            </div>
            <b>
              Viaggia:
            </b>
            <FromToLocationPicker
              fromText="Da qui"
              location={null}
              onFromClick={[Function]}
              onToClick={[Function]}
              setLocation={null}
              showIcons={true}
              toText="To here"
            >
              <styled__FromToPickerSpan>
                <span
                  className="styled__FromToPickerSpan-p56b41-1 ddYzcs"
                >
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="from"
                      >
                        <styled__FromIcon
                          className=""
                          size="0.9em"
                          title="From Location Icon"
                        >
                          <DotCircle
                            className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                            size="0.9em"
                            title="From Location Icon"
                          >
                            <Styled(Component)
                              className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 512 512"
                              size="0.9em"
                              title="From Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 512 512"
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    From Location Icon
                                  </title>
                                  <path
                                    d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </DotCircle>
                        </styled__FromIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          Da qui
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="to"
                      >
                        <styled__ToIcon
                          className=""
                          size="0.9em"
                          title="To Location Icon"
                        >
                          <MapMarkerAlt
                            className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                            size="0.9em"
                            title="To Location Icon"
                          >
                            <Styled(Component)
                              className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 384 512"
                              size="0.9em"
                              title="To Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 384 512"
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 384 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    To Location Icon
                                  </title>
                                  <path
                                    d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </MapMarkerAlt>
                        </styled__ToIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          To here
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                </span>
              </styled__FromToPickerSpan>
            </FromToLocationPicker>
          </div>
          <div
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:20-Gresham TC"
              pattern={
                Object {
                  "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                  "headsign": "Gresham TC",
                  "id": "TriMet:20:1:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:20",
                  "longName": "Burnside/Stark",
                  "mode": "BUS",
                  "shortName": "20",
                  "sortOrder": 2600,
                  "sortOrderSet": true,
                  "type": 3,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2041",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 175860,
                    "realtimeDeparture": 175860,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 175860,
                    "scheduledDeparture": 175860,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230375",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      20
                    </b>
                     To 
                    Gresham TC
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 14,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div>
                          52 min
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
          </div>
          <div
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <label
              style={
                Object {
                  "fontSize": "small",
                  "fontWeight": 300,
                }
              }
            >
              <input
                checked={true}
                name="autoUpdate"
                onChange={[Function]}
                type="checkbox"
              />
               
              Auto-aggiorna arrivi?
            </label>
            <button
              className="link-button pull-right"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "small",
                }
              }
            >
              <Icon
                className=""
                type="refresh"
              >
                <FontAwesome
                  className=""
                  fixedWidth={true}
                  name="refresh"
                  type="refresh"
                >
                  <span
                    aria-hidden={true}
                    className="fa fa-refresh fa-fw"
                    type="refresh"
                  />
                </FontAwesome>
              </Icon>
               
              00:17
            </button>
          </div>
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;

exports[`components > viewers > stop viewer should render times after midnight with the correct day of week 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopData={
        Object {
          "agencyName": "TriMet",
          "amenities": Array [
            "Crosswalk near stop",
            "Curb ramp near stop",
            "Pavement at back door",
            "Pavement at front door",
            "Schedule display",
            "Sidewalk at stop",
            "Traffic signal",
          ],
          "code": "9860",
          "desc": "Eastbound stop in Portland (Stop ID 9860)",
          "id": "TriMet:9860",
          "lat": 45.522919,
          "lon": -122.689717,
          "mode": "BUS",
          "name": "W Burnside & SW 18th",
          "routes": Array [
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:20",
              "longName": "Burnside/Stark",
              "mode": "BUS",
              "shortName": "20",
              "sortOrder": 2600,
              "sortOrderSet": true,
              "type": 3,
            },
          ],
          "rsn": "20",
          "stopTimes": Array [
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2041",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 89460,
                  "realtimeDeparture": 89460,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 89460,
                  "scheduledDeparture": 89460,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230375",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2043",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 93120,
                  "realtimeDeparture": 93120,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 93120,
                  "scheduledDeparture": 93120,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230376",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2049",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 96780,
                  "realtimeDeparture": 96780,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 96780,
                  "scheduledDeparture": 96780,
                  "serviceDay": 1565161200,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230377",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:01",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2067",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 13980,
                  "realtimeDeparture": 13980,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 13980,
                  "scheduledDeparture": 13980,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230305",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2034",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 17580,
                  "realtimeDeparture": 17580,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 17580,
                  "scheduledDeparture": 17580,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230306",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2069",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 19020,
                  "realtimeDeparture": 19020,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 19020,
                  "scheduledDeparture": 19020,
                  "serviceDay": 1565247600,
                  "stopCount": 132,
                  "stopId": "TriMet:9860",
                  "stopIndex": 38,
                  "timepoint": true,
                  "tripId": "TriMet:9230307",
                },
              ],
            },
          ],
          "stopTimesLastUpdated": 1565248650040,
          "type": 3,
          "url": "http://trimet.org/#tracker/stop/9860",
        }
      }
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:9860",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              W Burnside & SW 18th
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
        <div
          className="stop-viewer-body"
        >
          <div>
            <div>
              <b>
                Stop ID
              </b>
              : 
              9860
              <button
                className="link-button pull-right"
                onClick={[Function]}
                style={
                  Object {
                    "fontSize": "small",
                  }
                }
              >
                <Icon
                  type="calendar"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="calendar"
                    type="calendar"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-calendar fa-fw"
                      type="calendar"
                    />
                  </FontAwesome>
                </Icon>
                 
                View 
                schedule
              </button>
            </div>
            <b>
              Viaggia:
            </b>
            <FromToLocationPicker
              fromText="Da qui"
              location={null}
              onFromClick={[Function]}
              onToClick={[Function]}
              setLocation={null}
              showIcons={true}
              toText="To here"
            >
              <styled__FromToPickerSpan>
                <span
                  className="styled__FromToPickerSpan-p56b41-1 ddYzcs"
                >
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="from"
                      >
                        <styled__FromIcon
                          className=""
                          size="0.9em"
                          title="From Location Icon"
                        >
                          <DotCircle
                            className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                            size="0.9em"
                            title="From Location Icon"
                          >
                            <Styled(Component)
                              className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 512 512"
                              size="0.9em"
                              title="From Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 512 512"
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    From Location Icon
                                  </title>
                                  <path
                                    d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </DotCircle>
                        </styled__FromIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          Da qui
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="to"
                      >
                        <styled__ToIcon
                          className=""
                          size="0.9em"
                          title="To Location Icon"
                        >
                          <MapMarkerAlt
                            className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                            size="0.9em"
                            title="To Location Icon"
                          >
                            <Styled(Component)
                              className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 384 512"
                              size="0.9em"
                              title="To Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 384 512"
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 384 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    To Location Icon
                                  </title>
                                  <path
                                    d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </MapMarkerAlt>
                        </styled__ToIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          To here
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                </span>
              </styled__FromToPickerSpan>
            </FromToLocationPicker>
          </div>
          <div
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:20-Gresham TC"
              pattern={
                Object {
                  "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                  "headsign": "Gresham TC",
                  "id": "TriMet:20:1:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:20",
                  "longName": "Burnside/Stark",
                  "mode": "BUS",
                  "shortName": "20",
                  "sortOrder": 2600,
                  "sortOrderSet": true,
                  "type": 3,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2041",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 89460,
                    "realtimeDeparture": 89460,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 89460,
                    "scheduledDeparture": 89460,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230375",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2043",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 93120,
                    "realtimeDeparture": 93120,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 93120,
                    "scheduledDeparture": 93120,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230376",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2049",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 96780,
                    "realtimeDeparture": 96780,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 96780,
                    "scheduledDeparture": 96780,
                    "serviceDay": 1565161200,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230377",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2067",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 13980,
                    "realtimeDeparture": 13980,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 13980,
                    "scheduledDeparture": 13980,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230305",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2034",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 17580,
                    "realtimeDeparture": 17580,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 17580,
                    "scheduledDeparture": 17580,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230306",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2069",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 19020,
                    "realtimeDeparture": 19020,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 19020,
                    "scheduledDeparture": 19020,
                    "serviceDay": 1565247600,
                    "stopCount": 132,
                    "stopId": "TriMet:9860",
                    "stopIndex": 38,
                    "timepoint": true,
                    "tripId": "TriMet:9230307",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      20
                    </b>
                     To 
                    Gresham TC
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Thursday
                        </div>
                        <div>
                          00:51
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
          </div>
          <div
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <label
              style={
                Object {
                  "fontSize": "small",
                  "fontWeight": 300,
                }
              }
            >
              <input
                checked={true}
                name="autoUpdate"
                onChange={[Function]}
                type="checkbox"
              />
               
              Auto-aggiorna arrivi?
            </label>
            <button
              className="link-button pull-right"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "small",
                }
              }
            >
              <Icon
                className=""
                type="refresh"
              >
                <FontAwesome
                  className=""
                  fixedWidth={true}
                  name="refresh"
                  type="refresh"
                >
                  <span
                    aria-hidden={true}
                    className="fa fa-refresh fa-fw"
                    type="refresh"
                  />
                </FontAwesome>
              </Icon>
               
              00:17
            </button>
          </div>
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;

exports[`components > viewers > stop viewer should render with OTP transit index data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopData={
        Object {
          "code": "715",
          "desc": "Eastbound stop in Portland (Stop ID 715)",
          "id": "TriMet:715",
          "lat": 45.522912,
          "locationType": 0,
          "lon": -122.678538,
          "name": "W Burnside & SW 8th",
          "routes": Array [
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:20",
              "longName": "Burnside/Stark",
              "mode": "BUS",
              "shortName": "20",
              "sortOrder": 2600,
            },
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:94",
              "longName": "Pacific Hwy/Sherwood",
              "mode": "BUS",
              "shortName": "94",
              "sortOrder": 9100,
            },
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:36",
              "longName": "South Shore",
              "mode": "BUS",
              "shortName": "36",
              "sortOrder": 3900,
            },
          ],
          "stopTimes": Array [
            Object {
              "pattern": Object {
                "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Tualatin Park & Ride",
                "id": "TriMet:36:0:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3668",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 58260,
                  "realtimeDeparture": 58260,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 58260,
                  "scheduledDeparture": 58260,
                  "serviceDay": 1565074800,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231858",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3670",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 61740,
                  "realtimeDeparture": 61740,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 61740,
                  "scheduledDeparture": 61740,
                  "serviceDay": 1565074800,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231860",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3668",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 58260,
                  "realtimeDeparture": 58260,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 58260,
                  "scheduledDeparture": 58260,
                  "serviceDay": 1565161200,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231858",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Sherwood",
                "id": "TriMet:94:0:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9468",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 52080,
                  "realtimeDeparture": 52080,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 52080,
                  "scheduledDeparture": 52080,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238187",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9372",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54120,
                  "realtimeDeparture": 54120,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54120,
                  "scheduledDeparture": 54120,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238189",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9474",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 56880,
                  "realtimeDeparture": 56880,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 56880,
                  "scheduledDeparture": 56880,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238194",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "King City",
                "id": "TriMet:94:0:02",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565074800,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565161200,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565247600,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Sherwood",
                "id": "TriMet:94:0:03",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565074800,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565161200,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565247600,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2045",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 64859,
                  "realtimeDeparture": 64859,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 64859,
                  "scheduledDeparture": 64859,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230358",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2047",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 66668,
                  "realtimeDeparture": 66668,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 66668,
                  "scheduledDeparture": 66668,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230360",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2048",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 67628,
                  "realtimeDeparture": 67628,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 67628,
                  "scheduledDeparture": 67628,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230361",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:01",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2046",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 65759,
                  "realtimeDeparture": 65759,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 65759,
                  "scheduledDeparture": 65759,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230359",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2036",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 70028,
                  "realtimeDeparture": 70028,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 70028,
                  "scheduledDeparture": 70028,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230363",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2071",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 72436,
                  "realtimeDeparture": 72436,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 72436,
                  "scheduledDeparture": 72436,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230365",
                },
              ],
            },
          ],
          "stopTimesLastUpdated": 1565052624406,
          "url": "http://trimet.org/#tracker/stop/715",
          "vehicleType": -999,
          "vehicleTypeSet": false,
          "wheelchairBoarding": 0,
          "zoneId": "B",
        }
      }
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:715",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              W Burnside & SW 8th
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
        <div
          className="stop-viewer-body"
        >
          <div>
            <div>
              <b>
                Stop ID
              </b>
              : 
              715
              <button
                className="link-button pull-right"
                onClick={[Function]}
                style={
                  Object {
                    "fontSize": "small",
                  }
                }
              >
                <Icon
                  type="calendar"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="calendar"
                    type="calendar"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-calendar fa-fw"
                      type="calendar"
                    />
                  </FontAwesome>
                </Icon>
                 
                View 
                schedule
              </button>
            </div>
            <b>
              Viaggia:
            </b>
            <FromToLocationPicker
              fromText="Da qui"
              location={null}
              onFromClick={[Function]}
              onToClick={[Function]}
              setLocation={null}
              showIcons={true}
              toText="To here"
            >
              <styled__FromToPickerSpan>
                <span
                  className="styled__FromToPickerSpan-p56b41-1 ddYzcs"
                >
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="from"
                      >
                        <styled__FromIcon
                          className=""
                          size="0.9em"
                          title="From Location Icon"
                        >
                          <DotCircle
                            className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                            size="0.9em"
                            title="From Location Icon"
                          >
                            <Styled(Component)
                              className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 512 512"
                              size="0.9em"
                              title="From Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 512 512"
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    From Location Icon
                                  </title>
                                  <path
                                    d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </DotCircle>
                        </styled__FromIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          Da qui
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="to"
                      >
                        <styled__ToIcon
                          className=""
                          size="0.9em"
                          title="To Location Icon"
                        >
                          <MapMarkerAlt
                            className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                            size="0.9em"
                            title="To Location Icon"
                          >
                            <Styled(Component)
                              className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 384 512"
                              size="0.9em"
                              title="To Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 384 512"
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 384 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    To Location Icon
                                  </title>
                                  <path
                                    d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </MapMarkerAlt>
                        </styled__ToIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          To here
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                </span>
              </styled__FromToPickerSpan>
            </FromToLocationPicker>
          </div>
          <div
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:20-Gresham TC"
              pattern={
                Object {
                  "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                  "headsign": "Gresham TC",
                  "id": "TriMet:20:1:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:20",
                  "longName": "Burnside/Stark",
                  "mode": "BUS",
                  "shortName": "20",
                  "sortOrder": 2600,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2045",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 64859,
                    "realtimeDeparture": 64859,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 64859,
                    "scheduledDeparture": 64859,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230358",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2047",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 66668,
                    "realtimeDeparture": 66668,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 66668,
                    "scheduledDeparture": 66668,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230360",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2048",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 67628,
                    "realtimeDeparture": 67628,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 67628,
                    "scheduledDeparture": 67628,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230361",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2046",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 65759,
                    "realtimeDeparture": 65759,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 65759,
                    "scheduledDeparture": 65759,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230359",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2036",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 70028,
                    "realtimeDeparture": 70028,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 70028,
                    "scheduledDeparture": 70028,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230363",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2071",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 72436,
                    "realtimeDeparture": 72436,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 72436,
                    "scheduledDeparture": 72436,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230365",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      20
                    </b>
                     To 
                    Gresham TC
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Monday
                        </div>
                        <div>
                          18:00
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:36-Tualatin Park & Ride"
              pattern={
                Object {
                  "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                  "headsign": "Tualatin Park & Ride",
                  "id": "TriMet:36:0:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:36",
                  "longName": "South Shore",
                  "mode": "BUS",
                  "shortName": "36",
                  "sortOrder": 3900,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "3668",
                    "departureDelay": 0,
                    "headsign": "Tualatin Park & Ride",
                    "realtime": false,
                    "realtimeArrival": 58260,
                    "realtimeDeparture": 58260,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 58260,
                    "scheduledDeparture": 58260,
                    "serviceDay": 1565074800,
                    "stopCount": 63,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9231858",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "3670",
                    "departureDelay": 0,
                    "headsign": "Tualatin Park & Ride",
                    "realtime": false,
                    "realtimeArrival": 61740,
                    "realtimeDeparture": 61740,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 61740,
                    "scheduledDeparture": 61740,
                    "serviceDay": 1565074800,
                    "stopCount": 63,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9231860",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "3668",
                    "departureDelay": 0,
                    "headsign": "Tualatin Park & Ride",
                    "realtime": false,
                    "realtimeArrival": 58260,
                    "realtimeDeparture": 58260,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 58260,
                    "scheduledDeparture": 58260,
                    "serviceDay": 1565161200,
                    "stopCount": 63,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9231858",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      36
                    </b>
                     To 
                    Tualatin Park & Ride
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Tuesday
                        </div>
                        <div>
                          16:11
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:94-Sherwood"
              pattern={
                Object {
                  "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                  "headsign": "Sherwood",
                  "id": "TriMet:94:0:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:94",
                  "longName": "Pacific Hwy/Sherwood",
                  "mode": "BUS",
                  "shortName": "94",
                  "sortOrder": 9100,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9468",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 52080,
                    "realtimeDeparture": 52080,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 52080,
                    "scheduledDeparture": 52080,
                    "serviceDay": 1565074800,
                    "stopCount": 40,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238187",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9372",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 54120,
                    "realtimeDeparture": 54120,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 54120,
                    "scheduledDeparture": 54120,
                    "serviceDay": 1565074800,
                    "stopCount": 40,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238189",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9474",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 56880,
                    "realtimeDeparture": 56880,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 56880,
                    "scheduledDeparture": 56880,
                    "serviceDay": 1565074800,
                    "stopCount": 40,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238194",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9470",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 54720,
                    "realtimeDeparture": 54720,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 54720,
                    "scheduledDeparture": 54720,
                    "serviceDay": 1565074800,
                    "stopCount": 34,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238190",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9470",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 54720,
                    "realtimeDeparture": 54720,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 54720,
                    "scheduledDeparture": 54720,
                    "serviceDay": 1565161200,
                    "stopCount": 34,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238190",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9470",
                    "departureDelay": 0,
                    "headsign": "Sherwood",
                    "realtime": false,
                    "realtimeArrival": 54720,
                    "realtimeDeparture": 54720,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 54720,
                    "scheduledDeparture": 54720,
                    "serviceDay": 1565247600,
                    "stopCount": 34,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238190",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      94
                    </b>
                     To 
                    Sherwood
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Tuesday
                        </div>
                        <div>
                          14:28
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:94-King City"
              pattern={
                Object {
                  "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                  "headsign": "King City",
                  "id": "TriMet:94:0:02",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:94",
                  "longName": "Pacific Hwy/Sherwood",
                  "mode": "BUS",
                  "shortName": "94",
                  "sortOrder": 9100,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9472",
                    "departureDelay": 0,
                    "headsign": "King City",
                    "realtime": false,
                    "realtimeArrival": 55320,
                    "realtimeDeparture": 55320,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 55320,
                    "scheduledDeparture": 55320,
                    "serviceDay": 1565074800,
                    "stopCount": 23,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238192",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9472",
                    "departureDelay": 0,
                    "headsign": "King City",
                    "realtime": false,
                    "realtimeArrival": 55320,
                    "realtimeDeparture": 55320,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 55320,
                    "scheduledDeparture": 55320,
                    "serviceDay": 1565161200,
                    "stopCount": 23,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238192",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "9472",
                    "departureDelay": 0,
                    "headsign": "King City",
                    "realtime": false,
                    "realtimeArrival": 55320,
                    "realtimeDeparture": 55320,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 55320,
                    "scheduledDeparture": 55320,
                    "serviceDay": 1565247600,
                    "stopCount": 23,
                    "stopId": "TriMet:715",
                    "stopIndex": 0,
                    "timepoint": true,
                    "tripId": "TriMet:9238192",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      94
                    </b>
                     To 
                    King City
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Tuesday
                        </div>
                        <div>
                          15:22
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
          </div>
          <div
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <label
              style={
                Object {
                  "fontSize": "small",
                  "fontWeight": 300,
                }
              }
            >
              <input
                checked={true}
                name="autoUpdate"
                onChange={[Function]}
                type="checkbox"
              />
               
              Auto-aggiorna arrivi?
            </label>
            <button
              className="link-button pull-right"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "small",
                }
              }
            >
              <Icon
                className=""
                type="refresh"
              >
                <FontAwesome
                  className=""
                  fixedWidth={true}
                  name="refresh"
                  type="refresh"
                >
                  <span
                    aria-hidden={true}
                    className="fa fa-refresh fa-fw"
                    type="refresh"
                  />
                </FontAwesome>
              </Icon>
               
              17:50
            </button>
          </div>
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;

exports[`components > viewers > stop viewer should render with TriMet transit index data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopData={
        Object {
          "agencyName": "TriMet",
          "amenities": Array [
            "Bench near stop",
            "Crosswalk near stop",
            "Curb ramp near stop",
            "Lighting at stop",
            "Pavement at back door",
            "Pavement at front door",
            "Schedule display",
            "Sidewalk at stop",
          ],
          "code": "715",
          "desc": "Eastbound stop in Portland (Stop ID 715)",
          "id": "TriMet:715",
          "lat": 45.522912,
          "lon": -122.678538,
          "mode": "BUS",
          "name": "W Burnside & SW 8th",
          "routes": Array [
            Object {
              "agencyName": "TriMet",
              "id": "TriMet:20",
              "longName": "Burnside/Stark",
              "mode": "BUS",
              "shortName": "20",
              "sortOrder": 2600,
              "sortOrderSet": true,
              "type": 3,
            },
          ],
          "rsn": "20, 36, 94",
          "stopTimes": Array [
            Object {
              "pattern": Object {
                "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Tualatin Park & Ride",
                "id": "TriMet:36:0:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3668",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 58260,
                  "realtimeDeparture": 58260,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 58260,
                  "scheduledDeparture": 58260,
                  "serviceDay": 1565074800,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231858",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3670",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 61740,
                  "realtimeDeparture": 61740,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 61740,
                  "scheduledDeparture": 61740,
                  "serviceDay": 1565074800,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231860",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "3668",
                  "departureDelay": 0,
                  "headsign": "Tualatin Park & Ride",
                  "realtime": false,
                  "realtimeArrival": 58260,
                  "realtimeDeparture": 58260,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 58260,
                  "scheduledDeparture": 58260,
                  "serviceDay": 1565161200,
                  "stopCount": 63,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9231858",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Sherwood",
                "id": "TriMet:94:0:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9468",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 52080,
                  "realtimeDeparture": 52080,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 52080,
                  "scheduledDeparture": 52080,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238187",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9372",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54120,
                  "realtimeDeparture": 54120,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54120,
                  "scheduledDeparture": 54120,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238189",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9474",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 56880,
                  "realtimeDeparture": 56880,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 56880,
                  "scheduledDeparture": 56880,
                  "serviceDay": 1565074800,
                  "stopCount": 40,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238194",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "King City",
                "id": "TriMet:94:0:02",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565074800,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565161200,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9472",
                  "departureDelay": 0,
                  "headsign": "King City",
                  "realtime": false,
                  "realtimeArrival": 55320,
                  "realtimeDeparture": 55320,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 55320,
                  "scheduledDeparture": 55320,
                  "serviceDay": 1565247600,
                  "stopCount": 23,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238192",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                "headsign": "Sherwood",
                "id": "TriMet:94:0:03",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565074800,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565161200,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "9470",
                  "departureDelay": 0,
                  "headsign": "Sherwood",
                  "realtime": false,
                  "realtimeArrival": 54720,
                  "realtimeDeparture": 54720,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 54720,
                  "scheduledDeparture": 54720,
                  "serviceDay": 1565247600,
                  "stopCount": 34,
                  "stopId": "TriMet:715",
                  "stopIndex": 0,
                  "timepoint": true,
                  "tripId": "TriMet:9238190",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:04",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2067",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 63959,
                  "realtimeDeparture": 63959,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 63959,
                  "scheduledDeparture": 63959,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230357",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2045",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 64859,
                  "realtimeDeparture": 64859,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 64859,
                  "scheduledDeparture": 64859,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230358",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2047",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 66668,
                  "realtimeDeparture": 66668,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 66668,
                  "scheduledDeparture": 66668,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230360",
                },
              ],
            },
            Object {
              "pattern": Object {
                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                "headsign": "Gresham TC",
                "id": "TriMet:20:1:01",
              },
              "times": Array [
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2046",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 65759,
                  "realtimeDeparture": 65759,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 65759,
                  "scheduledDeparture": 65759,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230359",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2036",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 70028,
                  "realtimeDeparture": 70028,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 70028,
                  "scheduledDeparture": 70028,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230363",
                },
                Object {
                  "arrivalDelay": 0,
                  "blockId": "2071",
                  "departureDelay": 0,
                  "headsign": "Gresham TC",
                  "realtime": false,
                  "realtimeArrival": 72436,
                  "realtimeDeparture": 72436,
                  "realtimeState": "SCHEDULED",
                  "scheduledArrival": 72436,
                  "scheduledDeparture": 72436,
                  "serviceDay": 1564988400,
                  "stopCount": 132,
                  "stopId": "TriMet:715",
                  "stopIndex": 42,
                  "timepoint": false,
                  "tripId": "TriMet:9230365",
                },
              ],
            },
          ],
          "stopTimesLastUpdated": 1565051923389,
          "type": 3,
          "url": "http://trimet.org/#tracker/stop/715",
        }
      }
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:715",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              W Burnside & SW 8th
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
        <div
          className="stop-viewer-body"
        >
          <div>
            <div>
              <b>
                Stop ID
              </b>
              : 
              715
              <button
                className="link-button pull-right"
                onClick={[Function]}
                style={
                  Object {
                    "fontSize": "small",
                  }
                }
              >
                <Icon
                  type="calendar"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="calendar"
                    type="calendar"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-calendar fa-fw"
                      type="calendar"
                    />
                  </FontAwesome>
                </Icon>
                 
                View 
                schedule
              </button>
            </div>
            <b>
              Viaggia:
            </b>
            <FromToLocationPicker
              fromText="Da qui"
              location={null}
              onFromClick={[Function]}
              onToClick={[Function]}
              setLocation={null}
              showIcons={true}
              toText="To here"
            >
              <styled__FromToPickerSpan>
                <span
                  className="styled__FromToPickerSpan-p56b41-1 ddYzcs"
                >
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="from"
                      >
                        <styled__FromIcon
                          className=""
                          size="0.9em"
                          title="From Location Icon"
                        >
                          <DotCircle
                            className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                            size="0.9em"
                            title="From Location Icon"
                          >
                            <Styled(Component)
                              className="styled__FromIcon-sc-3u4t5y-0 dfSUki"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 512 512"
                              size="0.9em"
                              title="From Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 512 512"
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__FromIcon-sc-3u4t5y-0 dfSUki"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    From Location Icon
                                  </title>
                                  <path
                                    d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </DotCircle>
                        </styled__FromIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          Da qui
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                  <styled__LocationPickerSpan>
                    <span
                      className="styled__LocationPickerSpan-p56b41-0 hDNuMB"
                    >
                      <LocationIcon
                        className=""
                        size="0.9em"
                        title=""
                        type="to"
                      >
                        <styled__ToIcon
                          className=""
                          size="0.9em"
                          title="To Location Icon"
                        >
                          <MapMarkerAlt
                            className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                            size="0.9em"
                            title="To Location Icon"
                          >
                            <Styled(Component)
                              className="styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                  "xmlns": "http://www.w3.org/2000/svg",
                                }
                              }
                              iconVerticalAlign="-.125em"
                              iconViewBox="0 0 384 512"
                              size="0.9em"
                              title="To Location Icon"
                            >
                              <ForwardRef
                                className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="-.125em"
                                iconViewBox="0 0 384 512"
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <svg
                                  className="sc-AxjAm dVOzqR styled__ToIcon-sc-3u4t5y-2 ikmaMd"
                                  fill="currentColor"
                                  focusable="false"
                                  height="0.9em"
                                  role="img"
                                  viewBox="0 0 384 512"
                                  width="0.9em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <title
                                    key="icon-title"
                                  >
                                    To Location Icon
                                  </title>
                                  <path
                                    d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                    fill="currentColor"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </Styled(Component)>
                          </MapMarkerAlt>
                        </styled__ToIcon>
                      </LocationIcon>
                      <styled__Button
                        onClick={[Function]}
                      >
                        <button
                          className="styled__Button-p56b41-2 bjZNPA"
                          onClick={[Function]}
                        >
                          To here
                        </button>
                      </styled__Button>
                    </span>
                  </styled__LocationPickerSpan>
                </span>
              </styled__FromToPickerSpan>
            </FromToLocationPicker>
          </div>
          <div
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <PatternRow
              homeTimezone="America/Los_Angeles"
              key="TriMet:20-Gresham TC"
              pattern={
                Object {
                  "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                  "headsign": "Gresham TC",
                  "id": "TriMet:20:1:04",
                }
              }
              route={
                Object {
                  "agencyName": "TriMet",
                  "id": "TriMet:20",
                  "longName": "Burnside/Stark",
                  "mode": "BUS",
                  "shortName": "20",
                  "sortOrder": 2600,
                  "sortOrderSet": true,
                  "type": 3,
                }
              }
              showScheduleView={false}
              stopTimes={
                Array [
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2067",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 63959,
                    "realtimeDeparture": 63959,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 63959,
                    "scheduledDeparture": 63959,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230357",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2045",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 64859,
                    "realtimeDeparture": 64859,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 64859,
                    "scheduledDeparture": 64859,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230358",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2047",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 66668,
                    "realtimeDeparture": 66668,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 66668,
                    "scheduledDeparture": 66668,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230360",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2046",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 65759,
                    "realtimeDeparture": 65759,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 65759,
                    "scheduledDeparture": 65759,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230359",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2036",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 70028,
                    "realtimeDeparture": 70028,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 70028,
                    "scheduledDeparture": 70028,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230363",
                  },
                  Object {
                    "arrivalDelay": 0,
                    "blockId": "2071",
                    "departureDelay": 0,
                    "headsign": "Gresham TC",
                    "realtime": false,
                    "realtimeArrival": 72436,
                    "realtimeDeparture": 72436,
                    "realtimeState": "SCHEDULED",
                    "scheduledArrival": 72436,
                    "scheduledDeparture": 72436,
                    "serviceDay": 1564988400,
                    "stopCount": 132,
                    "stopId": "TriMet:715",
                    "stopIndex": 42,
                    "timepoint": false,
                    "tripId": "TriMet:9230365",
                  },
                ]
              }
              stopViewerConfig={
                Object {
                  "numberOfDepartures": 3,
                  "timeRange": 345600,
                }
              }
              timeFormat="HH:mm"
            >
              <div
                className="route-row"
              >
                <div
                  className="header"
                >
                  <div
                    className="route-name"
                  >
                    <b>
                      20
                    </b>
                     To 
                    Gresham TC
                  </div>
                  <div
                    className="next-trip-preview"
                  >
                    <div>
                      <div
                        style={
                          Object {
                            "float": "left",
                          }
                        }
                      >
                        <Icon
                          style={
                            Object {
                              "color": "#888",
                              "fontSize": "0.8em",
                              "marginRight": 2,
                            }
                          }
                          type="clock-o"
                        >
                          <FontAwesome
                            fixedWidth={true}
                            name="clock-o"
                            style={
                              Object {
                                "color": "#888",
                                "fontSize": "0.8em",
                                "marginRight": 2,
                              }
                            }
                            type="clock-o"
                          >
                            <span
                              aria-hidden={true}
                              className="fa fa-clock-o fa-fw"
                              style={
                                Object {
                                  "color": "#888",
                                  "fontSize": "0.8em",
                                  "marginRight": 2,
                                }
                              }
                              type="clock-o"
                            />
                          </FontAwesome>
                        </Icon>
                      </div>
                      <div
                        style={
                          Object {
                            "fontSize": 12,
                            "marginLeft": 20,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "marginBottom": -4,
                            }
                          }
                        >
                          Monday
                        </div>
                        <div>
                          17:45
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="expansion-button-container"
                  >
                    <button
                      className="expansion-button"
                      onClick={[Function]}
                    >
                      <Icon
                        type="chevron-down"
                      >
                        <FontAwesome
                          fixedWidth={true}
                          name="chevron-down"
                          type="chevron-down"
                        >
                          <span
                            aria-hidden={true}
                            className="fa fa-chevron-down fa-fw"
                            type="chevron-down"
                          />
                        </FontAwesome>
                      </Icon>
                    </button>
                  </div>
                </div>
                <VelocityTransitionGroup
                  enter={
                    Object {
                      "animation": "slideDown",
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": "slideUp",
                    }
                  }
                  runOnMount={false}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component="div"
                  >
                    <div />
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </div>
            </PatternRow>
          </div>
          <div
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <label
              style={
                Object {
                  "fontSize": "small",
                  "fontWeight": 300,
                }
              }
            >
              <input
                checked={true}
                name="autoUpdate"
                onChange={[Function]}
                type="checkbox"
              />
               
              Auto-aggiorna arrivi?
            </label>
            <button
              className="link-button pull-right"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "small",
                }
              }
            >
              <Icon
                className=""
                type="refresh"
              >
                <FontAwesome
                  className=""
                  fixedWidth={true}
                  name="refresh"
                  type="refresh"
                >
                  <span
                    aria-hidden={true}
                    className="fa fa-refresh fa-fw"
                    type="refresh"
                  />
                </FontAwesome>
              </Icon>
               
              17:38
            </button>
          </div>
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;

exports[`components > viewers > stop viewer should render with initial stop id and no stop times 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(StopViewer)>
    <StopViewer
      autoRefreshStopTimes={true}
      favoriteStops={Array []}
      findStop={[Function]}
      findStopTimesForStop={[Function]}
      forgetStop={[Function]}
      homeTimezone="America/Los_Angeles"
      rememberStop={[Function]}
      setLocation={[Function]}
      setMainPanelContent={[Function]}
      stopViewerConfig={
        Object {
          "numberOfDepartures": 3,
          "timeRange": 345600,
        }
      }
      timeFormat="HH:mm"
      toggleAutoRefresh={[Function]}
      viewedStop={
        Object {
          "stopId": "TriMet:13170",
        }
      }
    >
      <div
        className="stop-viewer"
      >
        <div
          className="stop-viewer-header"
        >
          <div
            className="back-button-container"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="btn btn-sm btn-default"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <Icon
                  type="arrow-left"
                >
                  <FontAwesome
                    fixedWidth={true}
                    name="arrow-left"
                    type="arrow-left"
                  >
                    <span
                      aria-hidden={true}
                      className="fa fa-arrow-left fa-fw"
                      type="arrow-left"
                    />
                  </FontAwesome>
                </Icon>
                Back
              </button>
            </Button>
          </div>
          <div
            className="header-text"
          >
            <span>
              Loading Stop...
            </span>
          </div>
          <div
            style={
              Object {
                "clear": "both",
              }
            }
          />
        </div>
      </div>
    </StopViewer>
  </Connect(StopViewer)>
</Provider>
`;
