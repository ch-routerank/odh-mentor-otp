{"version":3,"sources":["query-record.js"],"names":["QueryRecordLayout","props","parseUrlQueryString","query","params","JSON","parse","queryParams","departArrive","arriveBy","index","_viewQuery","Component","mapStateToProps","state","ownProps","formActions","mapDispatchToProps","QueryRecord"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGMA,iB;;;;;;;;;;;;;;;;iEACS,YAAM;AAAA,wBACoB,MAAKC,KADzB;AAAA,UACVC,mBADU,eACVA,mBADU;AAAA,UACWC,KADX,eACWA,KADX;AAEjB,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,WAAjB,CAAf;;AACA,UAAI,cAAcH,MAAlB,EAA0B;AACxBA,QAAAA,MAAM,CAACI,YAAP,GAAsBJ,MAAM,CAACK,QAAP,GAAkB,QAAlB,GAA6B,QAAnD;AACD;;AACDP,MAAAA,mBAAmB,CAACE,MAAD,CAAnB;AACD,K;;;;;;;6BAES;AAAA,UACDM,KADC,GACQ,KAAKT,KADb,CACDS,KADC;AAER,0BACE,sDACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,UAAtB;AAAkC,QAAA,SAAS,EAAC;AAA5C,sBACE,6BAAC,aAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADF,CADF,EAGY,GAHZ,YAISD,KAAK,GAAG,CAJjB,CADF;AAQD;;;;EApB6BE,gB;;AAuBhC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;IAIOb,mB,GAAuBc,W,CAAvBd,mB;AAEP,IAAMe,kBAAkB,GAAG;AAAEf,EAAAA,mBAAmB,EAAnBA;AAAF,CAA3B;AAEA,IAAMgB,WAAW,GAAG,yBAAQL,eAAR,EAAyBI,kBAAzB,EAA6CjB,iBAA7C,CAApB;eACekB,W","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as formActions from '../../actions/form'\nimport Icon from '../narrative/icon'\n\n/**\n * Displays information for a query stored for the Call Taker module.\n */\nclass QueryRecordLayout extends Component {\n  _viewQuery = () => {\n    const {parseUrlQueryString, query} = this.props\n    const params = JSON.parse(query.queryParams)\n    if ('arriveBy' in params) {\n      params.departArrive = params.arriveBy ? 'ARRIVE' : 'DEPART'\n    }\n    parseUrlQueryString(params)\n  }\n\n  render () {\n    const {index} = this.props\n    return (\n      <li>\n        <button onClick={this._viewQuery} className='clear-button-formatting'>\n          <Icon type='search' />\n        </button>{' '}\n        Query {index + 1}\n      </li>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {}\n}\n\nconst {parseUrlQueryString} = formActions\n\nconst mapDispatchToProps = { parseUrlQueryString }\n\nconst QueryRecord = connect(mapStateToProps, mapDispatchToProps)(QueryRecordLayout)\nexport default QueryRecord\n"]}