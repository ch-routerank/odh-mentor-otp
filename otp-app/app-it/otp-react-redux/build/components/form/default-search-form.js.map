{"version":3,"sources":["default-search-form.js"],"names":["DefaultSearchForm","state","desktopDateTimeExpanded","desktopSettingsExpanded","props","mobile","ModeIcon","actionText","Component","PropTypes","bool","elementType","isRequired","showFrom","showTo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,iB;;;;;AAWnB,+BAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,uBAAuB,EAAE,KADd;AAEXC,MAAAA,uBAAuB,EAAE;AAFd,KAAb;AAFa;AAMd;;;;6BAES;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,QADR,eACQA,QADR;AAER,UAAMC,UAAU,GAAGF,MAAM,GAAG,KAAH,GAAW,OAApC;AAEA,0BACE,uDACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,+BAAD;AACE,QAAA,gBAAgB,oCAA6BE,UAA7B,eADlB;AAEE,QAAA,YAAY,EAAC,MAFf;AAGE,QAAA,eAAe;AAHjB,QADF,eAOE,6BAAC,+BAAD;AACE,QAAA,gBAAgB,iCAA0BA,UAA1B,eADlB;AAEE,QAAA,YAAY,EAAC,IAFf;AAGE,QAAA,eAAe,EAAE,CAACF;AAHpB,QAPF,eAaE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,qBAAD;AAAc,QAAA,OAAO,eAAE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAvB,QADF,CAbF,CADF,eAmBE,6BAAC,wBAAD;AAAiB,QAAA,QAAQ,EAAEC;AAA3B,QAnBF,CADF;AAuBD;;;;EA9C4CE,gB;;;;gBAA1BR,iB,eACA;AACjBK,EAAAA,MAAM,EAAEI,mBAAUC,IADD;AAEjBJ,EAAAA,QAAQ,EAAEG,mBAAUE,WAAV,CAAsBC;AAFf,C;;gBADAZ,iB,kBAMG;AACpBa,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,MAAM,EAAE;AAFY,C","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport LocationField from './connected-location-field'\nimport TabbedFormPanel from './tabbed-form-panel'\nimport SwitchButton from './switch-button'\n\nexport default class DefaultSearchForm extends Component {\n  static propTypes = {\n    mobile: PropTypes.bool,\n    ModeIcon: PropTypes.elementType.isRequired\n  }\n\n  static defaultProps = {\n    showFrom: true,\n    showTo: true\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      desktopDateTimeExpanded: false,\n      desktopSettingsExpanded: false\n    }\n  }\n\n  render () {\n    const { mobile, ModeIcon } = this.props\n    const actionText = mobile ? 'tappa' : 'clicca'\n\n    return (\n      <div>\n        <div className='locations'>\n          <LocationField\n            inputPlaceholder={`Inserisci partenza o ${actionText} su mappa...`}\n            locationType='from'\n            showClearButton\n          />\n\n          <LocationField\n            inputPlaceholder={`Inserisci destinazione o ${actionText} su mappa...`}\n            locationType='to'\n            showClearButton={!mobile}\n          />\n\n          <div className='switch-button-container'>\n            <SwitchButton content={<i className='fa fa-exchange fa-rotate-90' />} />\n          </div>\n        </div>\n\n        <TabbedFormPanel ModeIcon={ModeIcon} />\n      </div>\n    )\n  }\n}\n"]}