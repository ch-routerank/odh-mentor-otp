{"version":3,"sources":["results-screen.js"],"names":["LocationContainer","styled","div","LocationSummaryContainer","LocationsSummaryColFromTo","Col","LocationsSummaryRow","Row","StyledLocationIcon","LocationIcon","MobileResultsScreen","props","clearActiveSearch","setMobileScreen","MobileScreens","SEARCH_FORM","_setExpanded","state","expanded","setUseRealtimeResponse","useRealtime","coreUtils","ui","enableScrollForSelector","prevProps","activeLeg","setState","refs","scrollTop","activeItineraryIndex","error","itineraryClass","itineraryFooter","LegIcon","query","realtimeEffects","resultCount","narrativeContainerStyle","top","overflowY","height","backgroundColor","headerAction","showRealtimeAnnotation","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","locationsSummary","from","name","marginTop","to","_editSearchClicked","width","dots","i","push","map","bottom","_optionClicked","marginLeft","padding","Component","PropTypes","number","element","object","func","mapStateToProps","ownProps","activeSearch","otp","response","nonRealtimeResponse","itineraries","currentQuery","routingType","length","profile","activeItinerary","mapDispatchToProps"],"mappings":"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","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport LocationIcon from '@opentripplanner/location-icon'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport DefaultMap from '../map/default-map'\nimport ErrorMessage from '../form/error-message'\nimport ItineraryCarousel from '../narrative/itinerary-carousel'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setUseRealtimeResponse } from '../../actions/narrative'\nimport { clearActiveSearch } from '../../actions/form'\nimport { getActiveItineraries, getActiveSearch, getRealtimeEffects } from '../../util/state'\n\nconst LocationContainer = styled.div`\n  font-weight: 300;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nconst LocationSummaryContainer = styled.div`\n  height: 50px;\n  left: 0;\n  padding-right: 10px;\n  position: fixed;\n  right: 0;\n  top: 50px;\n`\n\nconst LocationsSummaryColFromTo = styled(Col)`\n  font-size: 1.1em;\n  line-height: 1.2em;\n`\n\nconst LocationsSummaryRow = styled(Row)`\n  padding: 4px 8px;\n`\n\nconst StyledLocationIcon = styled(LocationIcon)`\n  margin: 3px;\n`\n\nclass MobileResultsScreen extends Component {\n  static propTypes = {\n    activeItineraryIndex: PropTypes.number,\n    map: PropTypes.element,\n    query: PropTypes.object,\n    resultCount: PropTypes.number,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      expanded: false\n    }\n  }\n\n  componentDidMount () {\n    // Get the target element that we want to persist scrolling for\n    // FIXME Do we need to add something that removes the listeners when\n    // component unmounts?\n    coreUtils.ui.enableScrollForSelector('.mobile-narrative-container')\n  }\n\n  componentDidUpdate (prevProps) {\n    // Check if the active leg changed\n    if (this.props.activeLeg !== prevProps.activeLeg) {\n      this._setExpanded(false)\n    }\n  }\n\n  _setExpanded (expanded) {\n    this.setState({ expanded })\n    this.refs['narrative-container'].scrollTop = 0\n  }\n\n  _editSearchClicked = () => {\n    this.props.clearActiveSearch()\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  _optionClicked = () => {\n    this._setExpanded(!this.state.expanded)\n  }\n\n  _toggleRealtime = () => this.props.setUseRealtimeResponse({useRealtime: !this.props.useRealtime})\n\n  render () {\n    const {\n      activeItineraryIndex,\n      error,\n      itineraryClass,\n      itineraryFooter,\n      LegIcon,\n      query,\n      realtimeEffects,\n      resultCount,\n      useRealtime\n    } = this.props\n    const { expanded } = this.state\n\n    const narrativeContainerStyle = expanded\n      ? { top: 140, overflowY: 'auto' }\n      : { height: 80, overflowY: 'hidden' }\n\n    // Ensure that narrative covers map.\n    narrativeContainerStyle.backgroundColor = 'white'\n\n    let headerAction = null\n    const showRealtimeAnnotation = realtimeEffects.isAffectedByRealtimeData && (\n      realtimeEffects.exceedsThreshold ||\n      realtimeEffects.routesDiffer ||\n      !useRealtime\n    )\n\n    /* Old navbar alert\n    if (showRealtimeAnnotation) {\n      headerAction = (\n        <RealtimeAnnotation\n          componentClass='popover'\n          toggleRealtime={this._toggleRealtime}\n          realtimeEffects={realtimeEffects}\n          useRealtime={useRealtime}\n        />\n      )\n    */\n\n    const locationsSummary = (\n      <LocationSummaryContainer>\n        <LocationsSummaryRow className='locations-summary'>\n          <LocationsSummaryColFromTo xs={8} sm={11}>\n            <LocationContainer>\n              <StyledLocationIcon type='from' /> { query.from ? query.from.name : '' }\n            </LocationContainer>\n            <LocationContainer style={{ marginTop: 2 }}>\n              <StyledLocationIcon type='to' /> { query.to ? query.to.name : '' }\n            </LocationContainer>\n          </LocationsSummaryColFromTo>\n          <Col xs={4} sm={1}>\n            <Button\n              className='edit-search-button pull-right'\n              onClick={this._editSearchClicked}\n            >Edit</Button>\n          </Col>\n        </LocationsSummaryRow>\n      </LocationSummaryContainer>\n    )\n\n    if (error) {\n      return (\n        <MobileContainer>\n          <MobileNavigationBar headerText='Nessun viaggio trovato' />\n          {locationsSummary}\n          <div className='results-error-map'><DefaultMap /></div>\n          <div className='results-error-message'>\n            <ErrorMessage error={error} />\n            <div className='options-lower-tray mobile-padding'>\n              <Button className='back-to-search-button' onClick={this._editSearchClicked} style={{ width: '100%' }}>\n                <i className='fa fa-arrow-left' /> Back to Search\n              </Button>\n            </div>\n          </div>\n        </MobileContainer>\n      )\n    }\n\n    // Construct the 'dots'\n    const dots = []\n    for (let i = 0; i < resultCount; i++) {\n      dots.push(<div key={i} className={`dot${activeItineraryIndex === i ? ' active' : ''}`} />)\n    }\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={resultCount\n            ? `Trovate ${resultCount} Opzion${resultCount > 1 ? 'i' : 'e'}`\n            : 'Attendi...'\n          }\n          headerAction={headerAction}\n        />\n        {locationsSummary}\n\n        <div className='results-map'>\n          {this.props.map}\n        </div>\n\n        <div\n          className='mobile-narrative-header'\n          style={{ bottom: expanded ? null : 100, top: expanded ? 100 : null }}\n          onClick={this._optionClicked}\n        >\n          Option {activeItineraryIndex + 1}\n          <i className={`fa fa-caret-${expanded ? 'down' : 'up'}`} style={{ marginLeft: 8 }} />\n        </div>\n\n        <div\n          ref='narrative-container'\n          className='mobile-narrative-container'\n          style={narrativeContainerStyle}\n        >\n          <ItineraryCarousel\n            itineraryClass={itineraryClass}\n            itineraryFooter={itineraryFooter}\n            hideHeader\n            expanded={this.state.expanded}\n            onClick={this._optionClicked}\n            showRealtimeAnnotation={showRealtimeAnnotation}\n            LegIcon={LegIcon}\n          />\n        </div>\n\n        <div className='dots-container' style={{ padding: 'none' }}>{dots}</div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {useRealtime} = state.otp\n  const response = !activeSearch\n    ? null\n    : useRealtime ? activeSearch.response : activeSearch.nonRealtimeResponse\n\n  const realtimeEffects = getRealtimeEffects(state.otp)\n  const itineraries = getActiveItineraries(state.otp)\n  return {\n    query: state.otp.currentQuery,\n    realtimeEffects,\n    error: response && response.error,\n    resultCount:\n      response\n        ? activeSearch.query.routingType === 'ITINERARY'\n          ? itineraries.length\n          : response.otp.profile.length\n        : null,\n    useRealtime,\n    activeItineraryIndex: activeSearch ? activeSearch.activeItinerary : null,\n    activeLeg: activeSearch ? activeSearch.activeLeg : null\n  }\n}\n\nconst mapDispatchToProps = {\n  clearActiveSearch,\n  setMobileScreen,\n  setUseRealtimeResponse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileResultsScreen)\n"]}