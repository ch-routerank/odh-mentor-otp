{"version":3,"sources":["form-navigation-buttons.js"],"names":["StyledFormGroup","FormGroup","LeftButton","Button","RightButton","FormNavigationButtons","backButton","okayButton","disabled","onClick","text","buttonType","PropTypes","shape","bool","func","isRequired","string","propTypes","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,eAAe,GAAG,+BAAOC,yBAAP,CAAH,mBAArB;AAGA,IAAMC,UAAU,GAAG,+BAAOC,sBAAP,CAAH,oBAAhB;AAGA,IAAMC,WAAW,GAAG,+BAAOD,sBAAP,CAAH,oBAAjB;AAIA;;;;AAGA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAC5BC,UAD4B,QAC5BA,UAD4B;AAAA,MAE5BC,UAF4B,QAE5BA,UAF4B;AAAA,sBAI5B,6BAAC,eAAD,qBACE;AAAK,kBAAW;AAAhB,KACGD,UAAU,iBACT,6BAAC,UAAD;AACE,IAAA,QAAQ,EAAEA,UAAU,CAACE,QADvB;AAEE,IAAA,OAAO,EAAEF,UAAU,CAACG;AAFtB,KAIGH,UAAU,CAACI,IAJd,CAFJ,EASGH,UAAU,iBACT,6BAAC,WAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,QAAQ,EAAEA,UAAU,CAACC,QAFvB;AAGE,IAAA,OAAO,EAAED,UAAU,CAACE;AAHtB,KAKGF,UAAU,CAACG,IALd,CAVJ,CADF,CAJ4B;AAAA,CAA9B;;AA2BA,IAAMC,UAAU,GAAGC,mBAAUC,KAAV,CAAgB;AACjCL,EAAAA,QAAQ,EAAEI,mBAAUE,IADa;;AAEjC;AACAL,EAAAA,OAAO,EAAEG,mBAAUG,IAAV,CAAeC,UAHS;;AAIjC;AACAN,EAAAA,IAAI,EAAEE,mBAAUK;AALiB,CAAhB,CAAnB;;AAQAZ,qBAAqB,CAACa,SAAtB,GAAkC;AAChC;AACAZ,EAAAA,UAAU,EAAEK,UAFoB;;AAGhC;AACAJ,EAAAA,UAAU,EAAEI;AAJoB,CAAlC;AAOAN,qBAAqB,CAACc,YAAtB,GAAqC;AACnCb,EAAAA,UAAU,EAAE,IADuB;AAEnCC,EAAAA,UAAU,EAAE;AAFuB,CAArC;eAKeF,qB","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Button, FormGroup } from 'react-bootstrap'\nimport styled from 'styled-components'\n\n// Styles\nconst StyledFormGroup = styled(FormGroup)`\n  padding: 20px 0px;\n`\nconst LeftButton = styled(Button)`\n  float: left;\n`\nconst RightButton = styled(Button)`\n  float: right;\n`\n\n/**\n * The button bar at the bottom of the account screen.\n */\nconst FormNavigationButtons = ({\n  backButton,\n  okayButton\n}) => (\n  <StyledFormGroup>\n    <nav aria-label='...'>\n      {backButton && (\n        <LeftButton\n          disabled={backButton.disabled}\n          onClick={backButton.onClick}\n        >\n          {backButton.text}\n        </LeftButton>\n      )}\n      {okayButton && (\n        <RightButton\n          bsStyle='primary'\n          disabled={okayButton.disabled}\n          onClick={okayButton.onClick}\n        >\n          {okayButton.text}\n        </RightButton>\n      )}\n    </nav>\n  </StyledFormGroup>\n)\n\nconst buttonType = PropTypes.shape({\n  disabled: PropTypes.bool,\n  /** Triggered when the button is clicked. */\n  onClick: PropTypes.func.isRequired,\n  /** The text to display on the button. */\n  text: PropTypes.string\n})\n\nFormNavigationButtons.propTypes = {\n  /** Information about the back button. */\n  backButton: buttonType,\n  /** Information about the okay (action) button. */\n  okayButton: buttonType\n}\n\nFormNavigationButtons.defaultProps = {\n  backButton: null,\n  okayButton: null\n}\n\nexport default FormNavigationButtons\n"]}