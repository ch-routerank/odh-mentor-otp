{"version":3,"sources":["sequential-pane-display.js"],"names":["PaneContainer","styled","div","SequentialPaneDisplay","props","onComplete","paneSequence","activePaneId","state","nextId","setState","prevId","initialPaneId","activePane","disableNext","Pane","pane","title","onClick","_handleToPrevPane","text","disabled","_handleToNextPane","Component","PropTypes","string","isRequired","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA,IAAMA,aAAa,GAAGC,0BAAOC,GAAV,mBAAnB;AAIA;;;;;IAGMC,qB;;;;;AAOJ,iCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,wEAQA,YAAM;AAAA,wBACa,MAAKA,KADlB;AAAA,UAChBC,UADgB,eAChBA,UADgB;AAAA,UACJC,YADI,eACJA,YADI;AAAA,UAEhBC,YAFgB,GAEC,MAAKC,KAFN,CAEhBD,YAFgB;AAGxB,UAAME,MAAM,GAAGH,YAAY,CAACC,YAAD,CAAZ,CAA2BE,MAA1C;;AAEA,UAAIA,MAAJ,EAAY;AACV,cAAKC,QAAL,CAAc;AACZH,UAAAA,YAAY,EAAEE;AADF,SAAd;AAGD,OAJD,MAIO,IAAIJ,UAAJ,EAAgB;AACrBA,QAAAA,UAAU;AACX;AACF,KApBmB;;AAAA,wEAsBA,YAAM;AAAA,UAChBC,YADgB,GACC,MAAKF,KADN,CAChBE,YADgB;AAAA,UAEhBC,YAFgB,GAEC,MAAKC,KAFN,CAEhBD,YAFgB;;AAGxB,YAAKG,QAAL,CAAc;AACZH,QAAAA,YAAY,EAAED,YAAY,CAACC,YAAD,CAAZ,CAA2BI;AAD7B,OAAd;AAGD,KA5BmB;;AAGlB,UAAKH,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAEH,KAAK,CAACQ;AADT,KAAb;AAHkB;AAMnB;;;;6BAwBS;AAAA,UACAN,YADA,GACiB,KAAKF,KADtB,CACAE,YADA;AAAA,UAEAC,YAFA,GAEiB,KAAKC,KAFtB,CAEAD,YAFA;AAGR,UAAMM,UAAU,GAAGP,YAAY,CAACC,YAAD,CAA/B;AAHQ,UAIAO,WAJA,GAI0DD,UAJ1D,CAIAC,WAJA;AAAA,UAIaL,MAJb,GAI0DI,UAJ1D,CAIaJ,MAJb;AAAA,UAI2BM,IAJ3B,GAI0DF,UAJ1D,CAIqBG,IAJrB;AAAA,UAIiCL,MAJjC,GAI0DE,UAJ1D,CAIiCF,MAJjC;AAAA,UAIyCP,KAJzC,GAI0DS,UAJ1D,CAIyCT,KAJzC;AAAA,UAIgDa,KAJhD,GAI0DJ,UAJ1D,CAIgDI,KAJhD;AAMR,0BACE,yEACE,yCAAKA,KAAL,CADF,eAEE,6BAAC,aAAD,qBACE,6BAAC,IAAD,EAAUb,KAAV,CADF,CAFF,eAME,6BAAC,8BAAD;AACE,QAAA,UAAU,EAAEO,MAAM,IAAI;AACpBO,UAAAA,OAAO,EAAE,KAAKC,iBADM;AAEpBC,UAAAA,IAAI,EAAE;AAFc,SADxB;AAKE,QAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAEP,WADA;AAEVI,UAAAA,OAAO,EAAE,KAAKI,iBAFJ;AAGVF,UAAAA,IAAI,EAAEX,MAAM,GAAG,MAAH,GAAY;AAHd;AALd,QANF,CADF;AAoBD;;;;EA/DiCc,gB;;gBAA9BpB,qB,eACe;AACjBS,EAAAA,aAAa,EAAEY,mBAAUC,MAAV,CAAiBC,UADf;AAEjBrB,EAAAA,UAAU,EAAEmB,mBAAUG,IAAV,CAAeD,UAFV;AAGjBpB,EAAAA,YAAY,EAAEkB,mBAAUI,MAAV,CAAiBF;AAHd,C;;eAiENvB,qB","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport FormNavigationButtons from './form-navigation-buttons'\n\n// Styles.\n// TODO: Improve layout.\nconst PaneContainer = styled.div`\n  min-height: 20em;\n`\n\n/**\n * This component handles the flow between screens for new OTP user accounts.\n */\nclass SequentialPaneDisplay extends Component {\n  static propTypes = {\n    initialPaneId: PropTypes.string.isRequired,\n    onComplete: PropTypes.func.isRequired,\n    paneSequence: PropTypes.object.isRequired\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      activePaneId: props.initialPaneId\n    }\n  }\n\n  _handleToNextPane = () => {\n    const { onComplete, paneSequence } = this.props\n    const { activePaneId } = this.state\n    const nextId = paneSequence[activePaneId].nextId\n\n    if (nextId) {\n      this.setState({\n        activePaneId: nextId\n      })\n    } else if (onComplete) {\n      onComplete()\n    }\n  }\n\n  _handleToPrevPane = () => {\n    const { paneSequence } = this.props\n    const { activePaneId } = this.state\n    this.setState({\n      activePaneId: paneSequence[activePaneId].prevId\n    })\n  }\n\n  render () {\n    const { paneSequence } = this.props\n    const { activePaneId } = this.state\n    const activePane = paneSequence[activePaneId]\n    const { disableNext, nextId, pane: Pane, prevId, props, title } = activePane\n\n    return (\n      <>\n        <h1>{title}</h1>\n        <PaneContainer>\n          <Pane {...props} />\n        </PaneContainer>\n\n        <FormNavigationButtons\n          backButton={prevId && {\n            onClick: this._handleToPrevPane,\n            text: 'Back'\n          }}\n          okayButton={{\n            disabled: disableNext,\n            onClick: this._handleToNextPane,\n            text: nextId ? 'Next' : 'Finish'\n          }}\n        />\n      </>\n    )\n  }\n}\n\nexport default SequentialPaneDisplay\n"]}