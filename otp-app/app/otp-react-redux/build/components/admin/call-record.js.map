{"version":3,"sources":["call-record.js"],"names":["CallRecord","expanded","props","call","fetchQueries","state","id","setState","RED","index","inProgress","searches","activeQueries","map","searchId","color","fontSize","verticalAlign","display","marginLeft","length","query","i","margin","width","_toggleExpanded","endTime","fromNow","queries","Component"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport React, { Component } from 'react'\n\nimport CallTimeCounter from './call-time-counter'\nimport Icon from '../narrative/icon'\nimport QueryRecord from './query-record'\nimport {searchToQuery} from '../../util/call-taker'\n\n/**\n * Displays information for a particular call record in the Call Taker window.\n */\nexport default class CallRecord extends Component {\n  state = {\n    expanded: false\n  }\n\n  _toggleExpanded = () => {\n    const {call, fetchQueries} = this.props\n    const {expanded} = this.state\n    if (!expanded) fetchQueries(call.id)\n    this.setState({expanded: !expanded})\n  }\n\n  render () {\n    // FIXME: consolidate red color with call taker controls\n    const RED = '#C35134'\n    const {call, index, inProgress, searches} = this.props\n    const {expanded} = this.state\n    if (!call) return null\n    if (inProgress) {\n      // Map search IDs made during active call to queries.\n      const activeQueries = call.searches\n        .map(searchId => searchToQuery(searches[searchId], call, {}))\n      return (\n        <div>\n          <div className='pull-right'>\n            <Icon\n              style={{color: RED, fontSize: '8px', verticalAlign: '2px'}}\n              type='circle'\n              className='animate-flicker' />\n            <CallTimeCounter style={{display: 'inline'}} />\n          </div>\n          <Icon type='phone' className='fa-flip-horizontal' />{' '}\n          [Active call]\n          <br />\n          <small style={{marginLeft: '20px'}}>\n            In progress... click <Icon type='stop' /> to save{' '}\n            ({call.searches.length} searches)\n          </small>\n          <div>\n            {activeQueries.length > 0\n              ? activeQueries.map((query, i) => (\n                <QueryRecord key={i} query={query} index={i} />\n              ))\n              : 'No queries recorded.'\n            }\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div style={{margin: '5px 0'}}>\n        <button\n          style={{width: '100%'}}\n          className='clear-button-formatting'\n          onClick={this._toggleExpanded}\n        >\n          <Icon type='phone' className='fa-flip-horizontal' />\n          Call {index} ({moment(call.endTime).fromNow()})\n        </button>\n        {expanded\n          ? <ul className='list-unstyled'>\n            {call.queries && call.queries.length > 0\n              ? call.queries.map((query, i) => (\n                <QueryRecord key={i} query={query} index={i} />\n              ))\n              : 'No queries recorded.'\n            }\n          </ul>\n          : null\n        }\n      </div>\n    )\n  }\n}\n"]}