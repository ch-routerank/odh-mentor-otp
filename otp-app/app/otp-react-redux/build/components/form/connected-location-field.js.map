{"version":3,"sources":["connected-location-field.js"],"names":["StyledLocationField","LocationField","DropdownContainer","FormGroup","Input","InputGroup","InputGroupAddon","MenuItemA","mapStateToProps","state","ownProps","otp","config","currentQuery","location","transitIndex","user","currentPosition","nearbyStops","sessionSearches","activeSearch","query","geocoderConfig","geocoder","locationType","showUserSettings","stopsIndex","stops","userLocationsAndRecentPlaces","locations","recentPlaces","mapDispatchToProps","addLocationSearch","findNearbyStops","getCurrentPosition","onLocationSelected","clearLocation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAQA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,GAAG,+BAAOC,sBAAP,CAAH,oBAGrBC,yBAHqB,EASrBC,iBATqB,EAerBC,aAfqB,EAqBrBC,kBArBqB,EAyBrBC,uBAzBqB,EA+BrBC,iBA/BqB,EAmCrBA,iBAnCqB,CAAzB,C,CAwCA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,mBACoBD,KAAK,CAACE,GAD1B;AAAA,MACnCC,MADmC,cACnCA,MADmC;AAAA,MAC3BC,YAD2B,cAC3BA,YAD2B;AAAA,MACbC,QADa,cACbA,QADa;AAAA,MACHC,YADG,cACHA,YADG;AAAA,MACWC,IADX,cACWA,IADX;AAAA,MAEnCC,eAFmC,GAEeH,QAFf,CAEnCG,eAFmC;AAAA,MAElBC,WAFkB,GAEeJ,QAFf,CAElBI,WAFkB;AAAA,MAELC,eAFK,GAEeL,QAFf,CAELK,eAFK;AAG3C,MAAMC,YAAY,GAAG,4BAAgBX,KAAK,CAACE,GAAtB,CAArB;AACA,MAAMU,KAAK,GAAGD,YAAY,GAAGA,YAAY,CAACC,KAAhB,GAAwBR,YAAlD;AACA,SAAO;AACLI,IAAAA,eAAe,EAAfA,eADK;AAELK,IAAAA,cAAc,EAAEV,MAAM,CAACW,QAFlB;AAGLT,IAAAA,QAAQ,EAAEO,KAAK,CAACX,QAAQ,CAACc,YAAV,CAHV;AAILN,IAAAA,WAAW,EAAXA,WAJK;AAKLC,IAAAA,eAAe,EAAfA,eALK;AAMLM,IAAAA,gBAAgB,EAAE,gCAAoBhB,KAAK,CAACE,GAA1B,CANb;AAOLe,IAAAA,UAAU,EAAEX,YAAY,CAACY,KAPpB;AAQLC,IAAAA,4BAA4B,+BAAMZ,IAAI,CAACa,SAAX,sBAAyBb,IAAI,CAACc,YAA9B;AARvB,GAAP;AAUD,CAfD;;AAiBA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,iBAAiB,EAAjBA,2BADyB;AAEzBC,EAAAA,eAAe,EAAfA,oBAFyB;AAGzBC,EAAAA,kBAAkB,EAAlBA,4BAHyB;AAIzBC,EAAAA,kBAAkB,EAAlBA,uBAJyB;AAKzBC,EAAAA,aAAa,EAAbA;AALyB,CAA3B;;eAQe,yBAAQ5B,eAAR,EAAyBuB,kBAAzB,EAA6C/B,mBAA7C,C","sourcesContent":["import LocationField from '@opentripplanner/location-field'\nimport {\n  DropdownContainer,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  MenuItemA\n} from '@opentripplanner/location-field/lib/styled'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { clearLocation, onLocationSelected } from '../../actions/map'\nimport { addLocationSearch, getCurrentPosition } from '../../actions/location'\nimport { findNearbyStops } from '../../actions/api'\nimport { getActiveSearch, getShowUserSettings } from '../../util/state'\n\nconst StyledLocationField = styled(LocationField)`\n  width: 100%;\n\n  ${DropdownContainer} {\n    display: table-cell;\n    vertical-align: middle;\n    width: 1%;\n  }\n\n  ${FormGroup} {\n    display: table;\n    padding: 6px 12px;\n    width: 100%;\n  }\n\n  ${Input} {\n    display: table-cell;\n    padding: 6px 12px;\n    width: 100%;\n  }\n\n  ${InputGroup} {\n    width: 100%;\n  }\n\n  ${InputGroupAddon} {\n    display: table-cell;\n    vertical-align: middle;\n    width: 1%;\n  }\n\n  ${MenuItemA} {\n    text-decoration: none;\n  }\n\n  ${MenuItemA}:hover {\n    color: #333;\n  }\n`\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const { config, currentQuery, location, transitIndex, user } = state.otp\n  const { currentPosition, nearbyStops, sessionSearches } = location\n  const activeSearch = getActiveSearch(state.otp)\n  const query = activeSearch ? activeSearch.query : currentQuery\n  return {\n    currentPosition,\n    geocoderConfig: config.geocoder,\n    location: query[ownProps.locationType],\n    nearbyStops,\n    sessionSearches,\n    showUserSettings: getShowUserSettings(state.otp),\n    stopsIndex: transitIndex.stops,\n    userLocationsAndRecentPlaces: [...user.locations, ...user.recentPlaces]\n  }\n}\n\nconst mapDispatchToProps = {\n  addLocationSearch,\n  findNearbyStops,\n  getCurrentPosition,\n  onLocationSelected,\n  clearLocation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyledLocationField)\n"]}