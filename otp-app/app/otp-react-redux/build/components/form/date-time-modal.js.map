{"version":3,"sources":["date-time-modal.js"],"names":["DateTimeModal","props","date","dateFormatLegacy","departArrive","setQueryParam","time","timeFormatLegacy","Component","PropTypes","func","mapStateToProps","state","ownProps","otp","currentQuery","config","coreUtils","getTimeFormat","getDateFormat","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;;;;;;;;;6BAKM;AAAA,wBACgF,KAAKC,KADrF;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,gBADN,eACMA,gBADN;AAAA,UACwBC,YADxB,eACwBA,YADxB;AAAA,UACsCC,aADtC,eACsCA,aADtC;AAAA,UACqDC,IADrD,eACqDA,IADrD;AAAA,UAC2DC,gBAD3D,eAC2DA,gBAD3D;AAGR,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,6BAAC,8BAAD;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,IAAI,EAAEL,IAFR;AAGE,QAAA,YAAY,EAAEE,YAHhB;AAIE,QAAA,kBAAkB,EAAEC,aAJtB;AAKE,QAAA,IAAI,EAAEC,IALR,CAME;AACA;AACA;AACA;AACA;AAVF;AAWE,QAAA,gBAAgB,EAAEH,gBAXpB;AAYE,QAAA,gBAAgB,EAAEI;AAZpB,QADF,CADF,CADF;AAoBD;;;;EA5ByBC,gB;;gBAAtBR,a,eACe;AACjBK,EAAAA,aAAa,EAAEI,mBAAUC;AADR,C;;AA8BrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,8BACND,KAAK,CAACE,GAAN,CAAUC,YADJ;AAAA,MACnCX,YADmC,yBACnCA,YADmC;AAAA,MACrBF,IADqB,yBACrBA,IADqB;AAAA,MACfI,IADe,yBACfA,IADe;AAE3C,MAAMU,MAAM,GAAGJ,KAAK,CAACE,GAAN,CAAUE,MAAzB;AACA,SAAO;AACLA,IAAAA,MAAM,EAANA,MADK;AAELZ,IAAAA,YAAY,EAAZA,YAFK;AAGLF,IAAAA,IAAI,EAAJA,IAHK;AAILI,IAAAA,IAAI,EAAJA,IAJK;AAKL;AACAC,IAAAA,gBAAgB,EAAEU,mBAAUX,IAAV,CAAeY,aAAf,CAA6BF,MAA7B,CANb;AAOLb,IAAAA,gBAAgB,EAAEc,mBAAUX,IAAV,CAAea,aAAf,CAA6BH,MAA7B;AAPb,GAAP;AASD,CAZD;;AAcA,IAAMI,kBAAkB,GAAG;AACzBf,EAAAA,aAAa,EAAbA;AADyB,CAA3B;;eAIe,yBAAQM,eAAR,EAAyBS,kBAAzB,EAA6CpB,aAA7C,C","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\n\nimport { StyledDateTimeSelector } from './styled'\n\nclass DateTimeModal extends Component {\n  static propTypes = {\n    setQueryParam: PropTypes.func\n  }\n\n  render () {\n    const { date, dateFormatLegacy, departArrive, setQueryParam, time, timeFormatLegacy } = this.props\n\n    return (\n      <div className='date-time-modal'>\n        <div className='main-panel'>\n          <StyledDateTimeSelector\n            className='date-time-selector'\n            date={date}\n            departArrive={departArrive}\n            onQueryParamChange={setQueryParam}\n            time={time}\n            // These props below are for Safari on MacOS, and legacy browsers\n            // that don't support `<input type=\"time|date\">`.\n            // These props are not relevant in modern browsers,\n            // where `<input type=\"time|date\">` already\n            // formats the time|date according to the OS settings.\n            dateFormatLegacy={dateFormatLegacy}\n            timeFormatLegacy={timeFormatLegacy}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time } = state.otp.currentQuery\n  const config = state.otp.config\n  return {\n    config,\n    departArrive,\n    date,\n    time,\n    // These props below are for legacy browsers (see render method above).\n    timeFormatLegacy: coreUtils.time.getTimeFormat(config),\n    dateFormatLegacy: coreUtils.time.getDateFormat(config)\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimeModal)\n"]}