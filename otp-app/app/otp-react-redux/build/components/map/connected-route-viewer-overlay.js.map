{"version":3,"sources":["connected-route-viewer-overlay.js"],"names":["mapStateToProps","state","ownProps","viewedRoute","otp","ui","routeData","transitIndex","routes","routeId","mapDispatchToProps","RouteViewerOverlay"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMC,WAAW,GAAGF,KAAK,CAACG,GAAN,CAAUC,EAAV,CAAaF,WAAjC;AACA,SAAO;AACLG,IAAAA,SAAS,EAAEH,WAAW,IAAIF,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBC,MAAtC,GACPP,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBC,MAAvB,CAA8BL,WAAW,CAACM,OAA1C,CADO,GAEP;AAHC,GAAP;AAKD,CAPD;;AASA,IAAMC,kBAAkB,GAAG,EAA3B;;eAEe,yBAAQV,eAAR,EAAyBU,kBAAzB,EAA6CC,2BAA7C,C","sourcesContent":["import RouteViewerOverlay from '@opentripplanner/route-viewer-overlay'\nimport { connect } from 'react-redux'\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const viewedRoute = state.otp.ui.viewedRoute\n  return {\n    routeData: viewedRoute && state.otp.transitIndex.routes\n      ? state.otp.transitIndex.routes[viewedRoute.routeId]\n      : null\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteViewerOverlay)\n"]}