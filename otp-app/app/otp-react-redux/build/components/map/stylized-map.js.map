{"version":3,"sources":["stylized-map.js"],"names":["STYLES","places","display","place","getId","coreUtils","map","isBikeshareStation","fill","stroke","r","stops_merged","data","index","utils","StylizedMap","el","document","getElementById","_transitive","Transitive","styles","gridCellSize","zoomFactors","minScale","internalVertexFactor","angleConstraint","mergeVertexThreshold","render","call","scaleExtent","on","setTransform","event","transform","prevProps","transitiveData","props","updateData","routingType","activeItinerary","focusJourney","journeys","journey_id","position","top","bottom","left","right","Component","PropTypes","number","string","toggleLabel","element","object","toggleName","mapStateToProps","state","ownProps","activeSearch","otp","query","response","plan","itins","visibleItinerary","itineraryToTransitive","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { select, event } from 'd3-selection'\nimport { zoom } from 'd3-zoom'\nimport coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Transitive from 'transitive-js'\n\nimport { getActiveSearch, getActiveItineraries } from '../../util/state'\n\nvar STYLES = {}\n\nSTYLES.places = {\n  display: function (display, place) {\n    if (\n      place.getId() !== 'from' &&\n      place.getId() !== 'to' &&\n      !coreUtils.map.isBikeshareStation(place)\n    ) {\n      return 'none'\n    }\n  },\n  fill: '#fff',\n  stroke: '#000',\n  'stroke-width': 2,\n  r: 8\n}\n\nSTYLES.stops_merged = {\n  r: function (display, data, index, utils) {\n    return 6\n  }\n}\n\nclass StylizedMap extends Component {\n  static propTypes = {\n    activeItinerary: PropTypes.number,\n    routingType: PropTypes.string,\n    toggleLabel: PropTypes.element,\n    transitiveData: PropTypes.object\n  }\n\n  static defaultProps = {\n    toggleName: 'Stylized'\n  }\n\n  componentDidMount () {\n    const el = document.getElementById('trn-canvas')\n    this._transitive = new Transitive({\n      el,\n      display: 'svg',\n      styles: STYLES,\n      gridCellSize: 200,\n      zoomFactors: [\n        {\n          minScale: 0,\n          gridCellSize: 300,\n          internalVertexFactor: 1000000,\n          angleConstraint: 45,\n          mergeVertexThreshold: 200\n        }\n      ]\n    })\n    this._transitive.render()\n\n    select(el).call(zoom()\n      .scaleExtent([1 / 2, 4])\n      .on('zoom', () => {\n        this._transitive.setTransform(event.transform)\n      })\n    )\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.transitiveData !== this.props.transitiveData) {\n      this._transitive.updateData(this.props.transitiveData, true)\n      this._transitive.render()\n    }\n\n    if ( // this block only applies for profile trips where active option changed\n      this.props.routingType === 'PROFILE' &&\n      prevProps.activeItinerary !== this.props.activeItinerary\n    ) {\n      if (this.props.activeItinerary == null) {\n        // no option selected; clear focus\n        this._transitive.focusJourney(null)\n        this._transitive.render()\n      } else if (this.props.transitiveData) {\n        this._transitive.focusJourney(\n          this.props.transitiveData.journeys[this.props.activeItinerary]\n            .journey_id\n        )\n        this._transitive.render()\n      }\n    }\n  }\n\n  render () {\n    return (\n      <div\n        id='trn-canvas'\n        style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0 }}\n      />\n    )\n  }\n}\n\n// connect to the redux store\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  let transitiveData = null\n  if (\n    activeSearch &&\n    activeSearch.query.routingType === 'ITINERARY' &&\n    activeSearch.response &&\n    activeSearch.response.plan\n  ) {\n    const itins = getActiveItineraries(state.otp)\n    const visibleItinerary = itins[activeSearch.activeItinerary]\n    if (visibleItinerary) transitiveData = coreUtils.map.itineraryToTransitive(visibleItinerary)\n  } else if (\n    activeSearch &&\n    activeSearch.response &&\n    activeSearch.response.otp\n  ) {\n    transitiveData = activeSearch.response.otp\n  }\n\n  return {\n    transitiveData,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    routingType: activeSearch && activeSearch.query && activeSearch.query.routingType\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StylizedMap)\n"]}