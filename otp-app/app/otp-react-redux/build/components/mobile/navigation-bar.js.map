{"version":3,"sources":["navigation-bar.js"],"names":["MobileNavigationBar","props","backScreen","onBackClicked","setMobileScreen","auth0Config","headerAction","headerText","showBackButton","title","_backButtonPressed","accountLinks","Component","PropTypes","number","element","string","bool","func","mapStateToProps","state","ownProps","otp","config","persistence","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,mB;;;;;;;;;;;;;;;;yEAUiB,YAAM;AAAA,wBACa,MAAKC,KADlB;AAAA,UACjBC,UADiB,eACjBA,UADiB;AAAA,UACLC,aADK,eACLA,aADK;AAEzB,UAAID,UAAJ,EAAgB,MAAKD,KAAL,CAAWG,eAAX,CAA2B,MAAKH,KAAL,CAAWC,UAAtC,EAAhB,KACK,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyCA,aAAa;AAC5D,K;;;;;;;6BAES;AAAA,yBAOJ,KAAKF,KAPD;AAAA,UAENI,WAFM,gBAENA,WAFM;AAAA,UAGNC,YAHM,gBAGNA,YAHM;AAAA,UAINC,UAJM,gBAINA,UAJM;AAAA,UAKNC,cALM,gBAKNA,cALM;AAAA,UAMNC,KANM,gBAMNA,KANM;AASR,0BACE,6BAAC,sBAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,QAAQ;AAAtB,sBAEE,6BAAC,sBAAD,CAAQ,MAAR,qBACE,6BAAC,sBAAD,CAAQ,KAAR,QACGD,cAAc,gBACX;AAAK,QAAA,SAAS,EAAC;AAAf,sBAA6B,6BAAC,yBAAD;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,KAAKE;AAA7C,QAA7B,CADW,gBAEX,6BAAC,gBAAD,OAHN,CADF,CAFF,eAWE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGH,UAAU,gBACP;AAAK,QAAA,SAAS,EAAC;AAAf,SAAqCA,UAArC,CADO,gBAEP,0CAAME,KAAN,CAHN,CAXF,EAkBGH,YAAY,iBACX;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAAuCA,YAAvC,CADF,CAnBJ,EA8BGD,WAAW,iBACV,6BAAC,2BAAD;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,KAAK,EAAEM;AAFT,QA/BJ,CADF;AAuCD;;;;EAhE+BC,gB,GAmElC;;;gBAnEMZ,mB,eACe;AACjBE,EAAAA,UAAU,EAAEW,mBAAUC,MADL;AAEjBR,EAAAA,YAAY,EAAEO,mBAAUE,OAFP;AAGjBR,EAAAA,UAAU,EAAEM,mBAAUG,MAHL;AAIjBR,EAAAA,cAAc,EAAEK,mBAAUI,IAJT;AAKjBb,EAAAA,eAAe,EAAES,mBAAUK,IALV;AAMjBT,EAAAA,KAAK,EAAEI,mBAAUE;AANA,C;;AAoErB,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLhB,IAAAA,WAAW,EAAE,0BAAee,KAAK,CAACE,GAAN,CAAUC,MAAV,CAAiBC,WAAhC;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG;AACzBrB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQe,eAAR,EAAyBM,kBAAzB,EAA6CzB,mBAA7C,C","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\nimport { connect } from 'react-redux'\n\nimport { setMobileScreen } from '../../actions/ui'\nimport AppMenu from '../app/app-menu'\nimport NavLoginButtonAuth0 from '../../components/user/nav-login-button-auth0'\nimport { accountLinks, getAuth0Config } from '../../util/auth'\n\nclass MobileNavigationBar extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    headerAction: PropTypes.element,\n    headerText: PropTypes.string,\n    showBackButton: PropTypes.bool,\n    setMobileScreen: PropTypes.func,\n    title: PropTypes.element\n  }\n\n  _backButtonPressed = () => {\n    const { backScreen, onBackClicked } = this.props\n    if (backScreen) this.props.setMobileScreen(this.props.backScreen)\n    else if (typeof onBackClicked === 'function') onBackClicked()\n  }\n\n  render () {\n    const {\n      auth0Config,\n      headerAction,\n      headerText,\n      showBackButton,\n      title\n    } = this.props\n\n    return (\n      <Navbar fluid fixedTop>\n\n        <Navbar.Header>\n          <Navbar.Brand>\n            {showBackButton\n              ? <div className='mobile-back'><FontAwesome name='arrow-left' onClick={this._backButtonPressed} /></div>\n              : <AppMenu />\n            }\n          </Navbar.Brand>\n        </Navbar.Header>\n\n        <div className='mobile-header'>\n          {headerText\n            ? <div className='mobile-header-text'>{headerText}</div>\n            : <div>{title}</div>\n          }\n        </div>\n\n        {headerAction && (\n          <div className='mobile-close'>\n            <div className='mobile-header-action'>{headerAction}</div>\n          </div>\n        )}\n\n        {/**\n          * HACK: Normally, NavLoginButtonAuth0 should be inside a <Nav> element,\n          * however, in mobile mode, react-bootstrap's <Nav> causes the\n          * submenus of this component to be displayed full-screen-width,\n          * and that behavior is not desired here.\n          */}\n        {auth0Config && (\n          <NavLoginButtonAuth0\n            id='login-control'\n            links={accountLinks}\n          />\n        )}\n      </Navbar>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth0Config: getAuth0Config(state.otp.config.persistence)\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNavigationBar)\n"]}