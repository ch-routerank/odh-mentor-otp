{"version":3,"sources":["itinerary-summary.js"],"names":["modeColors","BICYCLE","BUS","CAR","PARK","RAIL","WALK","DEFAULT_COLOR","getModeColor","mode","color","toUpperCase","ItinerarySummary","props","itinerary","LegIcon","blocks","legs","forEach","leg","i","length","transitLeg","title","routeShortName","routeLongName","style","margin","padding","height","width","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","push","Component","PropTypes","object","elementType","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst modeColors = {\n  BICYCLE: '#E0C3E2',\n  BUS: '#CAC3DF',\n  CAR: '#E4CCCC',\n  PARK: '#E4CCCC',\n  RAIL: '#BDDAC0',\n  WALK: '#DFC486'\n}\nconst DEFAULT_COLOR = 'grey'\n\nfunction getModeColor (mode) {\n  if (!mode) return DEFAULT_COLOR\n  let color = modeColors[mode.toUpperCase()]\n  if (typeof color === 'undefined') color = DEFAULT_COLOR\n  return color\n}\n\nexport default class ItinerarySummary extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object,\n    LegIcon: PropTypes.elementType.isRequired\n  }\n\n  render () {\n    const { itinerary, LegIcon } = this.props\n\n    const blocks = []\n    itinerary.legs.forEach((leg, i) => {\n      // Skip mid-itinerary walk transfer legs\n      if (\n        i > 0 &&\n        i < itinerary.legs.length - 1 &&\n        !leg.transitLeg &&\n        itinerary.legs[i - 1].transitLeg &&\n        itinerary.legs[i + 1].transitLeg) {\n        return null\n      }\n\n      // Add the mode icon\n      let title = leg.mode\n      if (leg.transitLeg) {\n        title = leg.routeShortName\n          ? `${leg.routeShortName}${leg.routeLongName ? ` - ${leg.routeLongName}` : ''}`\n          : leg.routeLongName\n      }\n      const style = {\n        margin: '0px',\n        padding: '3px',\n        height: '24px',\n        width: '24px',\n        backgroundColor: getModeColor(leg.mode)\n      }\n      if (i === 0) {\n        style.borderTopLeftRadius = '4px'\n        style.borderBottomLeftRadius = '4px'\n      }\n      if (i === itinerary.legs.length - 1) {\n        style.borderTopRightRadius = '4px'\n        style.borderBottomRightRadius = '4px'\n      }\n      blocks.push(\n        <div\n          style={style}\n          title={title}\n          key={blocks.length}\n          className='summary-block mode-block'\n        >\n          <LegIcon leg={leg} />\n        </div>\n      )\n    })\n\n    return <div className='summary'>{blocks}</div>\n  }\n}\n"]}