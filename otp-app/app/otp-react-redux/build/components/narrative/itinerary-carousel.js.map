{"version":3,"sources":["itinerary-carousel.js"],"names":["ItineraryCarousel","props","onClick","activeItinerary","itineraries","setActiveItinerary","length","index","indexLatest","itineraryClass","hideHeader","pending","user","views","map","itinerary","React","createElement","key","expanded","_onItineraryClick","_onLeftClick","_onRightClick","_onSwipe","Component","PropTypes","array","number","bool","func","setActiveLeg","setActiveStep","companies","string","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","activeLeg","activeStep","currentQuery","timeFormat","coreUtils","time","getTimeFormat","config","loggedInUser","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","sourcesContent":["import coreUtils from '@opentripplanner/core-utils'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport SwipeableViews from 'react-swipeable-views'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport Icon from './icon'\nimport DefaultItinerary from './default/default-itinerary'\nimport Loading from './loading'\nimport { getActiveItineraries, getActiveSearch } from '../../util/state'\n\nclass ItineraryCarousel extends Component {\n  state = {}\n  static propTypes = {\n    itineraries: PropTypes.array,\n    pending: PropTypes.number,\n    activeItinerary: PropTypes.number,\n    hideHeader: PropTypes.bool,\n    itineraryClass: PropTypes.func,\n    onClick: PropTypes.func,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    expanded: PropTypes.bool,\n    companies: PropTypes.string\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  _onItineraryClick = () => {\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n  }\n\n  _onLeftClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === 0 ? itineraries.length - 1 : activeItinerary - 1)\n  }\n\n  _onRightClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === itineraries.length - 1 ? 0 : activeItinerary + 1)\n  }\n\n  _onSwipe = (index, indexLatest) => {\n    this.props.setActiveItinerary(index)\n  }\n\n  render () {\n    const { activeItinerary, itineraries, itineraryClass, hideHeader, pending, user } = this.props\n    if (pending) return <Loading small />\n    if (!itineraries) return null\n\n    const views = itineraries.map((itinerary, index) => {\n      return React.createElement(itineraryClass, {\n        itinerary,\n        index,\n        key: index,\n        expanded: this.props.expanded,\n        onClick: this._onItineraryClick,\n        user,\n        ...this.props\n      })\n    })\n\n    return (\n      <div className='options itinerary'>\n        {hideHeader\n          ? null\n          : <div className='header carousel-header'>\n            <Button\n              className='carousel-left-button carousel-button'\n              disabled={activeItinerary === 0}\n              onClick={this._onLeftClick}>\n              <Icon type='arrow-left' />\n            </Button>\n            <div\n              className='text-center carousel-header-text'>\n              {activeItinerary + 1} of {itineraries.length}\n            </div>\n            <Button\n              disabled={activeItinerary === itineraries.length - 1}\n              className='pull-right carousel-right-button carousel-button'\n              onClick={this._onRightClick}>\n              <Icon type='arrow-right' />\n            </Button>\n          </div>\n        }\n        <SwipeableViews\n          index={activeItinerary}\n          onChangeIndex={this._onSwipe}\n        >{views}</SwipeableViews>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const itineraries = getActiveItineraries(state.otp)\n\n  return {\n    itineraries,\n    pending: activeSearch && activeSearch.pending,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    companies: state.otp.currentQuery.companies,\n    timeFormat: coreUtils.time.getTimeFormat(state.otp.config),\n    user: state.user.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryCarousel)\n"]}