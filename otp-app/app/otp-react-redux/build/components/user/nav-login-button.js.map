{"version":3,"sources":["nav-login-button.js"],"names":["Avatar","styled","img","NavLoginButton","props","className","id","links","onSignInClick","onSignOutClick","profile","style","commonProps","displayedName","nickname","name","picture","email","map","link","i","Component","PropTypes","string","isRequired","arrayOf","linkType","func","shape","mapStateToProps","state","ownProps","mapDispatchToProps","routeTo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,0BAAOC,GAAV,mBAAZ;AAMA;;;;;;;;IAMMC,c;;;;;;;;;;;;;6BAmBM;AAAA,wBASJ,KAAKC,KATD;AAAA,UAENC,SAFM,eAENA,SAFM;AAAA,UAGNC,EAHM,eAGNA,EAHM;AAAA,UAINC,KAJM,eAINA,KAJM;AAAA,UAKNC,aALM,eAKNA,aALM;AAAA,UAMNC,cANM,eAMNA,cANM;AAAA,UAONC,OAPM,eAONA,OAPM;AAAA,UAQNC,KARM,eAQNA,KARM;AAWR,UAAMC,WAAW,GAAG;AAClBP,QAAAA,SAAS,EAATA,SADkB;AAElBC,QAAAA,EAAE,EAAFA,EAFkB;AAGlBK,QAAAA,KAAK,EAALA;AAHkB,OAApB,CAXQ,CAiBR;;AACA,UAAID,OAAJ,EAAa;AACX,YAAMG,aAAa,GAAGH,OAAO,CAACI,QAAR,IAAoBJ,OAAO,CAACK,IAAlD;AACA,4BACE,6BAAC,2BAAD,eACMH,WADN;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,KAAK,eAAE,wDACL,6BAAC,MAAD;AACE,YAAA,GAAG,EAAEC,aADP;AAEE,YAAA,GAAG,EAAEH,OAAO,CAACM,OAFf;AAGE,YAAA,KAAK,YAAKH,aAAL,gBAAwBH,OAAO,CAACO,KAAhC;AAHP,YADK;AAHT,yBAWE,6BAAC,wBAAD;AAAU,UAAA,MAAM;AAAhB,WAAkBJ,aAAlB,CAXF,EAaGN,KAAK,IAAIA,KAAK,CAACW,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,8BAAa,6BAAC,qBAAD;AAAc,YAAA,GAAG,EAAEA,CAAnB;AAAsB,YAAA,IAAI,EAAED;AAA5B,YAAb;AAAA,SAAV,CAbZ,eAeE,6BAAC,wBAAD;AAAU,UAAA,OAAO;AAAjB,UAfF,eAiBE,6BAAC,wBAAD;AAAU,UAAA,QAAQ,EAAEV;AAApB,sBAjBF,CADF;AAqBD,OAzCO,CA2CR;;;AACA,0BACE,6BAAC,uBAAD,eAAaG,WAAb;AAA0B,QAAA,OAAO,EAAEJ;AAAnC,oBADF;AAKD;;;;EApE0Ba,gB,GAuE7B;;;gBAvEMlB,c,eACe;AACjBG,EAAAA,EAAE,EAAEgB,mBAAUC,MAAV,CAAiBC,UADJ;AAEjBjB,EAAAA,KAAK,EAAEe,mBAAUG,OAAV,CAAkBC,sBAAlB,CAFU;AAGjBlB,EAAAA,aAAa,EAAEc,mBAAUK,IAAV,CAAeH,UAHb;AAIjBf,EAAAA,cAAc,EAAEa,mBAAUK,IAAV,CAAeH,UAJd;AAKjBd,EAAAA,OAAO,EAAEY,mBAAUM,KAAV,CAAgB;AACvBX,IAAAA,KAAK,EAAEK,mBAAUC,MAAV,CAAiBC,UADD;AAEvBT,IAAAA,IAAI,EAAEO,mBAAUC,MAAV,CAAiBC,UAFA;AAGvBV,IAAAA,QAAQ,EAAEQ,mBAAUC,MAHG;AAIvBP,IAAAA,OAAO,EAAEM,mBAAUC;AAJI,GAAhB;AALQ,C;;gBADfpB,c,kBAckB;AACpBI,EAAAA,KAAK,EAAE,IADa;AAEpBG,EAAAA,OAAO,EAAE;AAFW,C;;AA2DxB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAPA;AADyB,CAA3B;;eAIe,yBAAQJ,eAAR,EAAyBG,kBAAzB,EAA6C7B,cAA7C,C","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { MenuItem, NavDropdown, NavItem } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nimport { routeTo } from '../../actions/ui'\n\nimport LinkMenuItem, { linkType } from './link-menu-item'\n\nconst Avatar = styled.img`\n  height: 2em;\n  margin: -15px 0;\n  width: 2em;\n`\n\n/**\n * This component displays the sign-in status in the nav bar.\n * - When a user is not logged in: display 'Sign In' as a link or button.\n * - When a user is logged in, display an 'avatar' (retrieved from the profile prop)\n *   and a dropdown button so the user can access more options.\n */\nclass NavLoginButton extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    links: PropTypes.arrayOf(linkType),\n    onSignInClick: PropTypes.func.isRequired,\n    onSignOutClick: PropTypes.func.isRequired,\n    profile: PropTypes.shape({\n      email: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nickname: PropTypes.string,\n      picture: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    links: null,\n    profile: null\n  }\n\n  render () {\n    const {\n      className,\n      id,\n      links,\n      onSignInClick,\n      onSignOutClick,\n      profile,\n      style\n    } = this.props\n\n    const commonProps = {\n      className,\n      id,\n      style\n    }\n\n    // If a profile is passed (a user is logged in), display avatar and drop-down menu.\n    if (profile) {\n      const displayedName = profile.nickname || profile.name\n      return (\n        <NavDropdown\n          {...commonProps}\n          pullRight\n          title={<span>\n            <Avatar\n              alt={displayedName}\n              src={profile.picture}\n              title={`${displayedName}\\n(${profile.email})`}\n            />\n          </span>\n          }>\n          <MenuItem header>{displayedName}</MenuItem>\n\n          {links && links.map((link, i) => <LinkMenuItem key={i} link={link} />)}\n\n          <MenuItem divider />\n\n          <MenuItem onSelect={onSignOutClick}>Sign out</MenuItem>\n        </NavDropdown>\n      )\n    }\n\n    // Display the sign-in link if no profile is passed (user is not logged in).\n    return (\n      <NavItem {...commonProps} onClick={onSignInClick}>\n        Sign in\n      </NavItem>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  routeTo\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavLoginButton)\n"]}