{"version":3,"sources":["trip-notifications-pane.js"],"names":["SmallInfoText","styled","p","TripNotificationsPane","e","onMonitoredTripChange","props","isActive","target","value","excludeFederalHolidays","leadTimeInMinutes","monitoredTrip","_handleIsActiveChange","_handleLeadTimeChange","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,0BAAOC,CAAV,mBAAnB;;IAIMC,qB;;;;;;;;;;;;;;;;4EACoB,UAAAC,CAAC,EAAI;AAAA,UACnBC,qBADmB,GACO,MAAKC,KADZ,CACnBD,qBADmB;AAE3BA,MAAAA,qBAAqB,CAAC;AAAEE,QAAAA,QAAQ,EAAEH,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB;AAA/B,OAAD,CAArB;AACD,K;;sFAEiC,UAAAL,CAAC,EAAI;AAAA,UAC7BC,qBAD6B,GACH,MAAKC,KADF,CAC7BD,qBAD6B;AAErCA,MAAAA,qBAAqB,CAAC;AAAEK,QAAAA,sBAAsB,EAAEN,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB;AAA7C,OAAD,CAArB;AACD,K;;4EAEuB,UAAAL,CAAC,EAAI;AAAA,UACnBC,qBADmB,GACO,MAAKC,KADZ,CACnBD,qBADmB;AAE3BA,MAAAA,qBAAqB,CAAC;AAAEM,QAAAA,iBAAiB,EAAEP,CAAC,CAACI,MAAF,CAASC;AAA9B,OAAD,CAArB;AACD,K;;;;;;;6BAES;AAAA,UACAG,aADA,GACkB,KAAKN,KADvB,CACAM,aADA;AAGR,0BACE,uDACE,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,mEADF,eAEE,6BAAC,qBAAD;AACE,QAAA,OAAO,EAAEA,aAAa,CAACL,QADzB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKM,qBAHjB;AAIE,QAAA,KAAK;AAJP,eAFF,eAUE,6BAAC,qBAAD;AACE,QAAA,OAAO,EAAE,CAACD,aAAa,CAACL,QAD1B;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAE,KAAKM,qBAHjB;AAIE,QAAA,KAAK,EAAE;AAJT,cAVF,eAmBE,6BAAC,aAAD,gIAnBF,CADF,eA0BE,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,iGADF,eAGE,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,2CADF,eAEE,6BAAC,2BAAD;AACE,QAAA,cAAc,EAAC,QADjB;AAEE,QAAA,QAAQ,EAAE,KAAKC,qBAFjB;AAGE,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,KAAK,EAAEF,aAAa,CAACD;AAJvB,sBAME;AAAQ,QAAA,KAAK,EAAE;AAAf,yBANF,eAOE;AAAQ,QAAA,KAAK,EAAE;AAAf,mCAPF,eAQE;AAAQ,QAAA,KAAK,EAAE;AAAf,yBARF,eASE;AAAQ,QAAA,KAAK,EAAE;AAAf,yBATF,CAFF,CAHF,eAkBE,6BAAC,qBAAD;AAAO,QAAA,OAAO,EAAC;AAAf,6CAEE,6BAAC,yBAAD,qBACE,6BAAC,4BAAD,wBADF,eAEE,6BAAC,wBAAD,6DAFF,eAGE,6BAAC,wBAAD,2EAHF,uEAME,6BAAC,2BAAD;AAAa,QAAA,cAAc,EAAC,QAA5B;AAAqC,QAAA,YAAY,EAAE,CAAnD;AAAsD,QAAA,WAAW,EAAC;AAAlE,sBACE;AAAQ,QAAA,KAAK,EAAE;AAAf,4BADF,eAEE;AAAQ,QAAA,KAAK,EAAE;AAAf,mBAFF,eAGE;AAAQ,QAAA,KAAK,EAAE;AAAf,mBAHF,CANF,CAFF,CAlBF,CA1BF,CADF;AAgED;;;;EAnFiCI,gB;;eAsFrBZ,qB","sourcesContent":["import React, { Component } from 'react'\nimport { Alert, Checkbox, ControlLabel, FormControl, FormGroup, Radio } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst SmallInfoText = styled.p`\n  font-size: 80%;\n`\n\nclass TripNotificationsPane extends Component {\n  _handleIsActiveChange = e => {\n    const { onMonitoredTripChange } = this.props\n    onMonitoredTripChange({ isActive: e.target.value === 'true' })\n  }\n\n  _handleExcludeFedHolidaysChange = e => {\n    const { onMonitoredTripChange } = this.props\n    onMonitoredTripChange({ excludeFederalHolidays: e.target.value === 'true' })\n  }\n\n  _handleLeadTimeChange = e => {\n    const { onMonitoredTripChange } = this.props\n    onMonitoredTripChange({ leadTimeInMinutes: e.target.value })\n  }\n\n  render () {\n    const { monitoredTrip } = this.props\n\n    return (\n      <div>\n        <FormGroup>\n          <ControlLabel>Would you like to receive notifications about this trip?</ControlLabel>\n          <Radio\n            checked={monitoredTrip.isActive}\n            name='isActive'\n            onChange={this._handleIsActiveChange}\n            value\n          >\n            Yes\n          </Radio>\n          <Radio\n            checked={!monitoredTrip.isActive}\n            name='isActive'\n            onChange={this._handleIsActiveChange}\n            value={false}\n          >\n            No\n          </Radio>\n\n          <SmallInfoText>\n            {/* TODO: populate either email or SMS below */}\n            Note: you will be notified by [email|SMS]. This can be changed in your account settings once the trip has been saved.\n          </SmallInfoText>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>When would you like to receive notifications about delays or disruptions to your trip?</ControlLabel>\n\n          <FormGroup>\n            <ControlLabel>Check for delays or disruptions:</ControlLabel>\n            <FormControl\n              componentClass='select'\n              onChange={this._handleLeadTimeChange}\n              placeholder='select'\n              value={monitoredTrip.leadTimeInMinutes}\n            >\n              <option value={15}>15 min. prior</option>\n              <option value={30}>30 min. prior (default)</option>\n              <option value={45}>45 min. prior</option>\n              <option value={60}>60 min. prior</option>\n            </FormControl>\n          </FormGroup>\n\n          <Alert bsStyle='warning'>\n                    Under construction!\n            <FormGroup>\n              <ControlLabel>Notify me if:</ControlLabel>\n              <Checkbox>A different route or transfer point is recommended</Checkbox>\n              <Checkbox>There is an alert for a route or stop that is part of my journey</Checkbox>\n\n                      Your arrival or departure time changes by more than:\n              <FormControl componentClass='select' defaultValue={5} placeholder='select'>\n                <option value={5}>5 min. (default)</option>\n                <option value={10}>10 min.</option>\n                <option value={15}>15 min.</option>\n              </FormControl>\n            </FormGroup>\n          </Alert>\n        </FormGroup>\n\n      </div>\n    )\n  }\n}\n\nexport default TripNotificationsPane\n"]}